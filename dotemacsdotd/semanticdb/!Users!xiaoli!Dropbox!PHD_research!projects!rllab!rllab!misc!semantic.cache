;; Object misc/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "misc/"
  :tables
  (list
    (semanticdb-table "instrument.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("re" include nil nil [11 20])
            ("subprocess" include nil nil [21 38])
            ("base64" include nil nil [39 52])
            ("os.path" include nil nil [53 74])
            ("cPickle" include nil nil [75 99])
            ("inspect" include nil nil [100 114])
            ("sys" include nil nil [115 125])
            ("contextlib" include nil nil [126 163])
            ("errno" include nil nil [165 177])
            ("rllab.core.serializable" include nil nil [179 227])
            ("rllab" include nil nil [228 252])
            ("rllab.misc.console" include nil nil [253 291])
            ("rllab.misc" include nil nil [292 318])
            ("StringIO" include nil nil [319 348])
            ("datetime" include nil nil [349 364])
            ("dateutil.tz" include nil nil [365 383])
            ("json" include nil nil [384 395])
            ("numpy" include nil nil [396 414])
            ("rllab.viskit.core" include nil nil [416 453])
            ("StubBase" type
               (:superclasses ("object")
                :members 
                  ( ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [500 504])
                            ("item" variable nil (reparse-symbol function_parameters) [506 510]))                          )
                        (reparse-symbol indented_block_body) [484 592])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [613 617])
                            ("item" variable nil (reparse-symbol function_parameters) [619 623]))                          )
                        (reparse-symbol indented_block_body) [597 864]))                  
                :type "class")
                nil [456 864])
            ("StubAttr" type
               (:superclasses ("StubBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [940 967])
                            ("self" variable nil (reparse-symbol indented_block_body) [976 1015]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [909 913])
                            ("obj" variable nil (reparse-symbol function_parameters) [915 918])
                            ("attr_name" variable nil (reparse-symbol function_parameters) [920 929]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [896 1016])
                    ("obj" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1043 1047]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1021 1087])
                    ("attr_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1120 1124]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1092 1170])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1188 1192])
                            ("args" variable nil (reparse-symbol function_parameters) [1194 1199])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1201 1209]))                          )
                        (reparse-symbol indented_block_body) [1175 1282])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1299 1303]))                          )
                        (reparse-symbol indented_block_body) [1287 1379]))                  
                :type "class")
                nil [866 1379])
            ("StubMethodCall" type
               (:superclasses ("StubBase" "Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1491 1529])
                            ("Serializable" code nil (reparse-symbol indented_block_body) [1538 1577])
                            ("self" variable nil (reparse-symbol indented_block_body) [1586 1600])
                            ("self" variable nil (reparse-symbol indented_block_body) [1609 1639])
                            ("self" variable nil (reparse-symbol indented_block_body) [1648 1664])
                            ("self" variable nil (reparse-symbol indented_block_body) [1673 1693]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1444 1448])
                            ("obj" variable nil (reparse-symbol function_parameters) [1450 1453])
                            ("method_name" variable nil (reparse-symbol function_parameters) [1455 1466])
                            ("args" variable nil (reparse-symbol function_parameters) [1468 1472])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1474 1480]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1431 1694])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1711 1715]))                          )
                        (reparse-symbol indented_block_body) [1699 1854]))                  
                :type "class")
                nil [1381 1854])
            ("StubClass" type
               (:superclasses ("StubBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1928 1958]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1900 1904])
                            ("proxy_class" variable nil (reparse-symbol function_parameters) [1906 1917]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1887 1959])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1977 1981])
                            ("args" variable nil (reparse-symbol function_parameters) [1983 1988])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1990 1998]))                          )
                        (reparse-symbol indented_block_body) [1964 2310])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2332 2336]))                          )
                        (reparse-symbol indented_block_body) [2315 2389])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2411 2415])
                            ("dict" variable nil (reparse-symbol function_parameters) [2417 2421]))                          )
                        (reparse-symbol indented_block_body) [2394 2471])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2492 2496])
                            ("item" variable nil (reparse-symbol function_parameters) [2498 2502]))                          )
                        (reparse-symbol indented_block_body) [2476 2618])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2635 2639]))                          )
                        (reparse-symbol indented_block_body) [2623 2692]))                  
                :type "class")
                nil [1856 2692])
            ("StubObject" type
               (:superclasses ("StubBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [2786 2955])
                            ("self" variable nil (reparse-symbol indented_block_body) [2963 2995])
                            ("self" variable nil (reparse-symbol indented_block_body) [3004 3020])
                            ("self" variable nil (reparse-symbol indented_block_body) [3029 3049]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2739 2743])
                            ("__proxy_class" variable nil (reparse-symbol function_parameters) [2745 2758])
                            ("args" variable nil (reparse-symbol function_parameters) [2760 2765])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2767 2775]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2726 3050])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3072 3076]))                          )
                        (reparse-symbol indented_block_body) [3055 3165])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3187 3191])
                            ("dict" variable nil (reparse-symbol function_parameters) [3193 3197]))                          )
                        (reparse-symbol indented_block_body) [3170 3317])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3338 3342])
                            ("item" variable nil (reparse-symbol function_parameters) [3344 3348]))                          )
                        (reparse-symbol indented_block_body) [3322 3464])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3481 3485]))                          )
                        (reparse-symbol indented_block_body) [3469 3591]))                  
                :type "class")
                nil [2694 3591])
            ("VariantGenerator" type
               (:documentation "
    Usage:

    vg = VariantGenerator()
    vg.add(\"param1\", [1, 2, 3])
    vg.add(\"param2\", ['x', 'y'])
    vg.variants() => # all combinations of [1,2,3] x ['x','y']

    Supports noncyclic dependency among parameters:
    vg = VariantGenerator()
    vg.add(\"param1\", [1, 2, 3])
    vg.add(\"param2\", lambda param1: [param1+1, param1+2])
    vg.variants() => # ..
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4039 4058])
                            ("self" code nil (reparse-symbol indented_block_body) [4067 4092]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4024 4028]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4011 4093])
                    ("add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4106 4110])
                            ("key" variable nil (reparse-symbol function_parameters) [4112 4115])
                            ("vals" variable nil (reparse-symbol function_parameters) [4117 4121])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4123 4131]))                          )
                        (reparse-symbol indented_block_body) [4098 4185])
                    ("_populate_variants" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4213 4217]))                          )
                        (reparse-symbol indented_block_body) [4190 4517])
                    ("variants" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4535 4539])
                            ("randomized" variable nil (reparse-symbol function_parameters) [4541 4551]))                          )
                        (reparse-symbol indented_block_body) [4522 4674])
                    ("to_name_suffix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4698 4702])
                            ("variant" variable nil (reparse-symbol function_parameters) [4704 4711]))                          )
                        (reparse-symbol indented_block_body) [4679 4908])
                    ("ivariants" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4927 4931]))                          )
                        (reparse-symbol indented_block_body) [4913 6243])
                    ("_ivariants_sorted" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6270 6274])
                            ("sorted_keys" variable nil (reparse-symbol function_parameters) [6276 6287]))                          )
                        (reparse-symbol indented_block_body) [6248 7334]))                  
                :type "class")
                nil [3593 7334])
            ("variant" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [7348 7353])
                ("kwargs" variable nil (reparse-symbol function_parameters) [7355 7363]))              ) nil [7336 7573])
            ("stub" function (:arguments 
              ( ("glbs" variable nil (reparse-symbol function_parameters) [7584 7588]))              ) nil [7575 7771])
            ("query_yes_no" function
               (:documentation "Ask a yes/no question via raw_input() and return their answer.

    \"question\" is a string that is presented to the user.
    \"default\" is the presumed answer if the user just hits <Enter>.
        It must be \"yes\" (the default), \"no\" or None (meaning
        an answer is required of the user).

    The \"answer\" return value is True for \"yes\" or False for \"no\".
    "
                :arguments 
                  ( ("question" variable nil (reparse-symbol function_parameters) [7790 7798])
                    ("default" variable nil (reparse-symbol function_parameters) [7800 7807]))                  )
                nil [7773 8892])
            ("exp_count" variable nil nil [8894 8907])
            ("now" variable nil nil [8908 8958])
            ("timestamp" variable nil nil [8959 9004])
            ("remote_confirmed" variable nil nil [9005 9029])
            ("run_experiment_lite" function
               (:documentation "
    Serialize the stubbed method call and run the experiment using the specified mode.
    :param stub_method_call: A stubbed method call.
    :param script: The name of the entrance point python script
    :param mode: Where & how to run the experiment. Should be one of \"local\", \"local_docker\", \"ec2\",
    and \"lab_kube\".
    :param dry: Whether to do a dry-run, which only prints the commands without executing them.
    :param exp_prefix: Name prefix for the experiments
    :param docker_image: name of the docker image. Ignored if using local mode.
    :param aws_config: configuration for AWS. Only used under EC2 mode
    :param env: extra environment variables
    :param kwargs: All other parameters will be passed directly to the entrance python script.
    "
                :arguments 
                  ( ("stub_method_call" variable nil (reparse-symbol function_parameters) [9065 9081])
                    ("batch_tasks" variable nil (reparse-symbol function_parameters) [9096 9107])
                    ("exp_prefix" variable nil (reparse-symbol function_parameters) [9122 9132])
                    ("exp_name" variable nil (reparse-symbol function_parameters) [9155 9163])
                    ("log_dir" variable nil (reparse-symbol function_parameters) [9178 9185])
                    ("script" variable nil (reparse-symbol function_parameters) [9200 9206])
                    ("mode" variable nil (reparse-symbol function_parameters) [9249 9253])
                    ("dry" variable nil (reparse-symbol function_parameters) [9271 9274])
                    ("docker_image" variable nil (reparse-symbol function_parameters) [9290 9302])
                    ("aws_config" variable nil (reparse-symbol function_parameters) [9317 9327])
                    ("env" variable nil (reparse-symbol function_parameters) [9342 9345])
                    ("use_gpu" variable nil (reparse-symbol function_parameters) [9360 9367])
                    ("confirm_remote" variable nil (reparse-symbol function_parameters) [9383 9397])
                    ("terminate_machine" variable nil (reparse-symbol function_parameters) [9412 9429])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [9444 9452]))                  )
                nil [9032 14714])
            ("_find_unsafe" variable nil nil [14716 14775])
            ("ensure_dir" function
               (:documentation "
    Ensure that a named directory exists; if it does not, attempt to create it.
    "
                :arguments 
                  ( ("dirname" variable nil (reparse-symbol function_parameters) [14793 14800]))                  )
                nil [14778 15014])
            ("_shellquote" function
               (:documentation "Return a shell-escaped version of the string *s*."
                :arguments 
                  ( ("s" variable nil (reparse-symbol function_parameters) [15032 15033]))                  )
                nil [15016 15346])
            ("_to_param_val" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [15366 15367]))              ) nil [15348 15536])
            ("to_local_command" function (:arguments 
              ( ("params" variable nil (reparse-symbol function_parameters) [15559 15565])
                ("script" variable nil (reparse-symbol function_parameters) [15567 15573])
                ("use_gpu" variable nil (reparse-symbol function_parameters) [15634 15641]))              ) nil [15538 16187])
            ("to_docker_command" function
               (:documentation "
    :param params: The parameters for the experiment. If logging directory parameters are provided, we will create
    docker volume mapping to make sure that the logging files are created at the correct locations
    :param docker_image: docker image to run the command on
    :param script: script command for running experiment
    :return:
    "
                :arguments 
                  ( ("params" variable nil (reparse-symbol function_parameters) [16211 16217])
                    ("docker_image" variable nil (reparse-symbol function_parameters) [16219 16231])
                    ("script" variable nil (reparse-symbol function_parameters) [16233 16239])
                    ("pre_commands" variable nil (reparse-symbol function_parameters) [16269 16281])
                    ("post_commands" variable nil (reparse-symbol function_parameters) [16310 16323])
                    ("dry" variable nil (reparse-symbol function_parameters) [16330 16333])
                    ("use_gpu" variable nil (reparse-symbol function_parameters) [16341 16348])
                    ("env" variable nil (reparse-symbol function_parameters) [16356 16359])
                    ("local_code_dir" variable nil (reparse-symbol function_parameters) [16366 16380]))                  )
                nil [16189 18216])
            ("dedent" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [18229 18230]))              ) nil [18218 18308])
            ("launch_ec2" function (:arguments 
              ( ("params_list" variable nil (reparse-symbol function_parameters) [18325 18336])
                ("exp_prefix" variable nil (reparse-symbol function_parameters) [18338 18348])
                ("docker_image" variable nil (reparse-symbol function_parameters) [18350 18362])
                ("code_full_path" variable nil (reparse-symbol function_parameters) [18364 18378])
                ("script" variable nil (reparse-symbol function_parameters) [18395 18401])
                ("aws_config" variable nil (reparse-symbol function_parameters) [18446 18456])
                ("dry" variable nil (reparse-symbol function_parameters) [18463 18466])
                ("terminate_machine" variable nil (reparse-symbol function_parameters) [18474 18491])
                ("use_gpu" variable nil (reparse-symbol function_parameters) [18498 18505]))              ) nil [18310 25091])
            ("S3_CODE_PATH" variable nil nil [25093 25112])
            ("s3_sync_code" function (:arguments 
              ( ("config" variable nil (reparse-symbol function_parameters) [25132 25138])
                ("dry" variable nil (reparse-symbol function_parameters) [25140 25143]))              ) nil [25115 26524])
            ("upload_file_to_s3" function (:arguments 
              ( ("script_content" variable nil (reparse-symbol function_parameters) [26548 26562]))              ) nil [26526 26911])
            ("to_lab_kube_pod" function
               (:documentation "
    :param params: The parameters for the experiment. If logging directory parameters are provided, we will create
    docker volume mapping to make sure that the logging files are created at the correct locations
    :param docker_image: docker image to run the command on
    :param script: script command for running experiment
    :return:
    "
                :arguments 
                  ( ("params" variable nil (reparse-symbol function_parameters) [26942 26948])
                    ("docker_image" variable nil (reparse-symbol function_parameters) [26950 26962])
                    ("code_full_path" variable nil (reparse-symbol function_parameters) [26964 26978])
                    ("script" variable nil (reparse-symbol function_parameters) [26988 26994])
                    ("is_gpu" variable nil (reparse-symbol function_parameters) [27024 27030]))                  )
                nil [26913 32345])
            ("concretize" function (:arguments 
              ( ("maybe_stub" variable nil (reparse-symbol function_parameters) [32362 32372]))              ) nil [32347 33894]))          
      :file "instrument.py"
      :pointmax 33894
      :fsize 33893
      :lastmodtime '(22354 18394 0 0)
      :unmatched-syntax '((INDENT_BLOCK 33270 . 33420) (NEWLINE 33269 . 33270) (COLON 33268 . 33269) (TRY 33127 . 33130) (AS 33264 . 33266) (INDENT_BLOCK 25555 . 25635) (NEWLINE 25554 . 25555) (COLON 25553 . 25554) (TRY 25300 . 25303) (AS 25549 . 25551) (INDENT_BLOCK 14591 . 14670) (NEWLINE 14590 . 14591) (COLON 14589 . 14590) (TRY 14498 . 14501) (AS 14585 . 14587) (INDENT_BLOCK 12593 . 12672) (NEWLINE 12592 . 12593) (COLON 12591 . 12592) (TRY 12500 . 12503) (AS 12587 . 12589) (INDENT_BLOCK 11993 . 12096) (NEWLINE 11992 . 11993) (COLON 11991 . 11992) (TRY 11806 . 11809) (AS 11987 . 11989)))
    (semanticdb-table "console.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [1 11])
            ("time" include nil nil [12 23])
            ("os" include nil nil [24 33])
            ("errno" include nil nil [34 46])
            ("shlex" include nil nil [47 59])
            ("pydoc" include nil nil [60 72])
            ("inspect" include nil nil [73 87])
            ("color2num" variable nil nil [89 233])
            ("colorize" function (:arguments 
              ( ("string" variable nil (reparse-symbol function_parameters) [249 255])
                ("color" variable nil (reparse-symbol function_parameters) [257 262])
                ("bold" variable nil (reparse-symbol function_parameters) [264 268])
                ("highlight" variable nil (reparse-symbol function_parameters) [276 285]))              ) nil [236 493])
            ("mkdir_p" function (:arguments 
              ( ("path" variable nil (reparse-symbol function_parameters) [507 511]))              ) nil [495 702])
            ("log" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [712 713]))              ) nil [704 778])
            ("SimpleMessage" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [859 873])
                            ("self" variable nil (reparse-symbol indented_block_body) [882 902]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [827 831])
                            ("msg" variable nil (reparse-symbol function_parameters) [833 836])
                            ("logger" variable nil (reparse-symbol function_parameters) [838 844]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [814 903])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [922 926]))                          )
                        (reparse-symbol indented_block_body) [908 986])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1004 1008])
                            ("etype" variable nil (reparse-symbol function_parameters) [1010 1015])
                            ("args" variable nil (reparse-symbol function_parameters) [1017 1022]))                          )
                        (reparse-symbol indented_block_body) [991 1197]))                  
                :type "class")
                nil [780 1197])
            ("MESSAGE_DEPTH" variable nil nil [1199 1216])
            ("Message" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1280 1294]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1260 1264])
                            ("msg" variable nil (reparse-symbol function_parameters) [1266 1269]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1247 1295])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1314 1318]))                          )
                        (reparse-symbol indented_block_body) [1300 1511])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1529 1533])
                            ("etype" variable nil (reparse-symbol function_parameters) [1535 1540])
                            ("args" variable nil (reparse-symbol function_parameters) [1542 1547]))                          )
                        (reparse-symbol indented_block_body) [1516 1820]))                  
                :type "class")
                nil [1219 1820])
            ("prefix_log" function (:arguments 
              ( ("prefix" variable nil (reparse-symbol function_parameters) [1837 1843])
                ("logger" variable nil (reparse-symbol function_parameters) [1845 1851]))              ) nil [1822 1898])
            ("tee_log" function (:arguments 
              ( ("file_name" variable nil (reparse-symbol function_parameters) [1912 1921]))              ) nil [1900 2066])
            ("collect_args" function nil nil [2068 2246])
            ("type_hint" function (:arguments 
              ( ("arg_name" variable nil (reparse-symbol function_parameters) [2262 2270])
                ("arg_type" variable nil (reparse-symbol function_parameters) [2272 2280]))              ) nil [2248 2503])
            ("tweak" function (:arguments 
              ( ("fun_or_val" variable nil (reparse-symbol function_parameters) [2515 2525])
                ("identifier" variable nil (reparse-symbol function_parameters) [2527 2537]))              ) nil [2505 2666])
            ("tweakval" function (:arguments 
              ( ("val" variable nil (reparse-symbol function_parameters) [2681 2684])
                ("identifier" variable nil (reparse-symbol function_parameters) [2686 2696]))              ) nil [2668 3056])
            ("tweakfun" function
               (:documentation "Make the arguments (or the function itself) tweakable from command line.
    See tests/test_misc_console.py for examples.

    NOTE: this only works for the initial launched process, since other processes
    will get different argv. What this means is that tweak() calls wrapped in a function
    to be invoked in a child process might not behave properly.
    "
                :arguments 
                  ( ("fun" variable nil (reparse-symbol function_parameters) [3071 3074])
                    ("alt" variable nil (reparse-symbol function_parameters) [3076 3079]))                  )
                nil [3058 5513]))          
      :file "console.py"
      :pointmax 5515
      :fsize 5514
      :lastmodtime '(22354 18394 0 0)
      :unmatched-syntax '((NAME 1639 . 1648) (IF 1654 . 1656) (ELSE 1671 . 1675) (NAME 1033 . 1042) (IF 1048 . 1050) (ELSE 1065 . 1069) (INDENT_BLOCK 591 . 702) (NEWLINE 590 . 591) (COLON 574 . 575) (TRY 518 . 521) (AS 568 . 570))))
  :file "!Users!xiaoli!Dropbox!PHD_research!projects!rllab!rllab!misc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
