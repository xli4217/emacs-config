;; Object classic_control/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "classic_control/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("gym.envs.classic_control.cartpole" include nil nil [1 58])
            ("gym.envs.classic_control.mountain_car" include nil nil [59 123])
            ("gym.envs.classic_control.continuous_mountain_car" include nil nil [124 210])
            ("gym.envs.classic_control.pendulum" include nil nil [211 268])
            ("gym.envs.classic_control.acrobot" include nil nil [269 324]))          
      :file "__init__.py"
      :pointmax 326
      :fsize 325
      :lastmodtime '(22791 23400 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "cartpole.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\"
Classic cart-pole system implemented by Rich Sutton et al.
Copied from https://webdocs.cs.ualberta.ca/~sutton/book/code/pole.c
\"\"\"" code nil nil [1 135])
            ("logging" include nil nil [137 151])
            ("math" include nil nil [152 163])
            ("gym" include nil nil [164 174])
            ("gym" include nil nil [175 197])
            ("gym.utils" include nil nil [198 227])
            ("numpy" include nil nil [228 246])
            ("logger" variable nil nil [248 284])
            ("CartPoleEnv" type
               (:superclasses ("gym.Env")
                :members 
                  ( ("metadata" variable nil (reparse-symbol indented_block_body) [318 423])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [457 475])
                            ("self" variable nil (reparse-symbol indented_block_body) [484 503])
                            ("self" variable nil (reparse-symbol indented_block_body) [512 531])
                            ("self" variable nil (reparse-symbol indented_block_body) [540 589])
                            ("self" variable nil (reparse-symbol indented_block_body) [598 615])
                            ("self" variable nil (reparse-symbol indented_block_body) [658 710])
                            ("self" variable nil (reparse-symbol indented_block_body) [719 740])
                            ("self" variable nil (reparse-symbol indented_block_body) [749 764])
                            ("self" code nil (reparse-symbol indented_block_body) [852 905])
                            ("self" variable nil (reparse-symbol indented_block_body) [914 936])
                            ("high" variable nil (reparse-symbol indented_block_body) [1049 1223])
                            ("self" variable nil (reparse-symbol indented_block_body) [1233 1271])
                            ("self" variable nil (reparse-symbol indented_block_body) [1280 1328])
                            ("self" code nil (reparse-symbol indented_block_body) [1338 1350])
                            ("self" variable nil (reparse-symbol indented_block_body) [1359 1377])
                            ("self" variable nil (reparse-symbol indented_block_body) [1386 1403])
                            ("self" variable nil (reparse-symbol indented_block_body) [1413 1442]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [442 446]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [429 1443])
                    ("_seed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1458 1462])
                            ("seed" variable nil (reparse-symbol function_parameters) [1464 1468]))                          )
                        (reparse-symbol indented_block_body) [1448 1553])
                    ("_step" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1568 1572])
                            ("action" variable nil (reparse-symbol function_parameters) [1574 1580]))                          )
                        (reparse-symbol indented_block_body) [1558 3245])
                    ("_reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3261 3265]))                          )
                        (reparse-symbol indented_block_body) [3250 3419])
                    ("_render" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3436 3440])
                            ("mode" variable nil (reparse-symbol function_parameters) [3442 3446])
                            ("close" variable nil (reparse-symbol function_parameters) [3456 3461]))                          )
                        (reparse-symbol indented_block_body) [3424 5468]))                  
                :type "class")
                nil [286 5468]))          
      :file "cartpole.py"
      :pointmax 5468
      :fsize 5467
      :lastmodtime '(22791 23400 0 0)
      :unmatched-syntax '((NAME 1753 . 1758) (IF 1776 . 1778) (ELSE 1789 . 1793)))
    (semanticdb-table "mountain_car.py"
      :file "mountain_car.py"
      :fsize 4262
      :lastmodtime '(22791 23400 0 0))
    (semanticdb-table "continuous_mountain_car.py"
      :file "continuous_mountain_car.py"
      :fsize 5065
      :lastmodtime '(22791 23400 0 0))
    (semanticdb-table "pendulum.py"
      :file "pendulum.py"
      :fsize 2956
      :lastmodtime '(22791 23400 0 0))
    (semanticdb-table "acrobot.py"
      :file "acrobot.py"
      :fsize 10464
      :lastmodtime '(22791 23400 0 0)))
  :file "!Users!xiaoli!Dropbox!PHD_research!projects!RLFPS!gym!gym!envs!classic_control!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
