;; Object services/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "services/"
  :tables
  (list
    (semanticdb-table "will_collide_server.py"
      :major-mode 'python-mode
      :tags 
        '( ("rospy" include nil nil [24 36])
            ("baxter_api.srv" include nil nil [37 65])
            ("moveit_msgs.msg" include nil nil [66 104])
            ("moveit_msgs.srv" include nil nil [105 146])
            ("std_msgs.msg" include nil nil [147 184])
            ("visualization_msgs.msg" include nil nil [185 239])
            ("geometry_msgs.msg" include nil nil [240 281])
            ("numpy" include nil nil [282 300])
            ("WillCollideServer" type
               (:superclasses ("object")
                :members 
                  ( ("'''
    Given start and end joint positions and the name of the obstacle, determine whether a path connecting the joint positions will intersect (collide) with the obstacle
    '''" code nil (reparse-symbol indented_block_body) [411 591])
                    ("__init__" function
                       (:suite 
                          ( ("rospy" code nil (reparse-symbol indented_block_body) [618 656])
                            ("rospy" code nil (reparse-symbol indented_block_body) [666 702])
                            ("try" code nil (reparse-symbol indented_block_body) [712 893])
                            ("self" variable nil (reparse-symbol indented_block_body) [902 927])
                            ("self" variable nil (reparse-symbol indented_block_body) [949 974])
                            ("self" variable nil (reparse-symbol indented_block_body) [985 1007])
                            ("self" variable nil (reparse-symbol indented_block_body) [1017 1112])
                            ("self" variable nil (reparse-symbol indented_block_body) [1122 1173])
                            ("self" variable nil (reparse-symbol indented_block_body) [1182 1521])
                            ("self" variable nil (reparse-symbol indented_block_body) [1540 1583]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [614 618]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [601 1595])
                    ("check_for_table_collision" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1659 1663])
                            ("joint_heights" variable nil (reparse-symbol function_parameters) [1665 1678])
                            ("max_height" variable nil (reparse-symbol function_parameters) [1680 1690]))                          )
                        (reparse-symbol indented_block_body) [1629 1803])
                    ("start_service" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1826 1830]))                          )
                        (reparse-symbol indented_block_body) [1808 1947])
                    ("handle_will_collide" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1976 1980])
                            ("req" variable nil (reparse-symbol function_parameters) [1981 1984]))                          )
                        (reparse-symbol indented_block_body) [1952 3615]))                  
                :type "class")
                nil [373 3615])
            ("if" code nil nil [3617 3698]))          
      :file "will_collide_server.py"
      :pointmax 3698
      :fsize 3697
      :lastmodtime '(23050 1606 492888 200000)
      :unmatched-syntax nil))
  :file "!home!burobotics!baxter_ws!src!baxter_api!src!baxter_api!services!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
