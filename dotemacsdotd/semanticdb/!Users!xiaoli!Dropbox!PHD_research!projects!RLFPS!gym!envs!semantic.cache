;; Object envs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "envs/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("gym.envs.registration" include nil nil [1 65])
            ("register" code nil nil [125 253])
            ("register" code nil nil [255 395])
            ("register" code nil nil [397 574])
            ("register" code nil nil [576 754])
            ("register" code nil nil [756 905])
            ("register" code nil nil [907 1041])
            ("register" code nil nil [1097 1238])
            ("register" code nil nil [1240 1381])
            ("register" code nil nil [1383 1531])
            ("register" code nil nil [1533 1700])
            ("register" code nil nil [1702 1815])
            ("register" code nil nil [1817 1928])
            ("register" code nil nil [1982 2115])
            ("register" code nil nil [2117 2270])
            ("register" code nil nil [2272 2409])
            ("register" code nil nil [2411 2564])
            ("register" code nil nil [2566 2695])
            ("register" code nil nil [2752 2836])
            ("register" code nil nil [2838 3026])
            ("register" code nil nil [3028 3215])
            ("register" code nil nil [3217 3320])
            ("register" code nil nil [3322 3428])
            ("register" code nil nil [3430 3576])
            ("register" code nil nil [3578 3703])
            ("register" code nil nil [3705 3830])
            ("register" code nil nil [3891 4020])
            ("register" code nil nil [4022 4146])
            ("register" code nil nil [4148 4285])
            ("register" code nil nil [4287 4402])
            ("register" code nil nil [4404 4509])
            ("register" code nil nil [4511 4617])
            ("register" code nil nil [4619 4699])
            ("register" code nil nil [4701 4800])
            ("register" code nil nil [4802 4882])
            ("register" code nil nil [4883 4977])
            ("for" code nil nil [5122 8773])
            ("register" code nil nil [8832 9399])
            ("register" code nil nil [9401 9699])
            ("register" code nil nil [9701 9962])
            ("register" code nil nil [10020 10161])
            ("register" code nil nil [10163 10304])
            ("register" code nil nil [10306 10453])
            ("register" code nil nil [10455 10603])
            ("register" code nil nil [10667 10774])
            ("register" code nil nil [10776 10889])
            ("register" code nil nil [10968 11100])
            ("register" code nil nil [11102 11226])
            ("register" code nil nil [11279 11411])
            ("register" code nil nil [11462 11596])
            ("register" code nil nil [11684 11816])
            ("register" code nil nil [11836 11958])
            ("register" code nil nil [11960 12090]))          
      :file "__init__.py"
      :pointmax 12091
      :fsize 12090
      :lastmodtime '(22749 17610 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "registration.py"
      :major-mode 'python-mode
      :tags 
        '( ("logging" include nil nil [1 15])
            ("pkg_resources" include nil nil [16 36])
            ("re" include nil nil [37 46])
            ("sys" include nil nil [47 57])
            ("gym" include nil nil [59 80])
            ("logger" variable nil nil [82 118])
            ("env_id_re" variable nil nil [367 427])
            ("load" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [438 442]))              ) nil [429 570])
            ("EnvSpec" type
               (:documentation "A specification for a particular instance of the environment. Used
    to register the parameters for official evaluations.

    Args:
        id (str): The official environment ID
        entry_point (Optional[str]): The Python entrypoint of the environment class (e.g. module.name:Class)
        timestep_limit (int): The max number of timesteps per episode during training
        trials (int): The number of trials to average reward over
        reward_threshold (Optional[int]): The reward threshold before the task is considered solved
        local_only: True iff the environment is to be used only on the local machine (e.g. debugging envs)
        kwargs (dict): The kwargs to pass to the environment class
        nondeterministic (bool): Whether this environment is non-deterministic even after seeding
        tags (dict[str:any]): A set of arbitrary key-value tags on this environment, including simple property=True tags

    Attributes:
        id (str): The official environment ID
        timestep_limit (int): The max number of timesteps per episode in official evaluation
        trials (int): The number of trials run in official evaluation
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1947 1959])
                            ("self" variable nil (reparse-symbol indented_block_body) [2000 2036])
                            ("self" variable nil (reparse-symbol indented_block_body) [2045 2065])
                            ("self" variable nil (reparse-symbol indented_block_body) [2074 2114])
                            ("self" variable nil (reparse-symbol indented_block_body) [2156 2196])
                            ("if" code nil (reparse-symbol indented_block_body) [2206 2245])
                            ("self" variable nil (reparse-symbol indented_block_body) [2253 2269])
                            ("match" variable nil (reparse-symbol indented_block_body) [2368 2396])
                            ("if" code nil (reparse-symbol indented_block_body) [2405 2578])
                            ("self" variable nil (reparse-symbol indented_block_body) [2586 2617])
                            ("self" variable nil (reparse-symbol indented_block_body) [2626 2657])
                            ("self" variable nil (reparse-symbol indented_block_body) [2666 2695])
                            ("kwargs" code nil (reparse-symbol indented_block_body) [2745 2751]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1788 1792])
                            ("id" variable nil (reparse-symbol function_parameters) [1794 1796])
                            ("entry_point" variable nil (reparse-symbol function_parameters) [1798 1809])
                            ("timestep_limit" variable nil (reparse-symbol function_parameters) [1816 1830])
                            ("trials" variable nil (reparse-symbol function_parameters) [1837 1843])
                            ("reward_threshold" variable nil (reparse-symbol function_parameters) [1849 1865])
                            ("local_only" variable nil (reparse-symbol function_parameters) [1872 1882])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1890 1896])
                            ("nondeterministic" variable nil (reparse-symbol function_parameters) [1903 1919])
                            ("tags" variable nil (reparse-symbol function_parameters) [1927 1931]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1775 2752])
                    ("make" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2766 2770]))                          
                        :documentation "Instantiates an instance of the environment with appropriate kwargs")
                        (reparse-symbol indented_block_body) [2757 3218])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3236 3240]))                          )
                        (reparse-symbol indented_block_body) [3223 3288]))                  
                :type "class")
                nil [571 3288])
            ("EnvRegistry" type
               (:documentation "Register an env by ID. IDs remain stable over time and are
    guaranteed to resolve to the same environment dynamics (or be
    desupported). The goal is that results on a particular environment
    should always be comparable, and not depend on the version of the
    code that was running.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3658 3677]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3643 3647]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3630 3678])
                    ("make" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3692 3696])
                            ("id" variable nil (reparse-symbol function_parameters) [3698 3700]))                          )
                        (reparse-symbol indented_block_body) [3683 3805])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3818 3822]))                          )
                        (reparse-symbol indented_block_body) [3810 3870])
                    ("spec" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3884 3888])
                            ("id" variable nil (reparse-symbol function_parameters) [3890 3892]))                          )
                        (reparse-symbol indented_block_body) [3875 4831])
                    ("register" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4849 4853])
                            ("id" variable nil (reparse-symbol function_parameters) [4855 4857])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4859 4867]))                          )
                        (reparse-symbol indented_block_body) [4836 5024]))                  
                :type "class")
                nil [3290 5024])
            ("registry" variable nil nil [5050 5074])
            ("register" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [5089 5091])
                ("kwargs" variable nil (reparse-symbol function_parameters) [5093 5101]))              ) nil [5076 5147])
            ("make" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [5157 5159]))              ) nil [5148 5191])
            ("spec" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [5201 5203]))              ) nil [5192 5235]))          
      :file "registration.py"
      :pointmax 5235
      :fsize 5234
      :lastmodtime '(22749 17610 0 0)
      :unmatched-syntax '((NAME 2704 . 2708) (IF 2722 . 2724) (ELSE 2740 . 2744))))
  :file "!Users!xiaoli!Dropbox!PHD_research!projects!RLFPS!gym!envs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
