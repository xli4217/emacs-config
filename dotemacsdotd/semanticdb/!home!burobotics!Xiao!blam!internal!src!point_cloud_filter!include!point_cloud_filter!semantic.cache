;; Object point_cloud_filter/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "point_cloud_filter/"
  :tables
  (list
    (semanticdb-table "PointCloudFilter.h"
      :major-mode 'c-mode
      :tags 
        '( ("POINT_CLOUD_FILTER_H" variable (:constant-flag t) nil [1843 1863])
            ("ros/ros.h" include (:system-flag t) nil [1865 1885])
            ("pcl_ros/point_cloud.h" include (:system-flag t) nil [1886 1918])
            ("PointCloudFilter" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1946 1953])
                    ("PointCloud" type
                       (:typedef ("pcl::PointCloud" type
                             (:template-specifier 
                                ( ("pcl::PointXYZ" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [1956 2006])
                    ("PointCloudFilter" function
                       (:prototype-flag t
                        :constructor-flag t
                        :type ("PointCloudFilter" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [2010 2029])
                    ("PointCloudFilter" function
                       (:prototype-flag t
                        :destructor-flag t
                        :type "void")
                        (reparse-symbol classsubparts) [2032 2052])
                    ("Initialize" function
                       (:prototype-flag t
                        :arguments 
                          ( ("n" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ros::NodeHandle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2149 2174]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2133 2175])
                    ("Filter" function
                       (:prototype-flag t
                        :arguments 
                          ( ("points" variable
                               (:reference 1
                                :constant-flag t
                                :type ("PointCloud::ConstPtr" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2227 2262])
                            ("points_filtered" variable (:type ("PointCloud::Ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2277 2309]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2215 2316])
                    ("private" label nil (reparse-symbol classsubparts) [2319 2327])
                    ("LoadParameters" function
                       (:prototype-flag t
                        :arguments 
                          ( ("n" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ros::NodeHandle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2376 2401]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2356 2402])
                    ("RegisterCallbacks" function
                       (:prototype-flag t
                        :arguments 
                          ( ("n" variable
                               (:reference 1
                                :constant-flag t
                                :type ("ros::NodeHandle" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2428 2453]))                          
                        :type "bool")
                        (reparse-symbol classsubparts) [2405 2454])
                    ("name_" variable (:type ("std::string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2480 2498])
                    ("params_" variable (:type ("Parameters" type
                         (:prototype t
                          :type "struct")
                          nil nil)) (reparse-symbol classsubparts) [2502 3355])
                    ("Parameters" type
                       (:members 
                          ( ("grid_filter" variable (:type "bool") (reparse-symbol classsubparts) [2560 2577])
                            ("grid_res" variable (:type "double") (reparse-symbol classsubparts) [2623 2639])
                            ("random_filter" variable (:type "bool") (reparse-symbol classsubparts) [2688 2707])
                            ("decimate_percentage" variable (:type "double") (reparse-symbol classsubparts) [2782 2809])
                            ("outlier_filter" variable (:type "bool") (reparse-symbol classsubparts) [2858 2878])
                            ("outlier_std" variable (:type "double") (reparse-symbol classsubparts) [2973 2992])
                            ("outlier_knn" variable (:type "unsigned int") (reparse-symbol classsubparts) [3060 3085])
                            ("radius_filter" variable (:type "bool") (reparse-symbol classsubparts) [3129 3148])
                            ("radius" variable (:type "double") (reparse-symbol classsubparts) [3188 3202])
                            ("radius_knn" variable (:type "unsigned int") (reparse-symbol classsubparts) [3318 3342]))                          
                        :type "struct")
                        (reparse-symbol classsubparts) [2502 3355]))                  
                :type "class")
                nil [1920 3358]))          
      :file "PointCloudFilter.h"
      :pointmax 3367
      :fsize 3366
      :lastmodtime '(23160 53200 135748 186000)
      :unmatched-syntax nil
      :lexical-table 
        '(("POINT_CLOUD_FILTER_H")
          )
))
  :file "!home!burobotics!Xiao!blam!internal!src!point_cloud_filter!include!point_cloud_filter!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
