;; Object Box2D/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "Box2D/"
  :tables
  (list
    (semanticdb-table "Box2D.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [208 236])
            ("if" code nil nil [237 418])
            ("if" code nil nil [418 1008])
            ("del" code nil nil [1008 1024])
            ("try" code nil nil [1025 1128])
            ("_swig_setattr_nondynamic" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [1159 1163])
                    ("class_type" variable nil (reparse-symbol function_parameters) [1165 1175])
                    ("name" variable nil (reparse-symbol function_parameters) [1177 1181])
                    ("value" variable nil (reparse-symbol function_parameters) [1183 1188])
                    ("static" variable nil (reparse-symbol function_parameters) [1190 1196]))                  )
                nil [1130 1658])
            ("_swig_setattr" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [1678 1682])
                    ("class_type" variable nil (reparse-symbol function_parameters) [1684 1694])
                    ("name" variable nil (reparse-symbol function_parameters) [1696 1700])
                    ("value" variable nil (reparse-symbol function_parameters) [1702 1707]))                  )
                nil [1660 1780])
            ("_swig_getattr_nondynamic" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [1811 1815])
                    ("class_type" variable nil (reparse-symbol function_parameters) [1817 1827])
                    ("name" variable nil (reparse-symbol function_parameters) [1829 1833])
                    ("static" variable nil (reparse-symbol function_parameters) [1835 1841]))                  )
                nil [1782 2120])
            ("_swig_getattr" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [2139 2143])
                    ("class_type" variable nil (reparse-symbol function_parameters) [2145 2155])
                    ("name" variable nil (reparse-symbol function_parameters) [2157 2161]))                  )
                nil [2121 2227])
            ("_swig_repr" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [2244 2248]))                  )
                nil [2229 2437])
            ("try" code nil nil [2438 2555])
            ("_swig_setattr_nondynamic_method" function (:arguments 
              ( ("set" variable nil (reparse-symbol function_parameters) [2594 2597]))              ) nil [2558 2905])
            ("try" code nil nil [2907 3005])
            ("_dir_filter" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [3024 3028]))                  
                :documentation "
    Using introspection, mimic dir() by adding up all of the __dicts__
    for the current class and all base classes (type(self).__mro__ returns
    all of the classes that make it up)
    Basically filters by:
        __x__ OK
        __x bad
        _classname bad
    ")
                nil [3008 3876])
            ("_init_kwargs" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [3896 3900])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [3902 3910]))                  )
                nil [3879 4348])
            ("_init_jointdef_kwargs" function
               (:parent "dummy"
                :arguments 
                  ( ("self" variable nil (reparse-symbol function_parameters) [4375 4379])
                    ("bodyA" variable nil (reparse-symbol function_parameters) [4381 4386])
                    ("bodyB" variable nil (reparse-symbol function_parameters) [4393 4398])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [4405 4413]))                  )
                nil [4349 4611])
            ("_repr_attrs" variable nil nil [4613 15597])
            ("MAX_REPR_DEPTH" variable nil nil [15599 15617])
            ("MAX_REPR_STR_LEN" variable nil nil [15618 15640])
            ("MAX_REPR_SUB_LINES" variable nil nil [15641 15664])
            ("REPR_INDENT" variable nil nil [15665 15680])
            ("_repr_state" variable nil nil [15682 15698])
            ("_format_repr" function
               (:documentation "
    Dynamically creates the object representation string for `obj`.

    Attributes found in _repr_attrs[class_name] will be included.
    "
                :arguments 
                  ( ("obj" variable nil (reparse-symbol function_parameters) [15716 15719]))                  )
                nil [15699 18070])
            ("__jointeq" function
               (:documentation "__jointeq(b2Joint a, b2Joint b) -> bool"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [18086 18087])
                    ("b" variable nil (reparse-symbol function_parameters) [18089 18090]))                  )
                nil [18072 18177])
            ("__bodyeq" function
               (:documentation "__bodyeq(b2Body a, b2Body b) -> bool"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [18191 18192])
                    ("b" variable nil (reparse-symbol function_parameters) [18194 18195]))                  )
                nil [18178 18278])
            ("__shapeeq" function
               (:documentation "__shapeeq(b2Shape a, b2Shape b) -> bool"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [18293 18294])
                    ("b" variable nil (reparse-symbol function_parameters) [18296 18297]))                  )
                nil [18279 18384])
            ("__fixtureeq" function
               (:documentation "__fixtureeq(b2Fixture a, b2Fixture b) -> bool"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [18401 18402])
                    ("b" variable nil (reparse-symbol function_parameters) [18404 18405]))                  )
                nil [18385 18500])
            ("__b2ComputeCentroid" function
               (:documentation "__b2ComputeCentroid(b2Vec2 vs, int32 count) -> b2Vec2"
                :arguments 
                  ( ("vs" variable nil (reparse-symbol function_parameters) [18525 18527])
                    ("count" variable nil (reparse-symbol function_parameters) [18529 18534]))                  )
                nil [18501 18650])
            ("b2CheckVertices" function
               (:documentation "b2CheckVertices(b2Vec2 vertices, int32 count, bool additional_checks=True) -> bool"
                :arguments 
                  ( ("vertices" variable nil (reparse-symbol function_parameters) [18671 18679])
                    ("count" variable nil (reparse-symbol function_parameters) [18681 18686])
                    ("additional_checks" variable nil (reparse-symbol function_parameters) [18688 18705]))                  )
                nil [18651 18876])
            ("b2CheckPolygon" function
               (:documentation "b2CheckPolygon(b2PolygonShape shape, bool additional_checks=True) -> bool"
                :arguments 
                  ( ("shape" variable nil (reparse-symbol function_parameters) [18896 18901])
                    ("additional_checks" variable nil (reparse-symbol function_parameters) [18903 18920]))                  )
                nil [18877 19071])
            ("_Box2D" code nil nil [19072 19110])
            ("RAND_LIMIT" variable nil nil [19111 19141])
            ("b2Random" function
               (:documentation "
    b2Random() -> float32
    b2Random(float32 lo, float32 hi) -> float32
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [19156 19161]))                  )
                nil [19143 19288])
            ("b2_epsilon" variable nil nil [19289 19317])
            ("_indexable_generator" type
               (:superclasses ("list")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("list" code nil (reparse-symbol indented_block_body) [19391 19410])
                            ("self" variable nil (reparse-symbol indented_block_body) [19419 19433])
                            ("self" variable nil (reparse-symbol indented_block_body) [19442 19459]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19370 19374])
                            ("iter" variable nil (reparse-symbol function_parameters) [19376 19380]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [19357 19460])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19476 19480]))                          )
                        (reparse-symbol indented_block_body) [19464 19571])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19588 19592]))                          )
                        (reparse-symbol indented_block_body) [19575 19704])
                    ("__fill_list__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19726 19730]))                          )
                        (reparse-symbol indented_block_body) [19708 19819])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19839 19843])
                            ("i" variable nil (reparse-symbol function_parameters) [19845 19846]))                          
                        :documentation "Support indexing positive/negative elements of the generator,
        but no slices. If you want those, use list(generator)")
                        (reparse-symbol indented_block_body) [19823 20346]))                  
                :type "class")
                nil [19319 20346])
            ("_generator_from_linked_list" function (:arguments 
              ( ("first" variable nil (reparse-symbol function_parameters) [20379 20384]))              ) nil [20347 20489])
            ("_list_from_linked_list" function (:arguments 
              ( ("first" variable nil (reparse-symbol function_parameters) [20517 20522]))              ) nil [20490 20751])
            ("b2ShapeCompare" function (:arguments 
              ( ("a" variable nil (reparse-symbol function_parameters) [20820 20821])
                ("b" variable nil (reparse-symbol function_parameters) [20823 20824]))              ) nil [20801 20940])
            ("b2BodyCompare" function (:arguments 
              ( ("a" variable nil (reparse-symbol function_parameters) [20958 20959])
                ("b" variable nil (reparse-symbol function_parameters) [20961 20962]))              ) nil [20940 21075])
            ("b2JointCompare" function (:arguments 
              ( ("a" variable nil (reparse-symbol function_parameters) [21094 21095])
                ("b" variable nil (reparse-symbol function_parameters) [21097 21098]))              ) nil [21075 21214])
            ("b2FixtureCompare" function (:arguments 
              ( ("a" variable nil (reparse-symbol function_parameters) [21235 21236])
                ("b" variable nil (reparse-symbol function_parameters) [21238 21239]))              ) nil [21214 21361])
            ("_b2Distance" function
               (:documentation "
    _b2Distance(b2Shape shapeA, int idxA, b2Shape shapeB, int idxB, b2Transform transformA, b2Transform transformB, bool useRadii=True) -> b2DistanceOutput
    _b2Distance(b2DistanceInput input) -> b2DistanceOutput
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [21380 21385]))                  )
                nil [21364 21656])
            ("collections" include nil nil [21657 21675])
            ("b2DistanceResult" variable nil nil [21677 21818])
            ("b2Distance" function
               (:documentation "
    Compute the closest points between two shapes.

    Can be called one of two ways:
    + b2Distance(b2DistanceInput)
    This uses the b2DistanceInput structure, where you define your own
    distance proxies

    Or more conveniently using kwargs:
    + b2Distance(shapeA=.., idxA=0, shapeB=.., idxB=0, transformA=..,
                 transformB=.., useRadii=True)

    Returns a namedtuple in the form:
        b2DistanceResult(pointA=(ax, ay), pointB=(bx, by), distance,
                         iterations)
    "
                :arguments 
                  ( ("shapeA" variable nil (reparse-symbol function_parameters) [21835 21841])
                    ("idxA" variable nil (reparse-symbol function_parameters) [21848 21852])
                    ("shapeB" variable nil (reparse-symbol function_parameters) [21856 21862])
                    ("idxB" variable nil (reparse-symbol function_parameters) [21869 21873])
                    ("transformA" variable nil (reparse-symbol function_parameters) [21877 21887])
                    ("transformB" variable nil (reparse-symbol function_parameters) [21894 21904])
                    ("useRadii" variable nil (reparse-symbol function_parameters) [21911 21919]))                  )
                nil [21820 22849])
            ("b2GetPointStates" function
               (:documentation "
    b2GetPointStates(b2Manifold manifold1, b2Manifold manifold2) -> PyObject *

    Compute the point states given two manifolds. The states pertain to the transition from manifold1 to manifold2. So state1 is either persist or remove while state2 is either add or persist.
    "
                :arguments 
                  ( ("manifold1" variable nil (reparse-symbol function_parameters) [22872 22881])
                    ("manifold2" variable nil (reparse-symbol function_parameters) [22883 22892]))                  )
                nil [22851 23241])
            ("b2ContactPoint" type
               (:documentation "Proxy of C++ b2ContactPoint class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [23319 23422])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [23427 23448])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [23492 23556])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [23565 23593]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [23467 23471])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [23473 23481]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [23454 23594])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [23600 23647])
                    ("fixtureA" variable nil (reparse-symbol indented_block_body) [23652 23749])
                    ("fixtureB" variable nil (reparse-symbol indented_block_body) [23754 23851])
                    ("normal" variable nil (reparse-symbol indented_block_body) [23856 23947])
                    ("position" variable nil (reparse-symbol indented_block_body) [23952 24049])
                    ("state" variable nil (reparse-symbol indented_block_body) [24054 24142])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [24148 24169])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24189 24193]))                          
                        :documentation "__hash__(b2ContactPoint self) -> long")
                        (reparse-symbol indented_block_body) [24176 24300])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [24319 24323]))                          )
                        (reparse-symbol indented_block_body) [24306 24361]))                  
                :type "class")
                nil [23241 24361])
            ("b2ContactPoint" variable nil nil [24362 24460])
            ("b2ContactPoint_swigregister" variable nil nil [24461 24525])
            ("b2ContactPoint_swigregister" code nil nil [24526 24569])
            ("b2Globals" variable nil nil [24570 24598])
            ("_b2TimeOfImpact" function
               (:documentation "
    _b2TimeOfImpact(b2Shape shapeA, int idxA, b2Shape shapeB, int idxB, b2Sweep sweepA, b2Sweep sweepB, float32 tMax) -> b2TOIOutput
    _b2TimeOfImpact(b2TOIInput input) -> b2TOIOutput
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [24621 24626]))                  )
                nil [24601 24872])
            ("b2TimeOfImpact" function
               (:documentation "
    Compute the upper bound on time before two shapes penetrate. Time is represented as
    a fraction between [0,tMax]. This uses a swept separating axis and may miss some intermediate,
    non-tunneling collision. If you change the time interval, you should call this function
    again.
    Note: use b2Distance to compute the contact point and normal at the time of impact.

    Can be called one of several ways:
    + b2TimeOfImpact(b2TOIInput) # utilizes the b2TOIInput structure, where you define your own proxies

    Or utilizing kwargs:
    + b2TimeOfImpact(shapeA=a, shapeB=b, idxA=0, idxB=0, sweepA=sa, sweepB=sb, tMax=t)
    Where idxA and idxB are optional and used only if the shapes are loops (they indicate which section to use.)
    sweep[A,B] are of type b2Sweep.

    Returns a tuple in the form:
    (output state, time of impact)

    Where output state is in b2TOIOutput.[
            e_unknown, 
            e_failed,
            e_overlapped,
            e_touching,
            e_separated ]
    "
                :arguments 
                  ( ("shapeA" variable nil (reparse-symbol function_parameters) [24892 24898])
                    ("idxA" variable nil (reparse-symbol function_parameters) [24905 24909])
                    ("shapeB" variable nil (reparse-symbol function_parameters) [24913 24919])
                    ("idxB" variable nil (reparse-symbol function_parameters) [24926 24930])
                    ("sweepA" variable nil (reparse-symbol function_parameters) [24934 24940])
                    ("sweepB" variable nil (reparse-symbol function_parameters) [24947 24953])
                    ("tMax" variable nil (reparse-symbol function_parameters) [24960 24964]))                  )
                nil [24873 26235])
            ("b2AssertException" type
               (:documentation "Proxy of C++ b2AssertException class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [26320 26423])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [26428 26449])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [26455 26476])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26496 26500]))                          
                        :documentation "__hash__(b2AssertException self) -> long")
                        (reparse-symbol indented_block_body) [26483 26613])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26632 26636]))                          )
                        (reparse-symbol indented_block_body) [26619 26674])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(b2AssertException self) -> b2AssertException\"\"\"" code nil (reparse-symbol indented_block_body) [26708 26767])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [26776 26847]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26693 26697]))                          
                        :documentation "__init__(b2AssertException self) -> b2AssertException"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [26680 26848])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [26852 26902]))                  
                :type "class")
                nil [26236 26903])
            ("b2AssertException" variable nil nil [26903 27010])
            ("b2AssertException_swigregister" variable nil nil [27011 27081])
            ("b2AssertException_swigregister" code nil nil [27082 27131])
            ("_Box2D" code nil nil [27134 27167])
            ("b2_pi" variable nil nil [27168 27188])
            ("_Box2D" code nil nil [27190 27238])
            ("b2_maxManifoldPoints" variable nil nil [27239 27289])
            ("_Box2D" code nil nil [27291 27340])
            ("b2_maxPolygonVertices" variable nil nil [27341 27393])
            ("_Box2D" code nil nil [27395 27439])
            ("b2_aabbExtension" variable nil nil [27440 27482])
            ("_Box2D" code nil nil [27484 27529])
            ("b2_aabbMultiplier" variable nil nil [27530 27574])
            ("_Box2D" code nil nil [27576 27617])
            ("b2_linearSlop" variable nil nil [27618 27654])
            ("_Box2D" code nil nil [27656 27698])
            ("b2_angularSlop" variable nil nil [27699 27737])
            ("_Box2D" code nil nil [27739 27783])
            ("b2_polygonRadius" variable nil nil [27784 27826])
            ("_Box2D" code nil nil [27828 27870])
            ("b2_maxSubSteps" variable nil nil [27871 27909])
            ("_Box2D" code nil nil [27911 27956])
            ("b2_maxTOIContacts" variable nil nil [27957 28001])
            ("_Box2D" code nil nil [28003 28051])
            ("b2_velocityThreshold" variable nil nil [28052 28102])
            ("_Box2D" code nil nil [28104 28154])
            ("b2_maxLinearCorrection" variable nil nil [28155 28209])
            ("_Box2D" code nil nil [28211 28262])
            ("b2_maxAngularCorrection" variable nil nil [28263 28319])
            ("_Box2D" code nil nil [28321 28366])
            ("b2_maxTranslation" variable nil nil [28367 28411])
            ("_Box2D" code nil nil [28413 28465])
            ("b2_maxTranslationSquared" variable nil nil [28466 28524])
            ("_Box2D" code nil nil [28526 28568])
            ("b2_maxRotation" variable nil nil [28569 28607])
            ("_Box2D" code nil nil [28609 28658])
            ("b2_maxRotationSquared" variable nil nil [28659 28711])
            ("_Box2D" code nil nil [28713 28753])
            ("b2_baumgarte" variable nil nil [28754 28788])
            ("_Box2D" code nil nil [28790 28832])
            ("b2_toiBaugarte" variable nil nil [28833 28871])
            ("_Box2D" code nil nil [28873 28915])
            ("b2_timeToSleep" variable nil nil [28916 28954])
            ("_Box2D" code nil nil [28956 29007])
            ("b2_linearSleepTolerance" variable nil nil [29008 29064])
            ("_Box2D" code nil nil [29066 29118])
            ("b2_angularSleepTolerance" variable nil nil [29119 29177])
            ("b2Alloc" function
               (:documentation "
    b2Alloc(int32 size) -> void *

    Implement this function to use your own memory allocator.
    "
                :arguments 
                  ( ("size" variable nil (reparse-symbol function_parameters) [29191 29195]))                  )
                nil [29179 29343])
            ("b2Free" function
               (:documentation "
    b2Free(void * mem)

    If you implement b2Alloc, you should also implement this function.
    "
                :arguments 
                  ( ("mem" variable nil (reparse-symbol function_parameters) [29355 29358]))                  )
                nil [29344 29502])
            ("b2Log" function
               (:documentation "b2Log(char const * string)"
                :arguments 
                  ( ("string" variable nil (reparse-symbol function_parameters) [29513 29519]))                  )
                nil [29503 29591])
            ("b2Version" type
               (:documentation "Version numbering scheme. See http://en.wikipedia.org/wiki/Software_versioning"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [29709 29812])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [29817 29838])
                    ("major" variable nil (reparse-symbol indented_block_body) [29843 29921])
                    ("minor" variable nil (reparse-symbol indented_block_body) [29926 30004])
                    ("revision" variable nil (reparse-symbol indented_block_body) [30009 30096])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [30102 30123])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30143 30147]))                          
                        :documentation "__hash__(b2Version self) -> long")
                        (reparse-symbol indented_block_body) [30130 30244])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30263 30267]))                          )
                        (reparse-symbol indented_block_body) [30250 30305])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30324 30328]))                          )
                        (reparse-symbol indented_block_body) [30311 30410])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [30454 30508])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [30517 30545]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [30429 30433])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [30435 30443]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [30416 30546])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [30552 30594]))                  
                :type "class")
                nil [29591 30595])
            ("b2Version" variable nil nil [30595 30678])
            ("b2Version_swigregister" variable nil nil [30679 30733])
            ("b2Version_swigregister" code nil nil [30734 30767])
            ("b2IsValid" function
               (:documentation "
    b2IsValid(float32 x) -> bool

    This function is used to ensure that a floating point number is not a NaN or infinity.
    "
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [30784 30785]))                  )
                nil [30770 30960])
            ("b2InvSqrt" function
               (:documentation "
    b2InvSqrt(float32 x) -> float32

    This is a approximate yet fast inverse square-root.
    "
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [30975 30976]))                  )
                nil [30961 31119])
            ("b2Vec2" type
               (:documentation "A 2D column vector."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [31175 31278])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [31283 31304])
                    ("SetZero" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31322 31326]))                          
                        :documentation "
        SetZero(b2Vec2 self)

        Set this vector to all zeros.
        ")
                        (reparse-symbol indented_block_body) [31310 31464])
                    ("Set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31478 31482])
                            ("x_" variable nil (reparse-symbol function_parameters) [31484 31486])
                            ("y_" variable nil (reparse-symbol function_parameters) [31488 31490]))                          
                        :documentation "
        Set(b2Vec2 self, float32 x_, float32 y_)

        Set this vector to some specified coordinates.
        ")
                        (reparse-symbol indented_block_body) [31470 31669])
                    ("__neg__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31687 31691]))                          
                        :documentation "__neg__(b2Vec2 self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [31675 31782])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [31801 31805])
                            ("args" variable nil (reparse-symbol function_parameters) [31807 31812]))                          
                        :documentation "
        __call__(b2Vec2 self, int32 i) -> float32
        __call__(b2Vec2 self, int32 i) -> float32 &
        ")
                        (reparse-symbol indented_block_body) [31788 31992])
                    ("__add_vector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32015 32019])
                            ("v" variable nil (reparse-symbol function_parameters) [32021 32022]))                          
                        :documentation "__add_vector(b2Vec2 self, b2Vec2 v)")
                        (reparse-symbol indented_block_body) [31998 32126])
                    ("__sub_vector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32149 32153])
                            ("v" variable nil (reparse-symbol function_parameters) [32155 32156]))                          
                        :documentation "__sub_vector(b2Vec2 self, b2Vec2 v)")
                        (reparse-symbol indented_block_body) [32132 32260])
                    ("__mul_float" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32282 32286])
                            ("a" variable nil (reparse-symbol function_parameters) [32288 32289]))                          
                        :documentation "__mul_float(b2Vec2 self, float32 a)")
                        (reparse-symbol indented_block_body) [32266 32392])
                    ("__Length" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32411 32415]))                          
                        :documentation "
        __Length(b2Vec2 self) -> float32

        Get the length of this vector (the norm).
        ")
                        (reparse-symbol indented_block_body) [32398 32578])
                    ("__LengthSquared" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32604 32608]))                          
                        :documentation "
        __LengthSquared(b2Vec2 self) -> float32

        Get the length squared. For performance, use this instead of  b2Vec2::Length(if possible).
        ")
                        (reparse-symbol indented_block_body) [32584 32834])
                    ("Normalize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [32854 32858]))                          
                        :documentation "
        Normalize(b2Vec2 self) -> float32

        Convert this vector into a unit vector. Returns the length.
        ")
                        (reparse-symbol indented_block_body) [32840 33041])
                    ("__IsValid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33061 33065]))                          
                        :documentation "
        __IsValid(b2Vec2 self) -> bool

        Does this vector contain finite coordinates?
        ")
                        (reparse-symbol indented_block_body) [33047 33230])
                    ("__Skew" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33247 33251]))                          
                        :documentation "
        __Skew(b2Vec2 self) -> b2Vec2

        Get the skew vector such that dot(skew_vec, other) == cross(vec, other)
        ")
                        (reparse-symbol indented_block_body) [33236 33439])
                    ("x" variable nil (reparse-symbol indented_block_body) [33444 33504])
                    ("y" variable nil (reparse-symbol indented_block_body) [33509 33569])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [33575 33596])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33616 33620]))                          
                        :documentation "__hash__(b2Vec2 self) -> long")
                        (reparse-symbol indented_block_body) [33603 33711])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33730 33734]))                          )
                        (reparse-symbol indented_block_body) [33717 33772])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Vec2 self, float32 x, float32 y) -> b2Vec2
        __init__(b2Vec2 self) -> b2Vec2
        __init__(b2Vec2 self, b2Vec2 other) -> b2Vec2

        Construct using coordinates.
        \"\"\"" code nil (reparse-symbol indented_block_body) [33813 34022])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [34031 34085]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [33791 33795])
                            ("args" variable nil (reparse-symbol function_parameters) [33797 33802]))                          
                        :documentation "
        __init__(b2Vec2 self, float32 x, float32 y) -> b2Vec2
        __init__(b2Vec2 self) -> b2Vec2
        __init__(b2Vec2 self, b2Vec2 other) -> b2Vec2

        Construct using coordinates.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [33778 34086])
                    ("__iter__" variable nil (reparse-symbol indented_block_body) [34091 34139])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [34144 34190])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [34195 34244])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34262 34266]))                          )
                        (reparse-symbol indented_block_body) [34249 34319])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34335 34339]))                          )
                        (reparse-symbol indented_block_body) [34323 34359])
                    ("__neg__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34375 34379]))                          )
                        (reparse-symbol indented_block_body) [34363 34422])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34435 34439]))                          
                        :documentation "
        Return a copy of the vector.
        Remember that the following:
            a = b2Vec2()
            b = a
        Does not copy the vector itself, but b now refers to a.
        ")
                        (reparse-symbol indented_block_body) [34426 34685])
                    ("__copy__" variable nil (reparse-symbol indented_block_body) [34689 34704])
                    ("__iadd__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34723 34727])
                            ("other" variable nil (reparse-symbol function_parameters) [34729 34734]))                          )
                        (reparse-symbol indented_block_body) [34710 34790])
                    ("__isub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34807 34811])
                            ("other" variable nil (reparse-symbol function_parameters) [34813 34818]))                          )
                        (reparse-symbol indented_block_body) [34794 34874])
                    ("__imul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34891 34895])
                            ("a" variable nil (reparse-symbol function_parameters) [34897 34898]))                          )
                        (reparse-symbol indented_block_body) [34878 34949])
                    ("__itruediv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [34970 34974])
                            ("a" variable nil (reparse-symbol function_parameters) [34976 34977]))                          )
                        (reparse-symbol indented_block_body) [34953 35028])
                    ("__idiv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35045 35049])
                            ("a" variable nil (reparse-symbol function_parameters) [35051 35052]))                          )
                        (reparse-symbol indented_block_body) [35032 35103])
                    ("__set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35117 35121])
                            ("x" variable nil (reparse-symbol function_parameters) [35123 35124])
                            ("y" variable nil (reparse-symbol function_parameters) [35126 35127]))                          )
                        (reparse-symbol indented_block_body) [35107 35168])
                    ("__nonzero__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35188 35192]))                          )
                        (reparse-symbol indented_block_body) [35172 35237])
                    ("tuple" variable nil (reparse-symbol indented_block_body) [35242 35329])
                    ("length" variable nil (reparse-symbol indented_block_body) [35334 35367])
                    ("lengthSquared" variable nil (reparse-symbol indented_block_body) [35372 35419])
                    ("valid" variable nil (reparse-symbol indented_block_body) [35424 35457])
                    ("skew" variable nil (reparse-symbol indented_block_body) [35462 35491])
                    ("cross" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35510 35514])
                            ("args" variable nil (reparse-symbol function_parameters) [35516 35521]))                          
                        :documentation "
        cross(b2Vec2 self, b2Vec2 other) -> float32
        cross(b2Vec2 self, float32 s) -> b2Vec2
        ")
                        (reparse-symbol indented_block_body) [35500 35696])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35718 35722])
                            ("i" variable nil (reparse-symbol function_parameters) [35724 35725]))                          
                        :documentation "__getitem__(b2Vec2 self, int i) -> float32")
                        (reparse-symbol indented_block_body) [35702 35835])
                    ("__setitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [35857 35861])
                            ("i" variable nil (reparse-symbol function_parameters) [35863 35864])
                            ("value" variable nil (reparse-symbol function_parameters) [35866 35871]))                          
                        :documentation "__setitem__(b2Vec2 self, int i, float32 value)")
                        (reparse-symbol indented_block_body) [35841 35992])
                    ("__equ" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36008 36012])
                            ("other" variable nil (reparse-symbol function_parameters) [36014 36019]))                          
                        :documentation "__equ(b2Vec2 self, b2Vec2 other) -> bool")
                        (reparse-symbol indented_block_body) [35998 36125])
                    ("dot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36139 36143])
                            ("other" variable nil (reparse-symbol function_parameters) [36145 36150]))                          
                        :documentation "dot(b2Vec2 self, b2Vec2 other) -> float32")
                        (reparse-symbol indented_block_body) [36131 36255])
                    ("__truediv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36277 36281])
                            ("a" variable nil (reparse-symbol function_parameters) [36283 36284]))                          
                        :documentation "__truediv__(b2Vec2 self, float32 a) -> b2Vec2")
                        (reparse-symbol indented_block_body) [36261 36397])
                    ("__div__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36415 36419])
                            ("a" variable nil (reparse-symbol function_parameters) [36421 36422]))                          
                        :documentation "__div__(b2Vec2 self, float32 a) -> b2Vec2")
                        (reparse-symbol indented_block_body) [36403 36527])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36545 36549])
                            ("a" variable nil (reparse-symbol function_parameters) [36551 36552]))                          
                        :documentation "__mul__(b2Vec2 self, float32 a) -> b2Vec2")
                        (reparse-symbol indented_block_body) [36533 36657])
                    ("__add__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36675 36679])
                            ("other" variable nil (reparse-symbol function_parameters) [36681 36686]))                          
                        :documentation "__add__(b2Vec2 self, b2Vec2 other) -> b2Vec2")
                        (reparse-symbol indented_block_body) [36663 36798])
                    ("__sub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36816 36820])
                            ("other" variable nil (reparse-symbol function_parameters) [36822 36827]))                          
                        :documentation "__sub__(b2Vec2 self, b2Vec2 other) -> b2Vec2")
                        (reparse-symbol indented_block_body) [36804 36939])
                    ("__rmul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [36958 36962])
                            ("a" variable nil (reparse-symbol function_parameters) [36964 36965]))                          
                        :documentation "__rmul__(b2Vec2 self, float32 a) -> b2Vec2")
                        (reparse-symbol indented_block_body) [36945 37072])
                    ("__rdiv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37091 37095])
                            ("a" variable nil (reparse-symbol function_parameters) [37097 37098]))                          
                        :documentation "__rdiv__(b2Vec2 self, float32 a) -> b2Vec2")
                        (reparse-symbol indented_block_body) [37078 37205])
                    ("__div_float" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [37227 37231])
                            ("a" variable nil (reparse-symbol function_parameters) [37233 37234]))                          
                        :documentation "__div_float(b2Vec2 self, float32 a)")
                        (reparse-symbol indented_block_body) [37211 37337])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [37342 37381]))                  
                :type "class")
                nil [31119 37382])
            ("b2Vec2" variable nil nil [37382 37454])
            ("b2Vec2" variable nil nil [37455 37519])
            ("b2Vec2" variable nil nil [37520 37592])
            ("b2Vec2" variable nil nil [37593 37667])
            ("b2Vec2" variable nil nil [37668 37750])
            ("b2Vec2" variable nil nil [37751 37833])
            ("b2Vec2" variable nil nil [37834 37914])
            ("b2Vec2" variable nil nil [37915 37989])
            ("b2Vec2" variable nil nil [37990 38078])
            ("b2Vec2" variable nil nil [38079 38155])
            ("b2Vec2" variable nil nil [38156 38232])
            ("b2Vec2" variable nil nil [38233 38303])
            ("b2Vec2" variable nil nil [38304 38378])
            ("b2Vec2" variable nil nil [38379 38447])
            ("b2Vec2" variable nil nil [38448 38528])
            ("b2Vec2" variable nil nil [38529 38609])
            ("b2Vec2" variable nil nil [38610 38678])
            ("b2Vec2" variable nil nil [38679 38743])
            ("b2Vec2" variable nil nil [38744 38824])
            ("b2Vec2" variable nil nil [38825 38897])
            ("b2Vec2" variable nil nil [38898 38970])
            ("b2Vec2" variable nil nil [38971 39043])
            ("b2Vec2" variable nil nil [39044 39116])
            ("b2Vec2" variable nil nil [39117 39191])
            ("b2Vec2" variable nil nil [39192 39266])
            ("b2Vec2" variable nil nil [39267 39347])
            ("b2Vec2_swigregister" variable nil nil [39348 39396])
            ("b2Vec2_swigregister" code nil nil [39397 39424])
            ("b2Vec3" type
               (:documentation "A 2D column vector with 3 elements."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [39498 39601])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [39606 39627])
                    ("SetZero" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39645 39649]))                          
                        :documentation "
        SetZero(b2Vec3 self)

        Set this vector to all zeros.
        ")
                        (reparse-symbol indented_block_body) [39633 39787])
                    ("Set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [39801 39805])
                            ("x_" variable nil (reparse-symbol function_parameters) [39807 39809])
                            ("y_" variable nil (reparse-symbol function_parameters) [39811 39813])
                            ("z_" variable nil (reparse-symbol function_parameters) [39815 39817]))                          
                        :documentation "
        Set(b2Vec3 self, float32 x_, float32 y_, float32 z_)

        Set this vector to some specified coordinates.
        ")
                        (reparse-symbol indented_block_body) [39793 40012])
                    ("__neg__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40030 40034]))                          
                        :documentation "__neg__(b2Vec3 self) -> b2Vec3")
                        (reparse-symbol indented_block_body) [40018 40125])
                    ("__add_vector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40148 40152])
                            ("v" variable nil (reparse-symbol function_parameters) [40154 40155]))                          
                        :documentation "__add_vector(b2Vec3 self, b2Vec3 v)")
                        (reparse-symbol indented_block_body) [40131 40259])
                    ("__sub_vector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40282 40286])
                            ("v" variable nil (reparse-symbol function_parameters) [40288 40289]))                          
                        :documentation "__sub_vector(b2Vec3 self, b2Vec3 v)")
                        (reparse-symbol indented_block_body) [40265 40393])
                    ("__mul_float" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40415 40419])
                            ("s" variable nil (reparse-symbol function_parameters) [40421 40422]))                          
                        :documentation "__mul_float(b2Vec3 self, float32 s)")
                        (reparse-symbol indented_block_body) [40399 40525])
                    ("x" variable nil (reparse-symbol indented_block_body) [40530 40590])
                    ("y" variable nil (reparse-symbol indented_block_body) [40595 40655])
                    ("z" variable nil (reparse-symbol indented_block_body) [40660 40720])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [40726 40747])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40767 40771]))                          
                        :documentation "__hash__(b2Vec3 self) -> long")
                        (reparse-symbol indented_block_body) [40754 40862])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40881 40885]))                          )
                        (reparse-symbol indented_block_body) [40868 40923])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Vec3 self, float32 x, float32 y, float32 z) -> b2Vec3
        __init__(b2Vec3 self) -> b2Vec3
        __init__(b2Vec3 self, b2Vec3 other) -> b2Vec3
        __init__(b2Vec3 self, b2Vec2 other) -> b2Vec3

        Construct using coordinates.
        \"\"\"" code nil (reparse-symbol indented_block_body) [40964 41238])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [41247 41301]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [40942 40946])
                            ("args" variable nil (reparse-symbol function_parameters) [40948 40953]))                          
                        :documentation "
        __init__(b2Vec3 self, float32 x, float32 y, float32 z) -> b2Vec3
        __init__(b2Vec3 self) -> b2Vec3
        __init__(b2Vec3 self, b2Vec3 other) -> b2Vec3
        __init__(b2Vec3 self, b2Vec2 other) -> b2Vec3

        Construct using coordinates.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [40929 41302])
                    ("__iter__" variable nil (reparse-symbol indented_block_body) [41307 41363])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [41368 41460])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [41465 41555])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41573 41577]))                          )
                        (reparse-symbol indented_block_body) [41560 41641])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41657 41661]))                          )
                        (reparse-symbol indented_block_body) [41645 41681])
                    ("__neg__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41697 41701]))                          )
                        (reparse-symbol indented_block_body) [41685 41753])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [41766 41770]))                          
                        :documentation "
        Return a copy of the vector.
        Remember that the following:
            a = b2Vec3()
            b = a
        Does not copy the vector itself, but b now refers to a.
        ")
                        (reparse-symbol indented_block_body) [41757 42024])
                    ("__copy__" variable nil (reparse-symbol indented_block_body) [42028 42043])
                    ("__iadd__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42061 42065])
                            ("other" variable nil (reparse-symbol function_parameters) [42067 42072]))                          )
                        (reparse-symbol indented_block_body) [42048 42128])
                    ("__isub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42145 42149])
                            ("other" variable nil (reparse-symbol function_parameters) [42151 42156]))                          )
                        (reparse-symbol indented_block_body) [42132 42212])
                    ("__imul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42229 42233])
                            ("a" variable nil (reparse-symbol function_parameters) [42235 42236]))                          )
                        (reparse-symbol indented_block_body) [42216 42287])
                    ("__itruediv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42308 42312])
                            ("a" variable nil (reparse-symbol function_parameters) [42314 42315]))                          )
                        (reparse-symbol indented_block_body) [42291 42366])
                    ("__idiv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42383 42387])
                            ("a" variable nil (reparse-symbol function_parameters) [42389 42390]))                          )
                        (reparse-symbol indented_block_body) [42370 42441])
                    ("dot" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42453 42457])
                            ("v" variable nil (reparse-symbol function_parameters) [42459 42460]))                          
                        :documentation "
        Dot product with v (list/tuple or b2Vec3)
        ")
                        (reparse-symbol indented_block_body) [42445 42707])
                    ("__set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42721 42725])
                            ("x" variable nil (reparse-symbol function_parameters) [42727 42728])
                            ("y" variable nil (reparse-symbol function_parameters) [42730 42731])
                            ("z" variable nil (reparse-symbol function_parameters) [42733 42734]))                          )
                        (reparse-symbol indented_block_body) [42711 42794])
                    ("__nonzero__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [42814 42818]))                          )
                        (reparse-symbol indented_block_body) [42798 42878])
                    ("tuple" variable nil (reparse-symbol indented_block_body) [42883 42978])
                    ("length" variable nil (reparse-symbol indented_block_body) [42983 43030])
                    ("lengthSquared" variable nil (reparse-symbol indented_block_body) [43035 43096])
                    ("valid" variable nil (reparse-symbol indented_block_body) [43101 43148])
                    ("cross" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43166 43170])
                            ("b" variable nil (reparse-symbol function_parameters) [43172 43173]))                          
                        :documentation "cross(b2Vec3 self, b2Vec3 b) -> b2Vec3")
                        (reparse-symbol indented_block_body) [43156 43273])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43295 43299])
                            ("i" variable nil (reparse-symbol function_parameters) [43301 43302]))                          
                        :documentation "__getitem__(b2Vec3 self, int i) -> float32")
                        (reparse-symbol indented_block_body) [43279 43412])
                    ("__setitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43434 43438])
                            ("i" variable nil (reparse-symbol function_parameters) [43440 43441])
                            ("value" variable nil (reparse-symbol function_parameters) [43443 43448]))                          
                        :documentation "__setitem__(b2Vec3 self, int i, float32 value)")
                        (reparse-symbol indented_block_body) [43418 43569])
                    ("__IsValid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43589 43593]))                          
                        :documentation "__IsValid(b2Vec3 self) -> bool")
                        (reparse-symbol indented_block_body) [43575 43686])
                    ("__Length" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43705 43709]))                          
                        :documentation "__Length(b2Vec3 self) -> float32")
                        (reparse-symbol indented_block_body) [43692 43803])
                    ("__LengthSquared" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43829 43833]))                          
                        :documentation "__LengthSquared(b2Vec3 self) -> float32")
                        (reparse-symbol indented_block_body) [43809 43941])
                    ("__truediv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [43963 43967])
                            ("a" variable nil (reparse-symbol function_parameters) [43969 43970]))                          
                        :documentation "__truediv__(b2Vec3 self, float32 a) -> b2Vec3")
                        (reparse-symbol indented_block_body) [43947 44083])
                    ("__div__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44101 44105])
                            ("a" variable nil (reparse-symbol function_parameters) [44107 44108]))                          
                        :documentation "__div__(b2Vec3 self, float32 a) -> b2Vec3")
                        (reparse-symbol indented_block_body) [44089 44213])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44231 44235])
                            ("a" variable nil (reparse-symbol function_parameters) [44237 44238]))                          
                        :documentation "__mul__(b2Vec3 self, float32 a) -> b2Vec3")
                        (reparse-symbol indented_block_body) [44219 44343])
                    ("__add__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44361 44365])
                            ("other" variable nil (reparse-symbol function_parameters) [44367 44372]))                          
                        :documentation "__add__(b2Vec3 self, b2Vec3 other) -> b2Vec3")
                        (reparse-symbol indented_block_body) [44349 44484])
                    ("__sub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44502 44506])
                            ("other" variable nil (reparse-symbol function_parameters) [44508 44513]))                          
                        :documentation "__sub__(b2Vec3 self, b2Vec3 other) -> b2Vec3")
                        (reparse-symbol indented_block_body) [44490 44625])
                    ("__rmul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44644 44648])
                            ("a" variable nil (reparse-symbol function_parameters) [44650 44651]))                          
                        :documentation "__rmul__(b2Vec3 self, float32 a) -> b2Vec3")
                        (reparse-symbol indented_block_body) [44631 44758])
                    ("__rdiv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44777 44781])
                            ("a" variable nil (reparse-symbol function_parameters) [44783 44784]))                          
                        :documentation "__rdiv__(b2Vec3 self, float32 a) -> b2Vec3")
                        (reparse-symbol indented_block_body) [44764 44891])
                    ("__div_float" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [44913 44917])
                            ("a" variable nil (reparse-symbol function_parameters) [44919 44920]))                          
                        :documentation "__div_float(b2Vec3 self, float32 a)")
                        (reparse-symbol indented_block_body) [44897 45023])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [45028 45067]))                  
                :type "class")
                nil [39426 45068])
            ("b2Vec3" variable nil nil [45068 45140])
            ("b2Vec3" variable nil nil [45141 45205])
            ("b2Vec3" variable nil nil [45206 45278])
            ("b2Vec3" variable nil nil [45279 45361])
            ("b2Vec3" variable nil nil [45362 45444])
            ("b2Vec3" variable nil nil [45445 45525])
            ("b2Vec3" variable nil nil [45526 45600])
            ("b2Vec3" variable nil nil [45601 45669])
            ("b2Vec3" variable nil nil [45670 45750])
            ("b2Vec3" variable nil nil [45751 45831])
            ("b2Vec3" variable nil nil [45832 45908])
            ("b2Vec3" variable nil nil [45909 45983])
            ("b2Vec3" variable nil nil [45984 46072])
            ("b2Vec3" variable nil nil [46073 46153])
            ("b2Vec3" variable nil nil [46154 46226])
            ("b2Vec3" variable nil nil [46227 46299])
            ("b2Vec3" variable nil nil [46300 46372])
            ("b2Vec3" variable nil nil [46373 46445])
            ("b2Vec3" variable nil nil [46446 46520])
            ("b2Vec3" variable nil nil [46521 46595])
            ("b2Vec3" variable nil nil [46596 46676])
            ("b2Vec3_swigregister" variable nil nil [46677 46725])
            ("b2Vec3_swigregister" code nil nil [46726 46753])
            ("b2Mat22" type
               (:documentation "A 2-by-2 matrix. Stored in column-major order."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [46839 46942])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [46947 46968])
                    ("SetIdentity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [46990 46994]))                          
                        :documentation "
        SetIdentity(b2Mat22 self)

        Set this to the identity matrix.
        ")
                        (reparse-symbol indented_block_body) [46974 47145])
                    ("SetZero" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47163 47167]))                          
                        :documentation "
        SetZero(b2Mat22 self)

        Set this matrix to all zeros.
        ")
                        (reparse-symbol indented_block_body) [47151 47307])
                    ("__GetInverse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47330 47334]))                          
                        :documentation "__GetInverse(b2Mat22 self) -> b2Mat22")
                        (reparse-symbol indented_block_body) [47313 47438])
                    ("Solve" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47454 47458])
                            ("b" variable nil (reparse-symbol function_parameters) [47460 47461]))                          
                        :documentation "
        Solve(b2Mat22 self, b2Vec2 b) -> b2Vec2

        Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases.
        ")
                        (reparse-symbol indented_block_body) [47444 47704])
                    ("col1" variable nil (reparse-symbol indented_block_body) [47709 47780])
                    ("col2" variable nil (reparse-symbol indented_block_body) [47785 47856])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [47862 47883])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [47903 47907]))                          
                        :documentation "__hash__(b2Mat22 self) -> long")
                        (reparse-symbol indented_block_body) [47890 48000])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48019 48023]))                          )
                        (reparse-symbol indented_block_body) [48006 48061])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Mat22 self, b2Vec2 c1, b2Vec2 c2) -> b2Mat22
        __init__(b2Mat22 self, float32 a11, float32 a12, float32 a21, float32 a22) -> b2Mat22
        __init__(b2Mat22 self) -> b2Mat22

        Construct this matrix using an angle. This matrix becomes an orthonormal rotation matrix.
        \"\"\"" code nil (reparse-symbol indented_block_body) [48102 48416])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [48425 48481]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48080 48084])
                            ("args" variable nil (reparse-symbol function_parameters) [48086 48091]))                          
                        :documentation "
        __init__(b2Mat22 self, b2Vec2 c1, b2Vec2 c2) -> b2Mat22
        __init__(b2Mat22 self, float32 a11, float32 a12, float32 a21, float32 a22) -> b2Mat22
        __init__(b2Mat22 self) -> b2Mat22

        Construct this matrix using an angle. This matrix becomes an orthonormal rotation matrix.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [48067 48482])
                    ("__GetAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48502 48506]))                          
                        :documentation "__GetAngle(b2Mat22 self) -> float32")
                        (reparse-symbol indented_block_body) [48487 48606])
                    ("__SetAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [48627 48631])
                            ("args" variable nil (reparse-symbol function_parameters) [48633 48638]))                          
                        :documentation "
        __SetAngle(b2Mat22 self, b2Vec2 c1, b2Vec2 c2)
        __SetAngle(b2Mat22 self, float32 angle)
        ")
                        (reparse-symbol indented_block_body) [48612 48822])
                    ("inverse" variable nil (reparse-symbol indented_block_body) [48852 48890])
                    ("angle" variable nil (reparse-symbol indented_block_body) [48895 48935])
                    ("ex" variable nil (reparse-symbol indented_block_body) [48940 49037])
                    ("ey" variable nil (reparse-symbol indented_block_body) [49042 49139])
                    ("set" variable nil (reparse-symbol indented_block_body) [49144 49160])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49179 49183])
                            ("args" variable nil (reparse-symbol function_parameters) [49185 49190]))                          
                        :documentation "
        __mul__(b2Mat22 self, b2Vec2 v) -> b2Vec2
        __mul__(b2Mat22 self, b2Mat22 m) -> b2Mat22
        ")
                        (reparse-symbol indented_block_body) [49167 49370])
                    ("__add__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49388 49392])
                            ("m" variable nil (reparse-symbol function_parameters) [49394 49395]))                          
                        :documentation "__add__(b2Mat22 self, b2Mat22 m) -> b2Mat22")
                        (reparse-symbol indented_block_body) [49376 49503])
                    ("__sub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49521 49525])
                            ("m" variable nil (reparse-symbol function_parameters) [49527 49528]))                          
                        :documentation "__sub__(b2Mat22 self, b2Mat22 m) -> b2Mat22")
                        (reparse-symbol indented_block_body) [49509 49636])
                    ("__iadd" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49653 49657])
                            ("m" variable nil (reparse-symbol function_parameters) [49659 49660]))                          
                        :documentation "__iadd(b2Mat22 self, b2Mat22 m)")
                        (reparse-symbol indented_block_body) [49642 49755])
                    ("__isub" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [49772 49776])
                            ("m" variable nil (reparse-symbol function_parameters) [49778 49779]))                          
                        :documentation "__isub(b2Mat22 self, b2Mat22 m)")
                        (reparse-symbol indented_block_body) [49761 49874])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [49879 49919]))                  
                :type "class")
                nil [46755 49920])
            ("b2Mat22" variable nil nil [49920 50003])
            ("b2Mat22" variable nil nil [50004 50079])
            ("b2Mat22" variable nil nil [50080 50165])
            ("b2Mat22" variable nil nil [50166 50237])
            ("b2Mat22" variable nil nil [50238 50315])
            ("b2Mat22" variable nil nil [50316 50397])
            ("b2Mat22" variable nil nil [50398 50479])
            ("b2Mat22" variable nil nil [50480 50555])
            ("b2Mat22" variable nil nil [50556 50631])
            ("b2Mat22" variable nil nil [50632 50707])
            ("b2Mat22" variable nil nil [50708 50781])
            ("b2Mat22" variable nil nil [50782 50855])
            ("b2Mat22_swigregister" variable nil nil [50856 50906])
            ("b2Mat22_swigregister" code nil nil [50907 50936])
            ("b2Mat33" type
               (:documentation "A 3-by-3 matrix. Stored in column-major order."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [51022 51125])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [51130 51151])
                    ("SetZero" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51169 51173]))                          
                        :documentation "
        SetZero(b2Mat33 self)

        Set this matrix to all zeros.
        ")
                        (reparse-symbol indented_block_body) [51157 51313])
                    ("Solve33" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51331 51335])
                            ("b" variable nil (reparse-symbol function_parameters) [51337 51338]))                          
                        :documentation "
        Solve33(b2Mat33 self, b2Vec3 b) -> b2Vec3

        Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases.
        ")
                        (reparse-symbol indented_block_body) [51319 51585])
                    ("Solve22" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51603 51607])
                            ("b" variable nil (reparse-symbol function_parameters) [51609 51610]))                          
                        :documentation "
        Solve22(b2Mat33 self, b2Vec2 b) -> b2Vec2

        Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix equation.
        ")
                        (reparse-symbol indented_block_body) [51591 51902])
                    ("GetInverse22" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [51925 51929])
                            ("M" variable nil (reparse-symbol function_parameters) [51931 51932]))                          
                        :documentation "GetInverse22(b2Mat33 self, b2Mat33 M)")
                        (reparse-symbol indented_block_body) [51908 52039])
                    ("GetSymInverse33" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52065 52069])
                            ("M" variable nil (reparse-symbol function_parameters) [52071 52072]))                          
                        :documentation "GetSymInverse33(b2Mat33 self, b2Mat33 M)")
                        (reparse-symbol indented_block_body) [52045 52185])
                    ("col1" variable nil (reparse-symbol indented_block_body) [52190 52261])
                    ("col2" variable nil (reparse-symbol indented_block_body) [52266 52337])
                    ("col3" variable nil (reparse-symbol indented_block_body) [52342 52413])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [52419 52440])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52460 52464]))                          
                        :documentation "__hash__(b2Mat33 self) -> long")
                        (reparse-symbol indented_block_body) [52447 52557])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52576 52580]))                          )
                        (reparse-symbol indented_block_body) [52563 52618])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Mat33 self, b2Vec3 c1, b2Vec3 c2, b2Vec3 c3) -> b2Mat33
        __init__(b2Mat33 self) -> b2Mat33

        Construct this matrix using columns.
        \"\"\"" code nil (reparse-symbol indented_block_body) [52659 52837])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [52846 52902]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [52637 52641])
                            ("args" variable nil (reparse-symbol function_parameters) [52643 52648]))                          
                        :documentation "
        __init__(b2Mat33 self, b2Vec3 c1, b2Vec3 c2, b2Vec3 c3) -> b2Mat33
        __init__(b2Mat33 self) -> b2Mat33

        Construct this matrix using columns.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [52624 52903])
                    ("ex" variable nil (reparse-symbol indented_block_body) [52908 52987])
                    ("ey" variable nil (reparse-symbol indented_block_body) [52992 53071])
                    ("ez" variable nil (reparse-symbol indented_block_body) [53076 53155])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53174 53178])
                            ("v" variable nil (reparse-symbol function_parameters) [53180 53181]))                          
                        :documentation "__mul__(b2Mat33 self, b2Vec3 v) -> b2Vec3")
                        (reparse-symbol indented_block_body) [53162 53287])
                    ("__add__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53305 53309])
                            ("other" variable nil (reparse-symbol function_parameters) [53311 53316]))                          
                        :documentation "__add__(b2Mat33 self, b2Mat33 other) -> b2Mat33")
                        (reparse-symbol indented_block_body) [53293 53432])
                    ("__sub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53450 53454])
                            ("other" variable nil (reparse-symbol function_parameters) [53456 53461]))                          
                        :documentation "__sub__(b2Mat33 self, b2Mat33 other) -> b2Mat33")
                        (reparse-symbol indented_block_body) [53438 53577])
                    ("__iadd" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53594 53598])
                            ("other" variable nil (reparse-symbol function_parameters) [53600 53605]))                          
                        :documentation "__iadd(b2Mat33 self, b2Mat33 other)")
                        (reparse-symbol indented_block_body) [53583 53708])
                    ("__isub" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [53725 53729])
                            ("other" variable nil (reparse-symbol function_parameters) [53731 53736]))                          
                        :documentation "__isub(b2Mat33 self, b2Mat33 other)")
                        (reparse-symbol indented_block_body) [53714 53839])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [53844 53884]))                  
                :type "class")
                nil [50938 53885])
            ("b2Mat33" variable nil nil [53885 53960])
            ("b2Mat33" variable nil nil [53961 54036])
            ("b2Mat33" variable nil nil [54037 54112])
            ("b2Mat33" variable nil nil [54113 54198])
            ("b2Mat33" variable nil nil [54199 54290])
            ("b2Mat33" variable nil nil [54291 54368])
            ("b2Mat33" variable nil nil [54369 54444])
            ("b2Mat33" variable nil nil [54445 54520])
            ("b2Mat33" variable nil nil [54521 54596])
            ("b2Mat33" variable nil nil [54597 54670])
            ("b2Mat33" variable nil nil [54671 54744])
            ("b2Mat33_swigregister" variable nil nil [54745 54795])
            ("b2Mat33_swigregister" code nil nil [54796 54825])
            ("b2Rot" type
               (:documentation "Proxy of C++ b2Rot class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [54887 54990])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [54995 55016])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Rot self) -> b2Rot
        __init__(b2Rot self, float32 angle) -> b2Rot
        \"\"\"" code nil (reparse-symbol indented_block_body) [55057 55163])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [55172 55224]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55035 55039])
                            ("args" variable nil (reparse-symbol function_parameters) [55041 55046]))                          
                        :documentation "
        __init__(b2Rot self) -> b2Rot
        __init__(b2Rot self, float32 angle) -> b2Rot
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [55022 55225])
                    ("__SetAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55245 55249])
                            ("angle" variable nil (reparse-symbol function_parameters) [55251 55256]))                          
                        :documentation "__SetAngle(b2Rot self, float32 angle)")
                        (reparse-symbol indented_block_body) [55230 55363])
                    ("SetIdentity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55385 55389]))                          
                        :documentation "SetIdentity(b2Rot self)")
                        (reparse-symbol indented_block_body) [55369 55476])
                    ("__GetAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55497 55501]))                          
                        :documentation "__GetAngle(b2Rot self) -> float32")
                        (reparse-symbol indented_block_body) [55482 55597])
                    ("GetXAxis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55616 55620]))                          
                        :documentation "GetXAxis(b2Rot self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [55603 55711])
                    ("GetYAxis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [55730 55734]))                          
                        :documentation "GetYAxis(b2Rot self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [55717 55825])
                    ("s" variable nil (reparse-symbol indented_block_body) [55830 55888])
                    ("c" variable nil (reparse-symbol indented_block_body) [55893 55951])
                    ("angle" variable nil (reparse-symbol indented_block_body) [55957 55997])
                    ("x_axis" variable nil (reparse-symbol indented_block_body) [56004 56037])
                    ("y_axis" variable nil (reparse-symbol indented_block_body) [56042 56075])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [56095 56099])
                            ("v" variable nil (reparse-symbol function_parameters) [56101 56102]))                          
                        :documentation "__mul__(b2Rot self, b2Vec2 v) -> b2Vec2")
                        (reparse-symbol indented_block_body) [56083 56204])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [56209 56247]))                  
                :type "class")
                nil [54827 56248])
            ("b2Rot" variable nil nil [56248 56323])
            ("b2Rot" variable nil nil [56324 56401])
            ("b2Rot" variable nil nil [56402 56477])
            ("b2Rot" variable nil nil [56478 56549])
            ("b2Rot" variable nil nil [56550 56621])
            ("b2Rot" variable nil nil [56622 56691])
            ("b2Rot_swigregister" variable nil nil [56692 56738])
            ("b2Rot_swigregister" code nil nil [56739 56764])
            ("b2Transform" type
               (:documentation "A transform contains translation and rotation. It is used to represent the position and orientation of rigid frames."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [56924 57027])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [57032 57053])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Transform self) -> b2Transform
        __init__(b2Transform self, b2Vec2 position, b2Rot rotation) -> b2Transform

        Initialize using a position vector and a rotation matrix.
        \"\"\"" code nil (reparse-symbol indented_block_body) [57094 57309])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [57318 57382]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57072 57076])
                            ("args" variable nil (reparse-symbol function_parameters) [57078 57083]))                          
                        :documentation "
        __init__(b2Transform self) -> b2Transform
        __init__(b2Transform self, b2Vec2 position, b2Rot rotation) -> b2Transform

        Initialize using a position vector and a rotation matrix.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [57059 57383])
                    ("SetIdentity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57404 57408]))                          
                        :documentation "
        SetIdentity(b2Transform self)

        Set this to the identity transform.
        ")
                        (reparse-symbol indented_block_body) [57388 57570])
                    ("Set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [57584 57588])
                            ("position" variable nil (reparse-symbol function_parameters) [57590 57598])
                            ("angle" variable nil (reparse-symbol function_parameters) [57600 57605]))                          
                        :documentation "
        Set(b2Transform self, b2Vec2 position, float32 angle)

        Set this based on the position and angle.
        ")
                        (reparse-symbol indented_block_body) [57576 57806])
                    ("position" variable nil (reparse-symbol indented_block_body) [57811 57902])
                    ("q" variable nil (reparse-symbol indented_block_body) [57907 57977])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [57983 58004])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58024 58028]))                          
                        :documentation "__hash__(b2Transform self) -> long")
                        (reparse-symbol indented_block_body) [58011 58129])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58148 58152]))                          )
                        (reparse-symbol indented_block_body) [58135 58190])
                    ("__get_rotation_matrix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58222 58226]))                          
                        :documentation "__get_rotation_matrix(b2Transform self) -> b2Rot")
                        (reparse-symbol indented_block_body) [58196 58354])
                    ("__get_angle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58376 58380]))                          )
                        (reparse-symbol indented_block_body) [58360 58411])
                    ("__set_angle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58431 58435])
                            ("angle" variable nil (reparse-symbol function_parameters) [58437 58442]))                          )
                        (reparse-symbol indented_block_body) [58415 58474])
                    ("__set_rotation_matrix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58505 58509])
                            ("rot_matrix" variable nil (reparse-symbol function_parameters) [58511 58521]))                          )
                        (reparse-symbol indented_block_body) [58479 58564])
                    ("angle" variable nil (reparse-symbol indented_block_body) [58569 58611])
                    ("R" variable nil (reparse-symbol indented_block_body) [58617 58675])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [58694 58698])
                            ("v" variable nil (reparse-symbol function_parameters) [58700 58701]))                          
                        :documentation "__mul__(b2Transform self, b2Vec2 v) -> b2Vec2")
                        (reparse-symbol indented_block_body) [58682 58815])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [58820 58864]))                  
                :type "class")
                nil [56766 58865])
            ("b2Transform" variable nil nil [58865 58960])
            ("b2Transform" variable nil nil [58961 59040])
            ("b2Transform" variable nil nil [59041 59130])
            ("b2Transform" variable nil nil [59131 59246])
            ("b2Transform" variable nil nil [59247 59334])
            ("b2Transform_swigregister" variable nil nil [59335 59393])
            ("b2Transform_swigregister" code nil nil [59394 59431])
            ("b2Sweep" type
               (:documentation "This describes the motion of a body/shape for TOI computation. Shapes are defined with respect to the body origin, which may no coincide with the center of mass. However, to support dynamics we must interpolate the center of mass position."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [59710 59813])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [59818 59839])
                    ("Advance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [59857 59861])
                            ("alpha" variable nil (reparse-symbol function_parameters) [59863 59868]))                          
                        :documentation "
        Advance(b2Sweep self, float32 alpha)

        Advance the sweep forward, yielding a new initial state.

        Parameters:
        -----------

        alpha: 
        the new initial time.
        ")
                        (reparse-symbol indented_block_body) [59845 60145])
                    ("Normalize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60165 60169]))                          
                        :documentation "
        Normalize(b2Sweep self)

        Normalize the angles.
        ")
                        (reparse-symbol indented_block_body) [60151 60305])
                    ("localCenter" variable nil (reparse-symbol indented_block_body) [60310 60402])
                    ("c0" variable nil (reparse-symbol indented_block_body) [60407 60472])
                    ("c" variable nil (reparse-symbol indented_block_body) [60477 60539])
                    ("a0" variable nil (reparse-symbol indented_block_body) [60544 60609])
                    ("a" variable nil (reparse-symbol indented_block_body) [60614 60676])
                    ("alpha0" variable nil (reparse-symbol indented_block_body) [60681 60758])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [60764 60785])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60805 60809]))                          
                        :documentation "__hash__(b2Sweep self) -> long")
                        (reparse-symbol indented_block_body) [60792 60902])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60921 60925]))                          )
                        (reparse-symbol indented_block_body) [60908 60963])
                    ("GetTransform" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [60986 60990])
                            ("args" variable nil (reparse-symbol function_parameters) [60992 60997]))                          
                        :documentation "
        GetTransform(b2Sweep self, b2Transform xfb, float32 beta)
        GetTransform(b2Sweep self, float32 alpha) -> b2Transform

        Get the interpolated transform at a specific time.

        Parameters:
        -----------

        beta: 
        is a factor in [0,1], where 0 indicates alpha0.
        ")
                        (reparse-symbol indented_block_body) [60969 61384])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [61428 61478])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [61487 61515]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [61403 61407])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [61409 61417]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [61390 61516])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [61522 61562]))                  
                :type "class")
                nil [59433 61563])
            ("b2Sweep" variable nil nil [61563 61638])
            ("b2Sweep" variable nil nil [61639 61718])
            ("b2Sweep" variable nil nil [61719 61796])
            ("b2Sweep" variable nil nil [61797 61882])
            ("b2Sweep_swigregister" variable nil nil [61883 61933])
            ("b2Sweep_swigregister" code nil nil [61934 61963])
            ("b2DistanceSquared" function
               (:documentation "b2DistanceSquared(b2Vec2 a, b2Vec2 b) -> float32"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [61988 61989])
                    ("b" variable nil (reparse-symbol function_parameters) [61991 61992]))                  )
                nil [61966 62096])
            ("b2Dot" function
               (:documentation "
    b2Dot(b2Vec2 a, b2Vec2 b) -> float32
    b2Dot(b2Vec3 a, b2Vec3 b) -> float32

    Perform the dot product on two vectors.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [62107 62112]))                  )
                nil [62097 62289])
            ("b2Cross" function
               (:documentation "
    b2Cross(b2Vec2 a, b2Vec2 b) -> float32
    b2Cross(b2Vec2 a, float32 s) -> b2Vec2
    b2Cross(float32 s, b2Vec2 a) -> b2Vec2
    b2Cross(b2Vec3 a, b2Vec3 b) -> b2Vec3

    Perform the cross product on two vectors.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [62302 62307]))                  )
                nil [62290 62577])
            ("b2Mul22" function
               (:documentation "b2Mul22(b2Mat33 A, b2Vec2 v) -> b2Vec2"
                :arguments 
                  ( ("A" variable nil (reparse-symbol function_parameters) [62590 62591])
                    ("v" variable nil (reparse-symbol function_parameters) [62593 62594]))                  )
                nil [62578 62678])
            ("b2Mul" function
               (:documentation "
    b2Mul(b2Mat22 A, b2Vec2 v) -> b2Vec2
    b2Mul(b2Mat22 A, b2Mat22 B) -> b2Mat22
    b2Mul(b2Mat33 A, b2Vec3 v) -> b2Vec3
    b2Mul(b2Rot q, b2Rot r) -> b2Rot
    b2Mul(b2Rot q, b2Vec2 v) -> b2Vec2
    b2Mul(b2Transform T, b2Vec2 v) -> b2Vec2
    b2Mul(b2Transform A, b2Transform B) -> b2Transform

    Multiply a matrix times a vector.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [62689 62694]))                  )
                nil [62679 63084])
            ("b2MulT" function
               (:documentation "
    b2MulT(b2Mat22 A, b2Vec2 v) -> b2Vec2
    b2MulT(b2Mat22 A, b2Mat22 B) -> b2Mat22
    b2MulT(b2Rot q, b2Rot r) -> b2Rot
    b2MulT(b2Rot q, b2Vec2 v) -> b2Vec2
    b2MulT(b2Transform T, b2Vec2 v) -> b2Vec2
    b2MulT(b2Transform A, b2Transform B) -> b2Transform

    Multiply a matrix transpose times a vector. If a rotation matrix is provided, then this transforms the vector from one frame to another (inverse transform).
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [63096 63101]))                  )
                nil [63085 63580])
            ("b2Abs" function
               (:documentation "
    b2Abs(b2Vec2 a) -> b2Vec2
    b2Abs(b2Mat22 A) -> b2Mat22
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [63591 63596]))                  )
                nil [63581 63708])
            ("b2Min" function
               (:documentation "b2Min(b2Vec2 a, b2Vec2 b) -> b2Vec2"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [63719 63720])
                    ("b" variable nil (reparse-symbol function_parameters) [63722 63723]))                  )
                nil [63709 63802])
            ("b2Max" function
               (:documentation "b2Max(b2Vec2 a, b2Vec2 b) -> b2Vec2"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [63813 63814])
                    ("b" variable nil (reparse-symbol function_parameters) [63816 63817]))                  )
                nil [63803 63896])
            ("b2Clamp" function
               (:documentation "b2Clamp(b2Vec2 a, b2Vec2 low, b2Vec2 high) -> b2Vec2"
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [63909 63910])
                    ("low" variable nil (reparse-symbol function_parameters) [63912 63915])
                    ("high" variable nil (reparse-symbol function_parameters) [63917 63921]))                  )
                nil [63897 64027])
            ("b2NextPowerOfTwo" function
               (:documentation "
    b2NextPowerOfTwo(uint32 x) -> uint32

    \"Next Largest Power of 2 Given a binary integer value x, the next largest power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the upper bits into the lower bits. This process yields a bit vector with the same most significant 1 as x, but all 1's below it. Adding 1 to that value yields the next largest power of 2. For a 32-bit value:\"
    "
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [64049 64050]))                  )
                nil [64028 64509])
            ("b2IsPowerOfTwo" function
               (:documentation "b2IsPowerOfTwo(uint32 x) -> bool"
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [64529 64530]))                  )
                nil [64510 64612])
            ("b2ContactFeature" type
               (:documentation "The features that intersect to form the contact point This must be 4 bytes or less."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [64742 64845])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [64850 64871])
                    ("e_vertex" variable nil (reparse-symbol indented_block_body) [64876 64919])
                    ("e_face" variable nil (reparse-symbol indented_block_body) [64924 64963])
                    ("indexA" variable nil (reparse-symbol indented_block_body) [64968 65063])
                    ("indexB" variable nil (reparse-symbol indented_block_body) [65068 65163])
                    ("typeA" variable nil (reparse-symbol indented_block_body) [65168 65260])
                    ("typeB" variable nil (reparse-symbol indented_block_body) [65265 65357])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [65363 65384])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65404 65408]))                          
                        :documentation "__hash__(b2ContactFeature self) -> long")
                        (reparse-symbol indented_block_body) [65391 65519])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65538 65542]))                          )
                        (reparse-symbol indented_block_body) [65525 65580])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2ContactFeature self) -> b2ContactFeature

        The features that intersect to form the contact point This must be 4 bytes or less.
        \"\"\"" code nil (reparse-symbol indented_block_body) [65614 65782])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [65791 65860]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [65599 65603]))                          
                        :documentation "
        __init__(b2ContactFeature self) -> b2ContactFeature

        The features that intersect to form the contact point This must be 4 bytes or less.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [65586 65861])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [65865 65914]))                  
                :type "class")
                nil [64612 65915])
            ("b2ContactFeature" variable nil nil [65915 66019])
            ("b2ContactFeature_swigregister" variable nil nil [66020 66088])
            ("b2ContactFeature_swigregister" code nil nil [66089 66136])
            ("b2Vec2_zero" variable nil nil [66137 66172])
            ("b2_nullFeature" variable nil nil [66173 66214])
            ("b2ContactID" type
               (:documentation "Proxy of C++ b2ContactID class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [66288 66391])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [66396 66417])
                    ("cf" variable nil (reparse-symbol indented_block_body) [66422 66495])
                    ("key" variable nil (reparse-symbol indented_block_body) [66500 66576])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [66582 66603])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66623 66627]))                          
                        :documentation "__hash__(b2ContactID self) -> long")
                        (reparse-symbol indented_block_body) [66610 66728])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66747 66751]))                          )
                        (reparse-symbol indented_block_body) [66734 66789])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [66833 66891])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [66900 66928]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [66808 66812])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [66814 66822]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [66795 66929])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [66935 66979]))                  
                :type "class")
                nil [66216 66980])
            ("b2ContactID" variable nil nil [66980 67069])
            ("b2ContactID_swigregister" variable nil nil [67070 67128])
            ("b2ContactID_swigregister" code nil nil [67129 67166])
            ("b2ManifoldPoint" type
               (:documentation "A manifold point is a contact point belonging to a contact manifold. It holds details related to the geometry and dynamics of the contact points. The local point usage depends on the manifold type: -e_circles: the local center of circleB -e_faceA: the local center of cirlceB or the clip point of polygonB -e_faceB: the clip point of polygonA This structure is stored across time steps, so we keep it small. Note: the impulses are used for internal caching and may not provide reliable contact forces, especially for high speed collisions."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [67753 67856])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [67861 67882])
                    ("localPoint" variable nil (reparse-symbol indented_block_body) [67887 67992])
                    ("normalImpulse" variable nil (reparse-symbol indented_block_body) [67997 68111])
                    ("tangentImpulse" variable nil (reparse-symbol indented_block_body) [68116 68233])
                    ("id" variable nil (reparse-symbol indented_block_body) [68238 68319])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [68325 68346])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68366 68370]))                          
                        :documentation "__hash__(b2ManifoldPoint self) -> long")
                        (reparse-symbol indented_block_body) [68353 68479])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68498 68502]))                          )
                        (reparse-symbol indented_block_body) [68485 68540])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [68584 68650])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [68659 68687]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [68559 68563])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [68565 68573]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [68546 68688])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [68694 68742]))                  
                :type "class")
                nil [67168 68743])
            ("b2ManifoldPoint" variable nil nil [68743 68844])
            ("b2ManifoldPoint_swigregister" variable nil nil [68845 68911])
            ("b2ManifoldPoint_swigregister" code nil nil [68912 68957])
            ("b2Manifold" type
               (:documentation "
    A manifold for two touching convex shapes. Box2D supports multiple types of contact:
    clip point versus plane with radius
    point versus point with radius (circles) The local point usage depends on the manifold type: -e_circles: the local center of circleA -e_faceA: the center of faceA -e_faceB: the center of faceB Similarly the local normal usage: -e_circles: not used -e_faceA: the normal on polygonA -e_faceB: the normal on polygonB We store contacts in this way so that position correction can account for movement, which is critical for continuous physics. All contact scenarios must be expressed in one of these types. This structure is stored across time steps, so we keep it small.
    "
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [69706 69809])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [69814 69835])
                    ("e_circles" variable nil (reparse-symbol indented_block_body) [69840 69879])
                    ("e_faceA" variable nil (reparse-symbol indented_block_body) [69884 69919])
                    ("e_faceB" variable nil (reparse-symbol indented_block_body) [69924 69959])
                    ("localNormal" variable nil (reparse-symbol indented_block_body) [69964 70062])
                    ("localPoint" variable nil (reparse-symbol indented_block_body) [70067 70162])
                    ("type_" variable nil (reparse-symbol indented_block_body) [70167 70247])
                    ("pointCount" variable nil (reparse-symbol indented_block_body) [70252 70347])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [70353 70374])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70394 70398]))                          
                        :documentation "__hash__(b2Manifold self) -> long")
                        (reparse-symbol indented_block_body) [70381 70497])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70516 70520]))                          )
                        (reparse-symbol indented_block_body) [70503 70558])
                    ("__GetPoints" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70580 70584]))                          )
                        (reparse-symbol indented_block_body) [70564 70655])
                    ("points" variable nil (reparse-symbol indented_block_body) [70659 70695])
                    ("__GetPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70717 70721])
                            ("i" variable nil (reparse-symbol function_parameters) [70723 70724]))                          
                        :documentation "__GetPoint(b2Manifold self, int i) -> b2ManifoldPoint")
                        (reparse-symbol indented_block_body) [70702 70848])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [70892 70948])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [70957 70985]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [70867 70871])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [70873 70881]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [70854 70986])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [70992 71035]))                  
                :type "class")
                nil [68959 71036])
            ("b2Manifold" variable nil nil [71036 71122])
            ("b2Manifold" variable nil nil [71123 71213])
            ("b2Manifold_swigregister" variable nil nil [71214 71270])
            ("b2Manifold_swigregister" code nil nil [71271 71306])
            ("b2WorldManifold" type
               (:documentation "This is used to compute the current state of a contact manifold."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [71418 71521])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [71526 71547])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [71568 71572])
                            ("manifold" variable nil (reparse-symbol function_parameters) [71574 71582])
                            ("xfA" variable nil (reparse-symbol function_parameters) [71584 71587])
                            ("radiusA" variable nil (reparse-symbol function_parameters) [71589 71596])
                            ("xfB" variable nil (reparse-symbol function_parameters) [71598 71601])
                            ("radiusB" variable nil (reparse-symbol function_parameters) [71603 71610]))                          
                        :documentation "
        Initialize(b2WorldManifold self, b2Manifold manifold, b2Transform xfA, float32 radiusA, b2Transform xfB, float32 radiusB)

        Evaluate the manifold with supplied transforms. This assumes modest motion from the original state. This does not change the point count, impulses, etc. The radii must come from the shapes that generated the manifold.
        ")
                        (reparse-symbol indented_block_body) [71553 72087])
                    ("normal" variable nil (reparse-symbol indented_block_body) [72092 72185])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [72191 72212])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72232 72236]))                          
                        :documentation "__hash__(b2WorldManifold self) -> long")
                        (reparse-symbol indented_block_body) [72219 72345])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72364 72368]))                          )
                        (reparse-symbol indented_block_body) [72351 72406])
                    ("__get_points" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72431 72435]))                          
                        :documentation "__get_points(b2WorldManifold self) -> PyObject *")
                        (reparse-symbol indented_block_body) [72414 72558])
                    ("points" variable nil (reparse-symbol indented_block_body) [72564 72601])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [72646 72712])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [72721 72749]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [72621 72625])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [72627 72635]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [72608 72750])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [72756 72804]))                  
                :type "class")
                nil [71308 72805])
            ("b2WorldManifold" variable nil nil [72805 72910])
            ("b2WorldManifold" variable nil nil [72911 73012])
            ("b2WorldManifold" variable nil nil [73013 73122])
            ("b2WorldManifold_swigregister" variable nil nil [73123 73189])
            ("b2WorldManifold_swigregister" code nil nil [73190 73235])
            ("_Box2D" code nil nil [73238 73278])
            ("b2_nullState" variable nil nil [73279 73313])
            ("_Box2D" code nil nil [73315 73354])
            ("b2_addState" variable nil nil [73355 73387])
            ("_Box2D" code nil nil [73389 73432])
            ("b2_persistState" variable nil nil [73433 73473])
            ("_Box2D" code nil nil [73475 73517])
            ("b2_removeState" variable nil nil [73518 73556])
            ("b2ClipVertex" type
               (:documentation "Used for computing contact manifolds."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [73637 73740])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [73745 73766])
                    ("v" variable nil (reparse-symbol indented_block_body) [73771 73843])
                    ("id" variable nil (reparse-symbol indented_block_body) [73848 73923])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [73929 73950])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [73970 73974]))                          
                        :documentation "__hash__(b2ClipVertex self) -> long")
                        (reparse-symbol indented_block_body) [73957 74077])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74096 74100]))                          )
                        (reparse-symbol indented_block_body) [74083 74138])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [74182 74242])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [74251 74279]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [74157 74161])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [74163 74171]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [74144 74280])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [74286 74331]))                  
                :type "class")
                nil [73557 74332])
            ("b2ClipVertex" variable nil nil [74332 74424])
            ("b2ClipVertex_swigregister" variable nil nil [74425 74485])
            ("b2ClipVertex_swigregister" code nil nil [74486 74525])
            ("b2RayCastInput" type
               (:documentation "Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1)."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [74649 74752])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [74757 74778])
                    ("p1" variable nil (reparse-symbol indented_block_body) [74783 74862])
                    ("p2" variable nil (reparse-symbol indented_block_body) [74867 74946])
                    ("maxFraction" variable nil (reparse-symbol indented_block_body) [74951 75057])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [75063 75084])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75104 75108]))                          
                        :documentation "__hash__(b2RayCastInput self) -> long")
                        (reparse-symbol indented_block_body) [75091 75215])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75234 75238]))                          )
                        (reparse-symbol indented_block_body) [75221 75276])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [75320 75384])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [75393 75421]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [75295 75299])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [75301 75309]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [75282 75422])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [75428 75475]))                  
                :type "class")
                nil [74527 75476])
            ("b2RayCastInput" variable nil nil [75476 75574])
            ("b2RayCastInput_swigregister" variable nil nil [75575 75639])
            ("b2RayCastInput_swigregister" code nil nil [75640 75683])
            ("b2RayCastOutput" type
               (:documentation "Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and p2 come from  b2RayCastInput."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [75838 75941])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [75946 75967])
                    ("normal" variable nil (reparse-symbol indented_block_body) [75972 76065])
                    ("fraction" variable nil (reparse-symbol indented_block_body) [76070 76169])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [76175 76196])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76216 76220]))                          
                        :documentation "__hash__(b2RayCastOutput self) -> long")
                        (reparse-symbol indented_block_body) [76203 76329])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76348 76352]))                          )
                        (reparse-symbol indented_block_body) [76335 76390])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [76434 76500])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [76509 76537]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [76409 76413])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [76415 76423]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [76396 76538])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [76544 76592]))                  
                :type "class")
                nil [75685 76593])
            ("b2RayCastOutput" variable nil nil [76593 76694])
            ("b2RayCastOutput_swigregister" variable nil nil [76695 76761])
            ("b2RayCastOutput_swigregister" code nil nil [76762 76807])
            ("b2AABB" type
               (:documentation "An axis aligned bounding box."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [76875 76978])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [76983 77004])
                    ("__IsValid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77024 77028]))                          
                        :documentation "
        __IsValid(b2AABB self) -> bool

        Verify that the bounds are sorted.
        ")
                        (reparse-symbol indented_block_body) [77010 77183])
                    ("__GetCenter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77205 77209]))                          
                        :documentation "
        __GetCenter(b2AABB self) -> b2Vec2

        Get the center of the AABB.
        ")
                        (reparse-symbol indented_block_body) [77189 77363])
                    ("__GetExtents" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77386 77390]))                          
                        :documentation "
        __GetExtents(b2AABB self) -> b2Vec2

        Get the extents of the AABB (half-widths).
        ")
                        (reparse-symbol indented_block_body) [77369 77561])
                    ("__GetPerimeter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77586 77590]))                          
                        :documentation "
        __GetPerimeter(b2AABB self) -> float32

        Get the perimeter length.
        ")
                        (reparse-symbol indented_block_body) [77567 77749])
                    ("Combine" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [77767 77771])
                            ("args" variable nil (reparse-symbol function_parameters) [77773 77778]))                          
                        :documentation "
        Combine(b2AABB self, b2AABB aabb)
        Combine(b2AABB self, b2AABB aabb1, b2AABB aabb2)

        Combine two AABBs into this one.
        ")
                        (reparse-symbol indented_block_body) [77755 77996])
                    ("RayCast" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [78014 78018])
                            ("output" variable nil (reparse-symbol function_parameters) [78020 78026])
                            ("input" variable nil (reparse-symbol function_parameters) [78028 78033]))                          
                        :documentation "RayCast(b2AABB self, b2RayCastOutput output, b2RayCastInput input) -> bool")
                        (reparse-symbol indented_block_body) [78002 78183])
                    ("lowerBound" variable nil (reparse-symbol indented_block_body) [78188 78275])
                    ("upperBound" variable nil (reparse-symbol indented_block_body) [78280 78367])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [78373 78394])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [78414 78418]))                          
                        :documentation "__hash__(b2AABB self) -> long")
                        (reparse-symbol indented_block_body) [78401 78509])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [78528 78532]))                          )
                        (reparse-symbol indented_block_body) [78515 78570])
                    ("valid" variable nil (reparse-symbol indented_block_body) [78600 78633])
                    ("extents" variable nil (reparse-symbol indented_block_body) [78638 78676])
                    ("center" variable nil (reparse-symbol indented_block_body) [78681 78717])
                    ("perimeter" variable nil (reparse-symbol indented_block_body) [78722 78764])
                    ("__contains__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [78789 78793])
                            ("args" variable nil (reparse-symbol function_parameters) [78795 78800]))                          
                        :documentation "
        __contains__(b2AABB self, b2AABB aabb) -> bool
        __contains__(b2AABB self, b2Vec2 point) -> bool
        ")
                        (reparse-symbol indented_block_body) [78772 78993])
                    ("overlaps" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [79012 79016])
                            ("aabb2" variable nil (reparse-symbol function_parameters) [79018 79023]))                          
                        :documentation "overlaps(b2AABB self, b2AABB aabb2) -> bool")
                        (reparse-symbol indented_block_body) [78999 79135])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [79179 79227])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [79236 79264]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [79154 79158])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [79160 79168]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [79141 79265])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [79271 79310]))                  
                :type "class")
                nil [76809 79311])
            ("b2AABB" variable nil nil [79311 79387])
            ("b2AABB" variable nil nil [79388 79468])
            ("b2AABB" variable nil nil [79469 79551])
            ("b2AABB" variable nil nil [79552 79638])
            ("b2AABB" variable nil nil [79639 79711])
            ("b2AABB" variable nil nil [79712 79784])
            ("b2AABB" variable nil nil [79785 79859])
            ("b2AABB" variable nil nil [79860 79942])
            ("b2AABB" variable nil nil [79943 80017])
            ("b2AABB_swigregister" variable nil nil [80018 80066])
            ("b2AABB_swigregister" code nil nil [80067 80094])
            ("b2CollideCircles" function
               (:documentation "
    b2CollideCircles(b2Manifold manifold, b2CircleShape circleA, b2Transform xfA, b2CircleShape circleB, b2Transform xfB)

    Compute the collision manifold between two circles.
    "
                :arguments 
                  ( ("manifold" variable nil (reparse-symbol function_parameters) [80118 80126])
                    ("circleA" variable nil (reparse-symbol function_parameters) [80128 80135])
                    ("xfA" variable nil (reparse-symbol function_parameters) [80137 80140])
                    ("circleB" variable nil (reparse-symbol function_parameters) [80142 80149])
                    ("xfB" variable nil (reparse-symbol function_parameters) [80151 80154]))                  )
                nil [80097 80425])
            ("b2CollidePolygonAndCircle" function
               (:documentation "
    b2CollidePolygonAndCircle(b2Manifold manifold, b2PolygonShape polygonA, b2Transform xfA, b2CircleShape circleB, b2Transform xfB)

    Compute the collision manifold between a polygon and a circle.
    "
                :arguments 
                  ( ("manifold" variable nil (reparse-symbol function_parameters) [80456 80464])
                    ("polygonA" variable nil (reparse-symbol function_parameters) [80466 80474])
                    ("xfA" variable nil (reparse-symbol function_parameters) [80476 80479])
                    ("circleB" variable nil (reparse-symbol function_parameters) [80481 80488])
                    ("xfB" variable nil (reparse-symbol function_parameters) [80490 80493]))                  )
                nil [80426 80796])
            ("b2CollidePolygons" function
               (:documentation "
    b2CollidePolygons(b2Manifold manifold, b2PolygonShape polygonA, b2Transform xfA, b2PolygonShape polygonB, b2Transform xfB)

    Compute the collision manifold between two polygons.
    "
                :arguments 
                  ( ("manifold" variable nil (reparse-symbol function_parameters) [80819 80827])
                    ("polygonA" variable nil (reparse-symbol function_parameters) [80829 80837])
                    ("xfA" variable nil (reparse-symbol function_parameters) [80839 80842])
                    ("polygonB" variable nil (reparse-symbol function_parameters) [80844 80852])
                    ("xfB" variable nil (reparse-symbol function_parameters) [80854 80857]))                  )
                nil [80797 81137])
            ("b2CollideEdgeAndCircle" function
               (:documentation "
    b2CollideEdgeAndCircle(b2Manifold manifold, b2EdgeShape polygonA, b2Transform xfA, b2CircleShape circleB, b2Transform xfB)

    Compute the collision manifold between an edge and a circle.
    "
                :arguments 
                  ( ("manifold" variable nil (reparse-symbol function_parameters) [81165 81173])
                    ("polygonA" variable nil (reparse-symbol function_parameters) [81175 81183])
                    ("xfA" variable nil (reparse-symbol function_parameters) [81185 81188])
                    ("circleB" variable nil (reparse-symbol function_parameters) [81190 81197])
                    ("xfB" variable nil (reparse-symbol function_parameters) [81199 81202]))                  )
                nil [81138 81494])
            ("b2CollideEdgeAndPolygon" function
               (:documentation "
    b2CollideEdgeAndPolygon(b2Manifold manifold, b2EdgeShape edgeA, b2Transform xfA, b2PolygonShape circleB, b2Transform xfB)

    Compute the collision manifold between an edge and a circle.
    "
                :arguments 
                  ( ("manifold" variable nil (reparse-symbol function_parameters) [81523 81531])
                    ("edgeA" variable nil (reparse-symbol function_parameters) [81533 81538])
                    ("xfA" variable nil (reparse-symbol function_parameters) [81540 81543])
                    ("circleB" variable nil (reparse-symbol function_parameters) [81545 81552])
                    ("xfB" variable nil (reparse-symbol function_parameters) [81554 81557]))                  )
                nil [81495 81846])
            ("b2ClipSegmentToLine" function
               (:documentation "
    b2ClipSegmentToLine(b2ClipVertex vOut, b2ClipVertex vIn, b2Vec2 normal, float32 offset, int32 vertexIndexA) -> int32

    Clipping for contact manifolds.
    "
                :arguments 
                  ( ("vOut" variable nil (reparse-symbol function_parameters) [81871 81875])
                    ("vIn" variable nil (reparse-symbol function_parameters) [81877 81880])
                    ("normal" variable nil (reparse-symbol function_parameters) [81882 81888])
                    ("offset" variable nil (reparse-symbol function_parameters) [81890 81896])
                    ("vertexIndexA" variable nil (reparse-symbol function_parameters) [81898 81910]))                  )
                nil [81847 82166])
            ("b2TestOverlap" function
               (:documentation "
    b2TestOverlap(b2Shape shapeA, int32 indexA, b2Shape shapeB, int32 indexB, b2Transform xfA, b2Transform xfB) -> bool
    b2TestOverlap(b2AABB a, b2AABB b) -> bool

    Determine if two generic shapes overlap.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [82185 82190]))                  )
                nil [82167 82460])
            ("_b2Vec2Array" type
               (:documentation "Proxy of C++ _b2Vec2Array class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [82534 82637])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [82642 82663])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(_b2Vec2Array self, size_t nelements) -> _b2Vec2Array\"\"\"" code nil (reparse-symbol indented_block_body) [82708 82775])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [82784 82854]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [82682 82686])
                            ("nelements" variable nil (reparse-symbol function_parameters) [82688 82697]))                          
                        :documentation "__init__(_b2Vec2Array self, size_t nelements) -> _b2Vec2Array"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [82669 82855])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [82859 82904])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [82926 82930])
                            ("index" variable nil (reparse-symbol function_parameters) [82932 82937]))                          
                        :documentation "__getitem__(_b2Vec2Array self, size_t index) -> b2Vec2")
                        (reparse-symbol indented_block_body) [82910 83069])
                    ("__setitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [83091 83095])
                            ("index" variable nil (reparse-symbol function_parameters) [83097 83102])
                            ("value" variable nil (reparse-symbol function_parameters) [83104 83109]))                          
                        :documentation "__setitem__(_b2Vec2Array self, size_t index, b2Vec2 value)")
                        (reparse-symbol indented_block_body) [83075 83252])
                    ("cast" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [83267 83271]))                          
                        :documentation "cast(_b2Vec2Array self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [83258 83368])
                    ("frompointer" function
                       (:documentation "frompointer(b2Vec2 t) -> _b2Vec2Array"
                        :arguments 
                          ( ("t" variable nil (reparse-symbol function_parameters) [83390 83391]))                          )
                        (reparse-symbol indented_block_body) [83374 83496])
                    ("frompointer" variable nil (reparse-symbol indented_block_body) [83501 83540]))                  
                :type "class")
                nil [82460 83541])
            ("_b2Vec2Array" variable nil nil [83541 83639])
            ("_b2Vec2Array" variable nil nil [83640 83738])
            ("_b2Vec2Array" variable nil nil [83739 83823])
            ("_b2Vec2Array_swigregister" variable nil nil [83824 83884])
            ("_b2Vec2Array_swigregister" code nil nil [83885 83924])
            ("_b2Vec2Array_frompointer" function
               (:documentation "_b2Vec2Array_frompointer(b2Vec2 t) -> _b2Vec2Array"
                :arguments 
                  ( ("t" variable nil (reparse-symbol function_parameters) [83955 83956]))                  )
                nil [83926 84066])
            ("_Box2D" code nil nil [84068 84113])
            ("e_convertVertices" variable nil nil [84114 84158])
            ("b2Color" type
               (:documentation "Color for debug drawing. Each value has the range [0,1]."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [84253 84356])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [84361 84382])
                    ("Set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84396 84400])
                            ("ri" variable nil (reparse-symbol function_parameters) [84402 84404])
                            ("gi" variable nil (reparse-symbol function_parameters) [84406 84408])
                            ("bi" variable nil (reparse-symbol function_parameters) [84410 84412]))                          
                        :documentation "Set(b2Color self, float32 ri, float32 gi, float32 bi)")
                        (reparse-symbol indented_block_body) [84388 84535])
                    ("r" variable nil (reparse-symbol indented_block_body) [84540 84602])
                    ("g" variable nil (reparse-symbol indented_block_body) [84607 84669])
                    ("b" variable nil (reparse-symbol indented_block_body) [84674 84736])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [84742 84763])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84783 84787]))                          
                        :documentation "__hash__(b2Color self) -> long")
                        (reparse-symbol indented_block_body) [84770 84880])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84899 84903]))                          )
                        (reparse-symbol indented_block_body) [84886 84941])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2Color self) -> b2Color
        __init__(b2Color self, float32 r, float32 g, float32 b) -> b2Color
        __init__(b2Color self, b2Color other) -> b2Color

        Color for debug drawing. Each value has the range [0,1].
        \"\"\"" code nil (reparse-symbol indented_block_body) [84982 85237])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [85246 85302]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [84960 84964])
                            ("args" variable nil (reparse-symbol function_parameters) [84966 84971]))                          
                        :documentation "
        __init__(b2Color self) -> b2Color
        __init__(b2Color self, float32 r, float32 g, float32 b) -> b2Color
        __init__(b2Color self, b2Color other) -> b2Color

        Color for debug drawing. Each value has the range [0,1].
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [84947 85303])
                    ("__get_bytes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [85324 85328]))                          
                        :documentation "__get_bytes(b2Color self) -> PyObject *")
                        (reparse-symbol indented_block_body) [85308 85433])
                    ("__iter__" variable nil (reparse-symbol indented_block_body) [85439 85493])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [85499 85545])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [85550 85599])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [85617 85621]))                          )
                        (reparse-symbol indented_block_body) [85604 85686])
                    ("__len__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [85702 85706]))                          )
                        (reparse-symbol indented_block_body) [85690 85726])
                    ("__copy__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [85743 85747]))                          )
                        (reparse-symbol indented_block_body) [85730 85797])
                    ("copy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [85810 85814]))                          )
                        (reparse-symbol indented_block_body) [85801 85864])
                    ("__set_bytes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [85884 85888])
                            ("value" variable nil (reparse-symbol function_parameters) [85890 85895]))                          )
                        (reparse-symbol indented_block_body) [85868 86055])
                    ("__set_tuple" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [86075 86079])
                            ("value" variable nil (reparse-symbol function_parameters) [86081 86086]))                          )
                        (reparse-symbol indented_block_body) [86059 86234])
                    ("__nonzero__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [86254 86258]))                          )
                        (reparse-symbol indented_block_body) [86238 86318])
                    ("list" variable nil (reparse-symbol indented_block_body) [86323 86377])
                    ("bytes" variable nil (reparse-symbol indented_block_body) [86382 86424])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [86447 86451])
                            ("i" variable nil (reparse-symbol function_parameters) [86453 86454]))                          
                        :documentation "__getitem__(b2Color self, int i) -> float32")
                        (reparse-symbol indented_block_body) [86431 86566])
                    ("__setitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [86588 86592])
                            ("i" variable nil (reparse-symbol function_parameters) [86594 86595])
                            ("value" variable nil (reparse-symbol function_parameters) [86597 86602]))                          
                        :documentation "__setitem__(b2Color self, int i, float32 value)")
                        (reparse-symbol indented_block_body) [86572 86725])
                    ("__truediv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [86747 86751])
                            ("a" variable nil (reparse-symbol function_parameters) [86753 86754]))                          
                        :documentation "__truediv__(b2Color self, float32 a) -> b2Color")
                        (reparse-symbol indented_block_body) [86731 86870])
                    ("__add__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [86888 86892])
                            ("o" variable nil (reparse-symbol function_parameters) [86894 86895]))                          
                        :documentation "__add__(b2Color self, b2Color o) -> b2Color")
                        (reparse-symbol indented_block_body) [86876 87003])
                    ("__sub__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87021 87025])
                            ("o" variable nil (reparse-symbol function_parameters) [87027 87028]))                          
                        :documentation "__sub__(b2Color self, b2Color o) -> b2Color")
                        (reparse-symbol indented_block_body) [87009 87136])
                    ("__div__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87154 87158])
                            ("a" variable nil (reparse-symbol function_parameters) [87160 87161]))                          
                        :documentation "__div__(b2Color self, float32 a) -> b2Color")
                        (reparse-symbol indented_block_body) [87142 87269])
                    ("__rmul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87288 87292])
                            ("a" variable nil (reparse-symbol function_parameters) [87294 87295]))                          
                        :documentation "__rmul__(b2Color self, float32 a) -> b2Color")
                        (reparse-symbol indented_block_body) [87275 87405])
                    ("__mul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87423 87427])
                            ("a" variable nil (reparse-symbol function_parameters) [87429 87430]))                          
                        :documentation "__mul__(b2Color self, float32 a) -> b2Color")
                        (reparse-symbol indented_block_body) [87411 87538])
                    ("__isub" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87555 87559])
                            ("o" variable nil (reparse-symbol function_parameters) [87561 87562]))                          
                        :documentation "__isub(b2Color self, b2Color o)")
                        (reparse-symbol indented_block_body) [87544 87657])
                    ("__itruediv" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87678 87682])
                            ("o" variable nil (reparse-symbol function_parameters) [87684 87685]))                          
                        :documentation "__itruediv(b2Color self, b2Color o)")
                        (reparse-symbol indented_block_body) [87663 87788])
                    ("__idiv" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87805 87809])
                            ("o" variable nil (reparse-symbol function_parameters) [87811 87812]))                          
                        :documentation "__idiv(b2Color self, b2Color o)")
                        (reparse-symbol indented_block_body) [87794 87907])
                    ("__imul" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [87924 87928])
                            ("o" variable nil (reparse-symbol function_parameters) [87930 87931]))                          
                        :documentation "__imul(b2Color self, b2Color o)")
                        (reparse-symbol indented_block_body) [87913 88026])
                    ("__iadd" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [88043 88047])
                            ("o" variable nil (reparse-symbol function_parameters) [88049 88050]))                          
                        :documentation "__iadd(b2Color self, b2Color o)")
                        (reparse-symbol indented_block_body) [88032 88145])
                    ("__equ" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [88161 88165])
                            ("b" variable nil (reparse-symbol function_parameters) [88167 88168]))                          
                        :documentation "__equ(b2Color self, b2Color b) -> bool")
                        (reparse-symbol indented_block_body) [88151 88269])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [88274 88314]))                  
                :type "class")
                nil [84159 88315])
            ("b2Color" variable nil nil [88315 88382])
            ("b2Color" variable nil nil [88383 88460])
            ("b2Color" variable nil nil [88461 88544])
            ("b2Color" variable nil nil [88545 88628])
            ("b2Color" variable nil nil [88629 88712])
            ("b2Color" variable nil nil [88713 88796])
            ("b2Color" variable nil nil [88797 88872])
            ("b2Color" variable nil nil [88873 88948])
            ("b2Color" variable nil nil [88949 89024])
            ("b2Color" variable nil nil [89025 89102])
            ("b2Color" variable nil nil [89103 89178])
            ("b2Color" variable nil nil [89179 89252])
            ("b2Color" variable nil nil [89253 89334])
            ("b2Color" variable nil nil [89335 89408])
            ("b2Color" variable nil nil [89409 89482])
            ("b2Color" variable nil nil [89483 89556])
            ("b2Color" variable nil nil [89557 89628])
            ("b2Color_swigregister" variable nil nil [89629 89679])
            ("b2Color_swigregister" code nil nil [89680 89709])
            ("b2Draw" type
               (:documentation "Implement and register this class with a  b2Worldto provide debug drawing of physics entities in your game."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [89855 89958])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [89963 89984])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [90028 90121])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [90129 90184])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [90193 90221]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [90003 90007])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [90009 90017]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [89990 90222])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [90228 90267])
                    ("e_shapeBit" variable nil (reparse-symbol indented_block_body) [90272 90309])
                    ("e_jointBit" variable nil (reparse-symbol indented_block_body) [90314 90351])
                    ("e_aabbBit" variable nil (reparse-symbol indented_block_body) [90356 90391])
                    ("e_pairBit" variable nil (reparse-symbol indented_block_body) [90396 90431])
                    ("e_centerOfMassBit" variable nil (reparse-symbol indented_block_body) [90436 90487])
                    ("__SetFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [90508 90512])
                            ("flags" variable nil (reparse-symbol function_parameters) [90514 90519]))                          
                        :documentation "
        __SetFlags(b2Draw self, uint32 flags)

        Set the drawing flags.
        ")
                        (reparse-symbol indented_block_body) [90493 90677])
                    ("__GetFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [90698 90702]))                          
                        :documentation "
        __GetFlags(b2Draw self) -> uint32

        Get the drawing flags.
        ")
                        (reparse-symbol indented_block_body) [90683 90849])
                    ("AppendFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [90871 90875])
                            ("flags" variable nil (reparse-symbol function_parameters) [90877 90882]))                          
                        :documentation "
        AppendFlags(b2Draw self, uint32 flags)

        Append flags to the current flags.
        ")
                        (reparse-symbol indented_block_body) [90855 91054])
                    ("ClearFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [91075 91079])
                            ("flags" variable nil (reparse-symbol function_parameters) [91081 91086]))                          
                        :documentation "
        ClearFlags(b2Draw self, uint32 flags)

        Clear flags from the current flags.
        ")
                        (reparse-symbol indented_block_body) [91060 91257])
                    ("DrawPolygon" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [91279 91283])
                            ("vertices" variable nil (reparse-symbol function_parameters) [91285 91293])
                            ("vertexCount" variable nil (reparse-symbol function_parameters) [91295 91306])
                            ("color" variable nil (reparse-symbol function_parameters) [91308 91313]))                          
                        :documentation "
        DrawPolygon(b2Draw self, b2Vec2 vertices, int32 vertexCount, b2Color color)

        Draw a closed polygon provided in CCW order.
        ")
                        (reparse-symbol indented_block_body) [91263 91555])
                    ("DrawSolidPolygon" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [91582 91586])
                            ("vertices" variable nil (reparse-symbol function_parameters) [91588 91596])
                            ("vertexCount" variable nil (reparse-symbol function_parameters) [91598 91609])
                            ("color" variable nil (reparse-symbol function_parameters) [91611 91616]))                          
                        :documentation "
        DrawSolidPolygon(b2Draw self, b2Vec2 vertices, int32 vertexCount, b2Color color)

        Draw a solid closed polygon provided in CCW order.
        ")
                        (reparse-symbol indented_block_body) [91561 91874])
                    ("DrawCircle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [91895 91899])
                            ("center" variable nil (reparse-symbol function_parameters) [91901 91907])
                            ("radius" variable nil (reparse-symbol function_parameters) [91909 91915])
                            ("color" variable nil (reparse-symbol function_parameters) [91917 91922]))                          
                        :documentation "
        DrawCircle(b2Draw self, b2Vec2 center, float32 radius, b2Color color)

        Draw a circle.
        ")
                        (reparse-symbol indented_block_body) [91880 92120])
                    ("DrawSolidCircle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [92146 92150])
                            ("center" variable nil (reparse-symbol function_parameters) [92152 92158])
                            ("radius" variable nil (reparse-symbol function_parameters) [92160 92166])
                            ("axis" variable nil (reparse-symbol function_parameters) [92168 92172])
                            ("color" variable nil (reparse-symbol function_parameters) [92174 92179]))                          
                        :documentation "
        DrawSolidCircle(b2Draw self, b2Vec2 center, float32 radius, b2Vec2 axis, b2Color color)

        Draw a solid circle.
        ")
                        (reparse-symbol indented_block_body) [92126 92412])
                    ("DrawSegment" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [92434 92438])
                            ("p1" variable nil (reparse-symbol function_parameters) [92440 92442])
                            ("p2" variable nil (reparse-symbol function_parameters) [92444 92446])
                            ("color" variable nil (reparse-symbol function_parameters) [92448 92453]))                          
                        :documentation "
        DrawSegment(b2Draw self, b2Vec2 p1, b2Vec2 p2, b2Color color)

        Draw a line segment.
        ")
                        (reparse-symbol indented_block_body) [92418 92642])
                    ("DrawTransform" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [92666 92670])
                            ("xf" variable nil (reparse-symbol function_parameters) [92672 92674]))                          
                        :documentation "
        DrawTransform(b2Draw self, b2Transform xf)

        Draw a transform. Choose your own length scale.

        Parameters:
        -----------

        xf: 
        a transform.
        ")
                        (reparse-symbol indented_block_body) [92648 92938])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [92944 92965])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [92985 92989]))                          
                        :documentation "__hash__(b2Draw self) -> long")
                        (reparse-symbol indented_block_body) [92972 93080])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [93099 93103]))                          )
                        (reparse-symbol indented_block_body) [93086 93141])
                    ("_flag_entries" variable nil (reparse-symbol indented_block_body) [93147 93404])
                    ("_SetFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [93423 93427])
                            ("value" variable nil (reparse-symbol function_parameters) [93429 93434]))                          )
                        (reparse-symbol indented_block_body) [93409 93611])
                    ("_GetFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [93629 93633]))                          )
                        (reparse-symbol indented_block_body) [93615 93797])
                    ("flags" variable nil (reparse-symbol indented_block_body) [93802 93901])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [93922 93926]))                          )
                        (reparse-symbol indented_block_body) [93907 94026]))                  
                :type "class")
                nil [89711 94026])
            ("b2Draw" variable nil nil [94026 94104])
            ("b2Draw" variable nil nil [94105 94183])
            ("b2Draw" variable nil nil [94184 94264])
            ("b2Draw" variable nil nil [94265 94343])
            ("b2Draw" variable nil nil [94344 94424])
            ("b2Draw" variable nil nil [94425 94515])
            ("b2Draw" variable nil nil [94516 94594])
            ("b2Draw" variable nil nil [94595 94683])
            ("b2Draw" variable nil nil [94684 94764])
            ("b2Draw" variable nil nil [94765 94849])
            ("b2Draw" variable nil nil [94850 94924])
            ("b2Draw_swigregister" variable nil nil [94925 94973])
            ("b2Draw_swigregister" code nil nil [94974 95001])
            ("b2DrawExtended" type
               (:documentation "Proxy of C++ b2DrawExtended class"
                :superclasses ("b2Draw")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [95081 95184])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [95189 95210])
                    ("convertVertices" variable nil (reparse-symbol indented_block_body) [95215 95333])
                    ("center" variable nil (reparse-symbol indented_block_body) [95338 95429])
                    ("offset" variable nil (reparse-symbol indented_block_body) [95434 95525])
                    ("zoom" variable nil (reparse-symbol indented_block_body) [95530 95615])
                    ("screenSize" variable nil (reparse-symbol indented_block_body) [95620 95723])
                    ("flipY" variable nil (reparse-symbol indented_block_body) [95728 95816])
                    ("flipX" variable nil (reparse-symbol indented_block_body) [95821 95909])
                    ("__Convert" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [95929 95933])
                            ("verts" variable nil (reparse-symbol function_parameters) [95935 95940])
                            ("vertexCount" variable nil (reparse-symbol function_parameters) [95942 95953]))                          
                        :documentation "__Convert(b2DrawExtended self, b2Vec2 verts, int32 vertexCount) -> PyObject *")
                        (reparse-symbol indented_block_body) [95915 96121])
                    ("to_screen" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [96141 96145])
                            ("point" variable nil (reparse-symbol function_parameters) [96147 96152]))                          
                        :documentation "to_screen(b2DrawExtended self, b2Vec2 point) -> PyObject *")
                        (reparse-symbol indented_block_body) [96127 96288])
                    ("DrawPolygon" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [96310 96314])
                            ("conv_vertices" variable nil (reparse-symbol function_parameters) [96316 96329])
                            ("vertexCount" variable nil (reparse-symbol function_parameters) [96331 96342])
                            ("color" variable nil (reparse-symbol function_parameters) [96344 96349]))                          
                        :documentation "
        DrawPolygon(b2DrawExtended self, b2Vec2 conv_vertices, int32 vertexCount, b2Color color)

        Draw a closed polygon provided in CCW order.
        ")
                        (reparse-symbol indented_block_body) [96294 96617])
                    ("DrawSolidPolygon" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [96644 96648])
                            ("conv_vertices" variable nil (reparse-symbol function_parameters) [96650 96663])
                            ("vertexCount" variable nil (reparse-symbol function_parameters) [96665 96676])
                            ("color" variable nil (reparse-symbol function_parameters) [96678 96683]))                          
                        :documentation "
        DrawSolidPolygon(b2DrawExtended self, b2Vec2 conv_vertices, int32 vertexCount, b2Color color)

        Draw a solid closed polygon provided in CCW order.
        ")
                        (reparse-symbol indented_block_body) [96623 96967])
                    ("DrawCircle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [96988 96992])
                            ("conv_p1" variable nil (reparse-symbol function_parameters) [96994 97001])
                            ("radius" variable nil (reparse-symbol function_parameters) [97003 97009])
                            ("color" variable nil (reparse-symbol function_parameters) [97011 97016]))                          
                        :documentation "
        DrawCircle(b2DrawExtended self, b2Vec2 conv_p1, float32 radius, b2Color color)

        Draw a circle.
        ")
                        (reparse-symbol indented_block_body) [96973 97232])
                    ("DrawSolidCircle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [97258 97262])
                            ("conv_p1" variable nil (reparse-symbol function_parameters) [97264 97271])
                            ("radius" variable nil (reparse-symbol function_parameters) [97273 97279])
                            ("axis" variable nil (reparse-symbol function_parameters) [97281 97285])
                            ("color" variable nil (reparse-symbol function_parameters) [97287 97292]))                          
                        :documentation "
        DrawSolidCircle(b2DrawExtended self, b2Vec2 conv_p1, float32 radius, b2Vec2 axis, b2Color color)

        Draw a solid circle.
        ")
                        (reparse-symbol indented_block_body) [97238 97543])
                    ("DrawSegment" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [97565 97569])
                            ("conv_p1" variable nil (reparse-symbol function_parameters) [97571 97578])
                            ("conv_p2" variable nil (reparse-symbol function_parameters) [97580 97587])
                            ("color" variable nil (reparse-symbol function_parameters) [97589 97594]))                          
                        :documentation "
        DrawSegment(b2DrawExtended self, b2Vec2 conv_p1, b2Vec2 conv_p2, b2Color color)

        Draw a line segment.
        ")
                        (reparse-symbol indented_block_body) [97549 97819])
                    ("DrawTransform" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [97843 97847])
                            ("xf" variable nil (reparse-symbol function_parameters) [97849 97851]))                          
                        :documentation "
        DrawTransform(b2DrawExtended self, b2Transform xf)

        Draw a transform. Choose your own length scale.

        Parameters:
        -----------

        xf: 
        a transform.
        ")
                        (reparse-symbol indented_block_body) [97825 98131])
                    ("__SetFlags" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [98152 98156])
                            ("flags" variable nil (reparse-symbol function_parameters) [98158 98163]))                          
                        :documentation "__SetFlags(b2DrawExtended self, uint32 flags)")
                        (reparse-symbol indented_block_body) [98137 98287])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [98292 98339])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [98383 98484])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [98492 98563])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [98572 98600]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [98358 98362])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [98364 98372]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [98345 98601])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [98608 98629])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [98649 98653]))                          
                        :documentation "__hash__(b2DrawExtended self) -> long")
                        (reparse-symbol indented_block_body) [98636 98760])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [98779 98783]))                          )
                        (reparse-symbol indented_block_body) [98766 98821])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [98841 98845]))                          )
                        (reparse-symbol indented_block_body) [98826 98953]))                  
                :type "class")
                nil [95003 98953])
            ("b2DrawExtended" variable nil nil [98953 99053])
            ("b2DrawExtended" variable nil nil [99054 99154])
            ("b2DrawExtended" variable nil nil [99155 99259])
            ("b2DrawExtended" variable nil nil [99260 99374])
            ("b2DrawExtended" variable nil nil [99375 99477])
            ("b2DrawExtended" variable nil nil [99478 99590])
            ("b2DrawExtended" variable nil nil [99591 99695])
            ("b2DrawExtended" variable nil nil [99696 99804])
            ("b2DrawExtended" variable nil nil [99805 99907])
            ("b2DrawExtended" variable nil nil [99908 100006])
            ("b2DrawExtended_swigregister" variable nil nil [100007 100071])
            ("b2DrawExtended_swigregister" code nil nil [100072 100115])
            ("b2MassData" type
               (:documentation "This holds the mass data computed for a shape."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [100204 100307])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [100312 100333])
                    ("mass" variable nil (reparse-symbol indented_block_body) [100338 100415])
                    ("center" variable nil (reparse-symbol indented_block_body) [100420 100503])
                    ("I" variable nil (reparse-symbol indented_block_body) [100508 100576])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [100582 100603])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [100623 100627]))                          
                        :documentation "__hash__(b2MassData self) -> long")
                        (reparse-symbol indented_block_body) [100610 100726])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [100745 100749]))                          )
                        (reparse-symbol indented_block_body) [100732 100787])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [100831 100887])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [100896 100924]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [100806 100810])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [100812 100820]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [100793 100925])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [100931 100974]))                  
                :type "class")
                nil [100117 100975])
            ("b2MassData" variable nil nil [100975 101061])
            ("b2MassData_swigregister" variable nil nil [101062 101118])
            ("b2MassData_swigregister" code nil nil [101119 101154])
            ("b2_chunkSize" variable nil nil [101155 101192])
            ("b2_maxBlockSize" variable nil nil [101193 101236])
            ("b2_blockSizes" variable nil nil [101237 101276])
            ("b2_chunkArrayIncrement" variable nil nil [101277 101334])
            ("b2Shape" type
               (:documentation "A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation in  b2Worldare created automatically when a  b2Fixtureis created. Shapes may encapsulate a one or more child shapes."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [101599 101702])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [101753 101819]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [101721 101725])
                            ("args" variable nil (reparse-symbol function_parameters) [101727 101732])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [101734 101742]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [101708 101820])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [101824 101845])
                    ("e_circle" variable nil (reparse-symbol indented_block_body) [101850 101884])
                    ("e_edge" variable nil (reparse-symbol indented_block_body) [101889 101919])
                    ("e_polygon" variable nil (reparse-symbol indented_block_body) [101924 101960])
                    ("e_chain" variable nil (reparse-symbol indented_block_body) [101965 101997])
                    ("e_typeCount" variable nil (reparse-symbol indented_block_body) [102002 102042])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [102047 102087])
                    ("__GetType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [102107 102111]))                          
                        :documentation "
        __GetType(b2Shape self) -> b2Shape::Type

        Get the type of this shape. You can use this to down cast to the concrete shape. 
        the shape type.
        ")
                        (reparse-symbol indented_block_body) [102093 102348])
                    ("__GetChildCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [102374 102378]))                          
                        :documentation "
        __GetChildCount(b2Shape self) -> int32

        Get the number of child primitives.
        ")
                        (reparse-symbol indented_block_body) [102354 102549])
                    ("TestPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [102569 102573])
                            ("xf" variable nil (reparse-symbol function_parameters) [102575 102577])
                            ("p" variable nil (reparse-symbol function_parameters) [102579 102580]))                          
                        :documentation "
        TestPoint(b2Shape self, b2Transform xf, b2Vec2 p) -> bool

        Test a point for containment in this shape. This only works for convex shapes.

        Parameters:
        -----------

        xf: 
        the shape world transform.

        p: 
        a point in world coordinates.
        ")
                        (reparse-symbol indented_block_body) [102555 102955])
                    ("RayCast" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [102973 102977])
                            ("output" variable nil (reparse-symbol function_parameters) [102979 102985])
                            ("input" variable nil (reparse-symbol function_parameters) [102987 102992])
                            ("transform" variable nil (reparse-symbol function_parameters) [102994 103003])
                            ("childIndex" variable nil (reparse-symbol function_parameters) [103005 103015]))                          
                        :documentation "
        RayCast(b2Shape self, b2RayCastOutput output, b2RayCastInput input, b2Transform transform, int32 childIndex) -> bool

        Cast a ray against a child shape.

        Parameters:
        -----------

        output: 
        the ray-cast results.

        input: 
        the ray-cast input parameters.

        transform: 
        the transform to be applied to the shape.

        childIndex: 
        the child shape index
        ")
                        (reparse-symbol indented_block_body) [102961 103560])
                    ("__ComputeAABB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [103584 103588])
                            ("aabb" variable nil (reparse-symbol function_parameters) [103590 103594])
                            ("xf" variable nil (reparse-symbol function_parameters) [103596 103598])
                            ("childIndex" variable nil (reparse-symbol function_parameters) [103600 103610]))                          
                        :documentation "
        __ComputeAABB(b2Shape self, b2AABB aabb, b2Transform xf, int32 childIndex)

        Given a transform, compute the associated axis aligned bounding box for a child shape.

        Parameters:
        -----------

        aabb: 
        returns the axis aligned box.

        xf: 
        the world transform of the shape.

        childIndex: 
        the child shape
        ")
                        (reparse-symbol indented_block_body) [103566 104085])
                    ("__ComputeMass" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [104109 104113])
                            ("massData" variable nil (reparse-symbol function_parameters) [104115 104123])
                            ("density" variable nil (reparse-symbol function_parameters) [104125 104132]))                          
                        :documentation "
        __ComputeMass(b2Shape self, b2MassData massData, float32 density)

        Compute the mass properties of this shape using its dimensions and density. The inertia tensor is computed about the local origin.

        Parameters:
        -----------

        massData: 
        returns the mass data for this shape.

        density: 
        the density in kilograms per meter squared.
        ")
                        (reparse-symbol indented_block_body) [104091 104620])
                    ("radius" variable nil (reparse-symbol indented_block_body) [104625 104702])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [104708 104729])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [104749 104753]))                          
                        :documentation "__hash__(b2Shape self) -> long")
                        (reparse-symbol indented_block_body) [104736 104846])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [104865 104869]))                          )
                        (reparse-symbol indented_block_body) [104852 104907])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [104913 104936])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [104941 104999])
                    ("type" variable nil (reparse-symbol indented_block_body) [105020 105052])
                    ("getAsType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [105072 105076]))                          )
                        (reparse-symbol indented_block_body) [105058 105099])
                    ("childCount" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [105133 105137]))                          
                        :documentation "
        Get the number of child primitives.
        ")
                        (reparse-symbol indented_block_body) [105104 105246])
                    ("getAABB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [105263 105267])
                            ("transform" variable nil (reparse-symbol function_parameters) [105269 105278])
                            ("childIndex" variable nil (reparse-symbol function_parameters) [105280 105290]))                          
                        :documentation "
        Given a transform, compute the associated axis aligned bounding box for a child shape.
        ")
                        (reparse-symbol indented_block_body) [105251 105646])
                    ("getMass" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [105663 105667])
                            ("density" variable nil (reparse-symbol function_parameters) [105669 105676]))                          
                        :documentation "
        Compute the mass properties of this shape using its dimensions and density.
        The inertia tensor is computed about the local origin.
        ")
                        (reparse-symbol indented_block_body) [105651 105929]))                  
                :type "class")
                nil [101336 105929])
            ("b2Shape" variable nil nil [105931 106010])
            ("b2Shape" variable nil nil [106011 106102])
            ("b2Shape" variable nil nil [106103 106182])
            ("b2Shape" variable nil nil [106183 106258])
            ("b2Shape" variable nil nil [106259 106346])
            ("b2Shape" variable nil nil [106347 106434])
            ("b2Shape" variable nil nil [106435 106512])
            ("b2Shape_swigregister" variable nil nil [106513 106563])
            ("b2Shape_swigregister" code nil nil [106564 106593])
            ("b2CircleShape" type
               (:documentation "A circle shape."
                :superclasses ("b2Shape")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [106655 106758])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [106763 106784])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [106828 106890])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [106899 106927]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [106803 106807])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [106809 106817]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [106790 106928])
                    ("pos" variable nil (reparse-symbol indented_block_body) [106934 107014])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [107020 107041])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [107061 107065]))                          
                        :documentation "__hash__(b2CircleShape self) -> long")
                        (reparse-symbol indented_block_body) [107048 107170])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [107189 107193]))                          )
                        (reparse-symbol indented_block_body) [107176 107231])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [107238 107284]))                  
                :type "class")
                nil [106595 107285])
            ("b2CircleShape" variable nil nil [107285 107380])
            ("b2CircleShape_swigregister" variable nil nil [107381 107443])
            ("b2CircleShape_swigregister" code nil nil [107444 107485])
            ("b2EdgeShape" type
               (:documentation "A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. The connectivity information is used to ensure correct contact normals."
                :superclasses ("b2Shape")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [107694 107797])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [107802 107823])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [107867 107925])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [107934 107962]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [107842 107846])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [107848 107856]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [107829 107963])
                    ("__Set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [107980 107984])
                            ("v1" variable nil (reparse-symbol function_parameters) [107986 107988])
                            ("v2" variable nil (reparse-symbol function_parameters) [107990 107992]))                          
                        :documentation "
        __Set(b2EdgeShape self, b2Vec2 v1, b2Vec2 v2)

        Set this as an isolated edge.
        ")
                        (reparse-symbol indented_block_body) [107970 108166])
                    ("vertex1" variable nil (reparse-symbol indented_block_body) [108171 108259])
                    ("vertex2" variable nil (reparse-symbol indented_block_body) [108264 108352])
                    ("vertex0" variable nil (reparse-symbol indented_block_body) [108357 108445])
                    ("vertex3" variable nil (reparse-symbol indented_block_body) [108450 108538])
                    ("hasVertex0" variable nil (reparse-symbol indented_block_body) [108543 108640])
                    ("hasVertex3" variable nil (reparse-symbol indented_block_body) [108645 108742])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [108748 108769])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [108789 108793]))                          
                        :documentation "__hash__(b2EdgeShape self) -> long")
                        (reparse-symbol indented_block_body) [108776 108894])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [108913 108917]))                          )
                        (reparse-symbol indented_block_body) [108900 108955])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [108974 108978]))                          )
                        (reparse-symbol indented_block_body) [108961 109042])
                    ("all_vertices" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [109078 109082]))                          
                        :documentation "Returns all of the vertices as a list of tuples [ (x0,y0), (x1,y1), (x2,y2) (x3,y3) ]
        Note that the validity of vertices 0 and 4 depend on whether or not
        hasVertex0 and hasVertex3 are set.
        ")
                        (reparse-symbol indented_block_body) [109047 109413])
                    ("__get_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [109437 109441]))                          
                        :documentation "Returns the basic vertices as a list of tuples [ (x1,y1), (x2,y2) ]
        To include the supporting vertices, see 'all_vertices'

        If you want to set vertex3 but not vertex0, pass in None for vertex0.
        ")
                        (reparse-symbol indented_block_body) [109418 109735])
                    ("__set_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [109759 109763])
                            ("vertices" variable nil (reparse-symbol function_parameters) [109765 109773]))                          )
                        (reparse-symbol indented_block_body) [109740 110365])
                    ("vertexCount" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [110400 110404]))                          
                        :documentation "
        Returns the number of valid vertices (as in, it counts whether or not 
        hasVertex0 or hasVertex3 are set)
        ")
                        (reparse-symbol indented_block_body) [110370 110726])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [110744 110748]))                          
                        :documentation "
        Iterates over the vertices in the Edge
        ")
                        (reparse-symbol indented_block_body) [110731 110874])
                    ("vertices" variable nil (reparse-symbol indented_block_body) [110879 110928])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [110934 110978]))                  
                :type "class")
                nil [107487 110979])
            ("b2EdgeShape" variable nil nil [110979 111062])
            ("b2EdgeShape" variable nil nil [111063 111152])
            ("b2EdgeShape_swigregister" variable nil nil [111153 111211])
            ("b2EdgeShape_swigregister" code nil nil [111212 111249])
            ("b2ChainShape" type
               (:documentation "A loop shape is a free form sequence of line segments that form a circular list. The loop may cross upon itself, but this is not recommended for smooth collision. The loop has double sided collision, so you can use inside and outside collision. Therefore, you may use any winding order. Since there may be many vertices, they are allocated using b2Alloc."
                :superclasses ("b2Shape")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [111649 111752])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [111757 111778])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [111822 111882])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [111891 111919]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [111797 111801])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [111803 111811]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [111784 111920])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [111926 111971])
                    ("CreateLoop" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [111992 111996])
                            ("vertices" variable nil (reparse-symbol function_parameters) [111998 112006])
                            ("count" variable nil (reparse-symbol function_parameters) [112008 112013]))                          
                        :documentation "CreateLoop(b2ChainShape self, b2Vec2 vertices, int32 count)")
                        (reparse-symbol indented_block_body) [111977 112159])
                    ("CreateChain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [112181 112185])
                            ("vertices" variable nil (reparse-symbol function_parameters) [112187 112195])
                            ("count" variable nil (reparse-symbol function_parameters) [112197 112202]))                          
                        :documentation "CreateChain(b2ChainShape self, b2Vec2 vertices, int32 count)")
                        (reparse-symbol indented_block_body) [112165 112350])
                    ("SetPrevVertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [112374 112378])
                            ("prevVertex" variable nil (reparse-symbol function_parameters) [112380 112390]))                          
                        :documentation "SetPrevVertex(b2ChainShape self, b2Vec2 prevVertex)")
                        (reparse-symbol indented_block_body) [112356 112526])
                    ("SetNextVertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [112550 112554])
                            ("nextVertex" variable nil (reparse-symbol function_parameters) [112556 112566]))                          
                        :documentation "SetNextVertex(b2ChainShape self, b2Vec2 nextVertex)")
                        (reparse-symbol indented_block_body) [112532 112702])
                    ("__GetChildEdge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [112727 112731])
                            ("edge" variable nil (reparse-symbol function_parameters) [112733 112737])
                            ("index" variable nil (reparse-symbol function_parameters) [112739 112744]))                          
                        :documentation "
        __GetChildEdge(b2ChainShape self, b2EdgeShape edge, int32 index)

        Get a child edge.
        ")
                        (reparse-symbol indented_block_body) [112708 112940])
                    ("m_prevVertex" variable nil (reparse-symbol indented_block_body) [112945 113050])
                    ("m_nextVertex" variable nil (reparse-symbol indented_block_body) [113055 113160])
                    ("m_hasPrevVertex" variable nil (reparse-symbol indented_block_body) [113165 113279])
                    ("m_hasNextVertex" variable nil (reparse-symbol indented_block_body) [113284 113398])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [113404 113425])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [113445 113449]))                          
                        :documentation "__hash__(b2ChainShape self) -> long")
                        (reparse-symbol indented_block_body) [113432 113552])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [113571 113575]))                          )
                        (reparse-symbol indented_block_body) [113558 113613])
                    ("__get_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [113638 113642]))                          
                        :documentation "__get_vertices(b2ChainShape self) -> PyObject *")
                        (reparse-symbol indented_block_body) [113619 113763])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [113782 113786]))                          )
                        (reparse-symbol indented_block_body) [113769 113851])
                    ("getChildEdge" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [113873 113877])
                            ("index" variable nil (reparse-symbol function_parameters) [113879 113884]))                          )
                        (reparse-symbol indented_block_body) [113856 114112])
                    ("edges" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [114141 114145]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [114117 114218])
                    ("vertexCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [114253 114257]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [114223 114294])
                    ("__get_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [114318 114322]))                          
                        :documentation "Returns all of the vertices as a list of tuples [ (x1,y1), (x2,y2) ... (xN,yN) ]")
                        (reparse-symbol indented_block_body) [114299 114549])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [114567 114571]))                          
                        :documentation "
        Iterates over the vertices in the Chain
        ")
                        (reparse-symbol indented_block_body) [114554 114698])
                    ("__set_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [114722 114726])
                            ("values" variable nil (reparse-symbol function_parameters) [114728 114734])
                            ("loop" variable nil (reparse-symbol function_parameters) [114736 114740]))                          )
                        (reparse-symbol indented_block_body) [114703 115749])
                    ("vertices" variable nil (reparse-symbol indented_block_body) [115754 115805])
                    ("vertices_chain" variable nil (reparse-symbol indented_block_body) [115810 115904])
                    ("vertices_loop" variable nil (reparse-symbol indented_block_body) [115909 115933])
                    ("__create" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [115953 115957])
                            ("v" variable nil (reparse-symbol function_parameters) [115959 115960])
                            ("c" variable nil (reparse-symbol function_parameters) [115962 115963])
                            ("loop" variable nil (reparse-symbol function_parameters) [115965 115969]))                          
                        :documentation "__create(b2ChainShape self, _b2Vec2Array v, int c, bool loop)")
                        (reparse-symbol indented_block_body) [115940 116110])
                    ("__get_vertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [116133 116137])
                            ("vnum" variable nil (reparse-symbol function_parameters) [116139 116143]))                          
                        :documentation "__get_vertex(b2ChainShape self, uint16 vnum) -> b2Vec2")
                        (reparse-symbol indented_block_body) [116116 116275])
                    ("__get_count" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [116297 116301]))                          
                        :documentation "__get_count(b2ChainShape self) -> int32")
                        (reparse-symbol indented_block_body) [116281 116411]))                  
                :type "class")
                nil [111251 116411])
            ("b2ChainShape" variable nil nil [116412 116508])
            ("b2ChainShape" variable nil nil [116509 116607])
            ("b2ChainShape" variable nil nil [116608 116710])
            ("b2ChainShape" variable nil nil [116711 116813])
            ("b2ChainShape" variable nil nil [116814 116918])
            ("b2ChainShape" variable nil nil [116919 117011])
            ("b2ChainShape" variable nil nil [117012 117116])
            ("b2ChainShape" variable nil nil [117117 117209])
            ("b2ChainShape" variable nil nil [117210 117310])
            ("b2ChainShape" variable nil nil [117311 117409])
            ("b2ChainShape_swigregister" variable nil nil [117410 117470])
            ("b2ChainShape_swigregister" code nil nil [117471 117510])
            ("b2PolygonShape" type
               (:documentation "A convex polygon. It is assumed that the interior of the polygon is to the left of each edge. Polygons have a maximum number of vertices equal to b2_maxPolygonVertices. In most cases you should not need many vertices for a convex polygon."
                :superclasses ("b2Shape")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [117796 117899])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [117904 117925])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [117969 118033])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [118042 118070]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [117944 117948])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [117950 117958]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [117931 118071])
                    ("SetAsBox" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [118091 118095])
                            ("args" variable nil (reparse-symbol function_parameters) [118097 118102]))                          
                        :documentation "
        SetAsBox(b2PolygonShape self, float32 hx, float32 hy)
        SetAsBox(b2PolygonShape self, float32 hx, float32 hy, b2Vec2 center, float32 angle)

        Build vertices to represent an oriented box.

        Parameters:
        -----------

        hx: 
        the half-width.

        hy: 
        the half-height.

        center: 
        the center of the box in local coordinates.

        angle: 
        the rotation of the box in local coordinates.
        ")
                        (reparse-symbol indented_block_body) [118078 118655])
                    ("Validate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [118674 118678]))                          
                        :documentation "Validate(b2PolygonShape self) -> bool")
                        (reparse-symbol indented_block_body) [118661 118785])
                    ("centroid" variable nil (reparse-symbol indented_block_body) [118790 118887])
                    ("vertexCount" variable nil (reparse-symbol indented_block_body) [118892 118998])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [119004 119025])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119045 119049]))                          
                        :documentation "__hash__(b2PolygonShape self) -> long")
                        (reparse-symbol indented_block_body) [119032 119156])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119175 119179]))                          )
                        (reparse-symbol indented_block_body) [119162 119217])
                    ("__get_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119242 119246]))                          
                        :documentation "__get_vertices(b2PolygonShape self) -> PyObject *")
                        (reparse-symbol indented_block_body) [119223 119371])
                    ("__get_normals" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119395 119399]))                          
                        :documentation "__get_normals(b2PolygonShape self) -> PyObject *")
                        (reparse-symbol indented_block_body) [119377 119522])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119541 119545]))                          )
                        (reparse-symbol indented_block_body) [119528 119612])
                    ("__clear_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119637 119641]))                          )
                        (reparse-symbol indented_block_body) [119616 119758])
                    ("__set_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [119781 119785])
                            ("values" variable nil (reparse-symbol function_parameters) [119787 119793]))                          )
                        (reparse-symbol indented_block_body) [119762 120748])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [120766 120770]))                          
                        :documentation "
        Iterates over the vertices in the polygon
        ")
                        (reparse-symbol indented_block_body) [120753 120899])
                    ("__IsValid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [120918 120922]))                          )
                        (reparse-symbol indented_block_body) [120904 120961])
                    ("valid" variable nil (reparse-symbol indented_block_body) [120966 121101])
                    ("vertices" variable nil (reparse-symbol indented_block_body) [121106 121237])
                    ("normals" variable nil (reparse-symbol indented_block_body) [121242 121360])
                    ("box" variable nil (reparse-symbol indented_block_body) [121365 121490])
                    ("__get_vertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [121514 121518])
                            ("vnum" variable nil (reparse-symbol function_parameters) [121520 121524]))                          
                        :documentation "__get_vertex(b2PolygonShape self, uint16 vnum) -> b2Vec2")
                        (reparse-symbol indented_block_body) [121497 121660])
                    ("__get_normal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [121683 121687])
                            ("vnum" variable nil (reparse-symbol function_parameters) [121689 121693]))                          
                        :documentation "__get_normal(b2PolygonShape self, uint16 vnum) -> b2Vec2")
                        (reparse-symbol indented_block_body) [121666 121829])
                    ("set_vertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [121850 121854])
                            ("args" variable nil (reparse-symbol function_parameters) [121856 121861]))                          
                        :documentation "
        set_vertex(b2PolygonShape self, uint16 vnum, b2Vec2 value)
        set_vertex(b2PolygonShape self, uint16 vnum, float32 x, float32 y)
        ")
                        (reparse-symbol indented_block_body) [121835 122091])
                    ("__set_vertices_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [122125 122129])
                            ("args" variable nil (reparse-symbol function_parameters) [122131 122136]))                          
                        :documentation "
        __set_vertices_internal(b2PolygonShape self, b2Vec2 points, int32 count)
        __set_vertices_internal(b2PolygonShape self)
        ")
                        (reparse-symbol indented_block_body) [122097 122371])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [122376 122423]))                  
                :type "class")
                nil [117512 122424])
            ("b2PolygonShape" variable nil nil [122424 122522])
            ("b2PolygonShape" variable nil nil [122523 122621])
            ("b2PolygonShape" variable nil nil [122622 122720])
            ("b2PolygonShape" variable nil nil [122721 122831])
            ("b2PolygonShape" variable nil nil [122832 122940])
            ("b2PolygonShape" variable nil nil [122941 123047])
            ("b2PolygonShape" variable nil nil [123048 123154])
            ("b2PolygonShape" variable nil nil [123155 123257])
            ("b2PolygonShape" variable nil nil [123258 123386])
            ("b2PolygonShape_swigregister" variable nil nil [123387 123451])
            ("b2PolygonShape_swigregister" code nil nil [123452 123495])
            ("_Box2D" code nil nil [123498 123537])
            ("b2_nullNode" variable nil nil [123538 123570])
            ("b2TreeNode" type
               (:documentation "Proxy of C++ b2TreeNode class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [123641 123744])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [123749 123770])
                    ("IsLeaf" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [123787 123791]))                          
                        :documentation "IsLeaf(b2TreeNode self) -> bool")
                        (reparse-symbol indented_block_body) [123776 123886])
                    ("aabb" variable nil (reparse-symbol indented_block_body) [123891 123968])
                    ("child1" variable nil (reparse-symbol indented_block_body) [123973 124056])
                    ("child2" variable nil (reparse-symbol indented_block_body) [124061 124144])
                    ("height" variable nil (reparse-symbol indented_block_body) [124149 124232])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(b2TreeNode self) -> b2TreeNode\"\"\"" code nil (reparse-symbol indented_block_body) [124266 124311])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [124320 124377]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [124251 124255]))                          
                        :documentation "__init__(b2TreeNode self) -> b2TreeNode"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [124238 124378])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [124382 124425]))                  
                :type "class")
                nil [123571 124426])
            ("b2TreeNode" variable nil nil [124426 124508])
            ("b2TreeNode_swigregister" variable nil nil [124509 124565])
            ("b2TreeNode_swigregister" code nil nil [124566 124601])
            ("b2Pair" type
               (:documentation "Proxy of C++ b2Pair class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [124665 124768])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [124773 124794])
                    ("proxyIdA" variable nil (reparse-symbol indented_block_body) [124799 124880])
                    ("proxyIdB" variable nil (reparse-symbol indented_block_body) [124885 124966])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [124972 124993])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [125013 125017]))                          
                        :documentation "__hash__(b2Pair self) -> long")
                        (reparse-symbol indented_block_body) [125000 125108])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [125127 125131]))                          )
                        (reparse-symbol indented_block_body) [125114 125169])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [125213 125261])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [125270 125298]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [125188 125192])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [125194 125202]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [125175 125299])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [125305 125344]))                  
                :type "class")
                nil [124603 125345])
            ("b2Pair" variable nil nil [125345 125419])
            ("b2Pair_swigregister" variable nil nil [125420 125468])
            ("b2Pair_swigregister" code nil nil [125469 125496])
            ("b2BroadPhase" type
               (:documentation "The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [125796 125899])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [125904 125925])
                    ("e_nullProxy" variable nil (reparse-symbol indented_block_body) [125930 125975])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2BroadPhase self) -> b2BroadPhase

        The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap.
        \"\"\"" code nil (reparse-symbol indented_block_body) [126009 126341])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [126350 126411]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [125994 125998]))                          
                        :documentation "
        __init__(b2BroadPhase self) -> b2BroadPhase

        The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [125981 126412])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [126416 126461])
                    ("MoveProxy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [126481 126485])
                            ("proxyId" variable nil (reparse-symbol function_parameters) [126487 126494])
                            ("aabb" variable nil (reparse-symbol function_parameters) [126496 126500])
                            ("displacement" variable nil (reparse-symbol function_parameters) [126502 126514]))                          
                        :documentation "
        MoveProxy(b2BroadPhase self, int32 proxyId, b2AABB aabb, b2Vec2 displacement)

        Call MoveProxy as many times as you like, then when you are done call UpdatePairs to finalized the proxy pairs (for your time step).
        ")
                        (reparse-symbol indented_block_body) [126467 126849])
                    ("TouchProxy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [126870 126874])
                            ("proxyId" variable nil (reparse-symbol function_parameters) [126876 126883]))                          
                        :documentation "
        TouchProxy(b2BroadPhase self, int32 proxyId)

        Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.
        ")
                        (reparse-symbol indented_block_body) [126855 127112])
                    ("GetFatAABB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [127133 127137])
                            ("proxyId" variable nil (reparse-symbol function_parameters) [127139 127146]))                          
                        :documentation "
        GetFatAABB(b2BroadPhase self, int32 proxyId) -> b2AABB

        Get the fat AABB for a proxy.
        ")
                        (reparse-symbol indented_block_body) [127118 127336])
                    ("TestOverlap" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [127358 127362])
                            ("proxyIdA" variable nil (reparse-symbol function_parameters) [127364 127372])
                            ("proxyIdB" variable nil (reparse-symbol function_parameters) [127374 127382]))                          
                        :documentation "
        TestOverlap(b2BroadPhase self, int32 proxyIdA, int32 proxyIdB) -> bool

        Test overlap of fat AABBs.
        ")
                        (reparse-symbol indented_block_body) [127342 127597])
                    ("__GetProxyCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [127623 127627]))                          
                        :documentation "
        __GetProxyCount(b2BroadPhase self) -> int32

        Get the number of proxies.
        ")
                        (reparse-symbol indented_block_body) [127603 127799])
                    ("__GetTreeHeight" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [127825 127829]))                          
                        :documentation "__GetTreeHeight(b2BroadPhase self) -> int32")
                        (reparse-symbol indented_block_body) [127805 127947])
                    ("__GetTreeBalance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [127974 127978]))                          
                        :documentation "__GetTreeBalance(b2BroadPhase self) -> int32")
                        (reparse-symbol indented_block_body) [127953 128098])
                    ("__GetTreeQuality" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [128125 128129]))                          
                        :documentation "__GetTreeQuality(b2BroadPhase self) -> float32")
                        (reparse-symbol indented_block_body) [128104 128251])
                    ("ShiftOrigin" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [128273 128277])
                            ("newOrigin" variable nil (reparse-symbol function_parameters) [128279 128288]))                          
                        :documentation "ShiftOrigin(b2BroadPhase self, b2Vec2 newOrigin)")
                        (reparse-symbol indented_block_body) [128257 128418])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [128424 128445])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [128465 128469]))                          
                        :documentation "__hash__(b2BroadPhase self) -> long")
                        (reparse-symbol indented_block_body) [128452 128572])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [128591 128595]))                          )
                        (reparse-symbol indented_block_body) [128578 128633])
                    ("proxyCount" variable nil (reparse-symbol indented_block_body) [128639 128681])
                    ("treeHeight" variable nil (reparse-symbol indented_block_body) [128686 128728])
                    ("treeBalance" variable nil (reparse-symbol indented_block_body) [128733 128777])
                    ("treeQuality" variable nil (reparse-symbol indented_block_body) [128782 128826]))                  
                :type "class")
                nil [125498 128827])
            ("b2BroadPhase" variable nil nil [128828 128922])
            ("b2BroadPhase" variable nil nil [128923 129019])
            ("b2BroadPhase" variable nil nil [129020 129116])
            ("b2BroadPhase" variable nil nil [129117 129215])
            ("b2BroadPhase" variable nil nil [129216 129322])
            ("b2BroadPhase" variable nil nil [129323 129429])
            ("b2BroadPhase" variable nil nil [129430 129538])
            ("b2BroadPhase" variable nil nil [129539 129647])
            ("b2BroadPhase" variable nil nil [129648 129746])
            ("b2BroadPhase" variable nil nil [129747 129839])
            ("b2BroadPhase_swigregister" variable nil nil [129840 129900])
            ("b2BroadPhase_swigregister" code nil nil [129901 129940])
            ("b2PairLessThan" function
               (:documentation "
    b2PairLessThan(b2Pair pair1, b2Pair pair2) -> bool

    This is used to sort pairs.
    "
                :arguments 
                  ( ("pair1" variable nil (reparse-symbol function_parameters) [129962 129967])
                    ("pair2" variable nil (reparse-symbol function_parameters) [129969 129974]))                  )
                nil [129943 130128])
            ("b2DistanceProxy" type
               (:documentation "A distance proxy is used by the GJK algorithm. It encapsulates any shape."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [130247 130350])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [130355 130376])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [130426 130492])
                            ("self" code nil (reparse-symbol indented_block_body) [130501 130523]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [130395 130399])
                            ("shape" variable nil (reparse-symbol function_parameters) [130401 130406])
                            ("index" variable nil (reparse-symbol function_parameters) [130408 130413]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [130382 130524])
                    ("Set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [130539 130543])
                            ("shape" variable nil (reparse-symbol function_parameters) [130545 130550])
                            ("index" variable nil (reparse-symbol function_parameters) [130552 130557]))                          
                        :documentation "
        Set(b2DistanceProxy self, b2Shape shape, int32 index)

        Initialize the proxy using the given shape. The shape must remain in scope while the proxy is in use.
        ")
                        (reparse-symbol indented_block_body) [130531 130819])
                    ("GetSupport" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [130840 130844])
                            ("d" variable nil (reparse-symbol function_parameters) [130846 130847]))                          
                        :documentation "
        GetSupport(b2DistanceProxy self, b2Vec2 d) -> int32

        Get the supporting vertex index in the given direction.
        ")
                        (reparse-symbol indented_block_body) [130825 131057])
                    ("GetSupportVertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [131084 131088])
                            ("d" variable nil (reparse-symbol function_parameters) [131090 131091]))                          
                        :documentation "
        GetSupportVertex(b2DistanceProxy self, b2Vec2 d) -> b2Vec2

        Get the supporting vertex in the given direction.
        ")
                        (reparse-symbol indented_block_body) [131063 131308])
                    ("__get_vertex_count" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [131337 131341]))                          
                        :documentation "
        __get_vertex_count(b2DistanceProxy self) -> int32

        Get the vertex count.
        ")
                        (reparse-symbol indented_block_body) [131314 131520])
                    ("__get_vertex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [131543 131547])
                            ("index" variable nil (reparse-symbol function_parameters) [131549 131554]))                          
                        :documentation "
        __get_vertex(b2DistanceProxy self, int32 index) -> b2Vec2

        Get a vertex by index. Used by b2Distance.
        ")
                        (reparse-symbol indented_block_body) [131526 131763])
                    ("m_buffer" variable nil (reparse-symbol indented_block_body) [131768 131867])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [131873 131894])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [131914 131918]))                          
                        :documentation "__hash__(b2DistanceProxy self) -> long")
                        (reparse-symbol indented_block_body) [131901 132027])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [132046 132050]))                          )
                        (reparse-symbol indented_block_body) [132033 132088])
                    ("__get_vertices" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [132113 132117]))                          
                        :documentation "Returns all of the vertices as a list of tuples [ (x1,y1), (x2,y2) ... (xN,yN) ]")
                        (reparse-symbol indented_block_body) [132094 132353])
                    ("vertices" variable nil (reparse-symbol indented_block_body) [132357 132398])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [132404 132452]))                  
                :type "class")
                nil [130128 132453])
            ("b2DistanceProxy" variable nil nil [132453 132544])
            ("b2DistanceProxy" variable nil nil [132545 132650])
            ("b2DistanceProxy" variable nil nil [132651 132768])
            ("b2DistanceProxy" variable nil nil [132769 132890])
            ("b2DistanceProxy" variable nil nil [132891 133000])
            ("b2DistanceProxy" variable nil nil [133001 133102])
            ("b2DistanceProxy_swigregister" variable nil nil [133103 133169])
            ("b2DistanceProxy_swigregister" code nil nil [133170 133215])
            ("b2DistanceInput" type
               (:documentation "Input for b2Distance. You have to option to use the shape radii in the computation. Even"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [133351 133454])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [133459 133480])
                    ("proxyA" variable nil (reparse-symbol indented_block_body) [133485 133578])
                    ("proxyB" variable nil (reparse-symbol indented_block_body) [133583 133676])
                    ("transformA" variable nil (reparse-symbol indented_block_body) [133681 133786])
                    ("transformB" variable nil (reparse-symbol indented_block_body) [133791 133896])
                    ("useRadii" variable nil (reparse-symbol indented_block_body) [133901 134000])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [134006 134027])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [134047 134051]))                          
                        :documentation "__hash__(b2DistanceInput self) -> long")
                        (reparse-symbol indented_block_body) [134034 134160])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [134179 134183]))                          )
                        (reparse-symbol indented_block_body) [134166 134221])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [134265 134331])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [134340 134368]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [134240 134244])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [134246 134254]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [134227 134369])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [134375 134423]))                  
                :type "class")
                nil [133217 134424])
            ("b2DistanceInput" variable nil nil [134424 134525])
            ("b2DistanceInput_swigregister" variable nil nil [134526 134592])
            ("b2DistanceInput_swigregister" code nil nil [134593 134638])
            ("b2DistanceOutput" type
               (:documentation "Output for b2Distance."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [134709 134812])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [134817 134838])
                    ("pointA" variable nil (reparse-symbol indented_block_body) [134843 134938])
                    ("pointB" variable nil (reparse-symbol indented_block_body) [134943 135038])
                    ("distance" variable nil (reparse-symbol indented_block_body) [135043 135144])
                    ("iterations" variable nil (reparse-symbol indented_block_body) [135149 135256])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [135262 135283])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [135303 135307]))                          
                        :documentation "__hash__(b2DistanceOutput self) -> long")
                        (reparse-symbol indented_block_body) [135290 135418])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [135437 135441]))                          )
                        (reparse-symbol indented_block_body) [135424 135479])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [135523 135591])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [135600 135628]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [135498 135502])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [135504 135512]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [135485 135629])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [135635 135684]))                  
                :type "class")
                nil [134640 135685])
            ("b2DistanceOutput" variable nil nil [135685 135789])
            ("b2DistanceOutput_swigregister" variable nil nil [135790 135858])
            ("b2DistanceOutput_swigregister" code nil nil [135859 135906])
            ("b2TOIInput" type
               (:documentation "Input parameters for b2TimeOfImpact."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [135985 136088])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [136093 136114])
                    ("proxyA" variable nil (reparse-symbol indented_block_body) [136119 136202])
                    ("proxyB" variable nil (reparse-symbol indented_block_body) [136207 136290])
                    ("sweepA" variable nil (reparse-symbol indented_block_body) [136295 136378])
                    ("sweepB" variable nil (reparse-symbol indented_block_body) [136383 136466])
                    ("tMax" variable nil (reparse-symbol indented_block_body) [136471 136548])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [136554 136575])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [136595 136599]))                          
                        :documentation "__hash__(b2TOIInput self) -> long")
                        (reparse-symbol indented_block_body) [136582 136698])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [136717 136721]))                          )
                        (reparse-symbol indented_block_body) [136704 136759])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [136803 136859])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [136868 136896]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [136778 136782])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [136784 136792]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [136765 136897])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [136903 136946]))                  
                :type "class")
                nil [135908 136947])
            ("b2TOIInput" variable nil nil [136947 137033])
            ("b2TOIInput_swigregister" variable nil nil [137034 137090])
            ("b2TOIInput_swigregister" code nil nil [137091 137126])
            ("b2TOIOutput" type
               (:documentation "Proxy of C++ b2TOIOutput class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [137200 137303])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [137308 137329])
                    ("e_unknown" variable nil (reparse-symbol indented_block_body) [137334 137374])
                    ("e_failed" variable nil (reparse-symbol indented_block_body) [137379 137417])
                    ("e_overlapped" variable nil (reparse-symbol indented_block_body) [137422 137468])
                    ("e_touching" variable nil (reparse-symbol indented_block_body) [137473 137515])
                    ("e_separated" variable nil (reparse-symbol indented_block_body) [137520 137564])
                    ("state" variable nil (reparse-symbol indented_block_body) [137569 137651])
                    ("t" variable nil (reparse-symbol indented_block_body) [137656 137726])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [137732 137753])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [137773 137777]))                          
                        :documentation "__hash__(b2TOIOutput self) -> long")
                        (reparse-symbol indented_block_body) [137760 137878])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [137897 137901]))                          )
                        (reparse-symbol indented_block_body) [137884 137939])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(b2TOIOutput self) -> b2TOIOutput\"\"\"" code nil (reparse-symbol indented_block_body) [137973 138020])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [138029 138088]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [137958 137962]))                          
                        :documentation "__init__(b2TOIOutput self) -> b2TOIOutput"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [137945 138089])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [138093 138137]))                  
                :type "class")
                nil [137128 138138])
            ("b2TOIOutput" variable nil nil [138138 138227])
            ("b2TOIOutput_swigregister" variable nil nil [138228 138286])
            ("b2TOIOutput_swigregister" code nil nil [138287 138324])
            ("_Box2D" code nil nil [138327 138368])
            ("b2_staticBody" variable nil nil [138369 138405])
            ("_Box2D" code nil nil [138407 138451])
            ("b2_kinematicBody" variable nil nil [138452 138494])
            ("_Box2D" code nil nil [138496 138538])
            ("b2_dynamicBody" variable nil nil [138539 138577])
            ("b2BodyDef" type
               (:documentation "A body definition holds all the data needed to construct a rigid body. You can safely re-use body definitions. Shapes are added to a body after construction."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [138775 138878])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [138883 138904])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [138948 139002])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [139011 139039]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [138923 138927])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [138929 138937]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [138910 139040])
                    ("type" variable nil (reparse-symbol indented_block_body) [139046 139121])
                    ("position" variable nil (reparse-symbol indented_block_body) [139126 139213])
                    ("angle" variable nil (reparse-symbol indented_block_body) [139218 139296])
                    ("linearVelocity" variable nil (reparse-symbol indented_block_body) [139301 139406])
                    ("angularVelocity" variable nil (reparse-symbol indented_block_body) [139411 139519])
                    ("linearDamping" variable nil (reparse-symbol indented_block_body) [139524 139626])
                    ("angularDamping" variable nil (reparse-symbol indented_block_body) [139631 139736])
                    ("allowSleep" variable nil (reparse-symbol indented_block_body) [139741 139834])
                    ("awake" variable nil (reparse-symbol indented_block_body) [139839 139917])
                    ("fixedRotation" variable nil (reparse-symbol indented_block_body) [139922 140024])
                    ("bullet" variable nil (reparse-symbol indented_block_body) [140029 140110])
                    ("active" variable nil (reparse-symbol indented_block_body) [140115 140196])
                    ("gravityScale" variable nil (reparse-symbol indented_block_body) [140201 140300])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [140306 140327])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [140347 140351]))                          
                        :documentation "__hash__(b2BodyDef self) -> long")
                        (reparse-symbol indented_block_body) [140334 140448])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [140467 140471]))                          )
                        (reparse-symbol indented_block_body) [140454 140509])
                    ("__GetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [140533 140537]))                          
                        :documentation "__GetUserData(b2BodyDef self) -> PyObject *")
                        (reparse-symbol indented_block_body) [140515 140650])
                    ("__SetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [140674 140678])
                            ("data" variable nil (reparse-symbol function_parameters) [140680 140684]))                          
                        :documentation "__SetUserData(b2BodyDef self, PyObject * data)")
                        (reparse-symbol indented_block_body) [140656 140806])
                    ("ClearUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [140830 140834]))                          
                        :documentation "ClearUserData(b2BodyDef self)")
                        (reparse-symbol indented_block_body) [140812 140933])
                    ("userData" variable nil (reparse-symbol indented_block_body) [140939 140988])
                    ("__del__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141005 141009]))                          )
                        (reparse-symbol indented_block_body) [140993 141041])
                    ("_fixtures" variable nil (reparse-symbol indented_block_body) [141047 141063])
                    ("_shapes" variable nil (reparse-symbol indented_block_body) [141068 141082])
                    ("_shapeFixture" variable nil (reparse-symbol indented_block_body) [141087 141107])
                    ("fixtures" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141140 141144]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [141113 141177])
                    ("fixtures" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141216 141220])
                            ("fixtures" variable nil (reparse-symbol function_parameters) [141222 141230]))                          
                        :decorators 
                          ( ("fixtures.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [141182 141378])
                    ("shapes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141408 141412]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [141383 141443])
                    ("shapes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141478 141482])
                            ("shapes" variable nil (reparse-symbol function_parameters) [141484 141490]))                          
                        :decorators 
                          ( ("shapes.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [141448 141623])
                    ("shapeFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141659 141663]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [141628 141700])
                    ("shapeFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [141747 141751])
                            ("fixture" variable nil (reparse-symbol function_parameters) [141753 141760]))                          
                        :decorators 
                          ( ("shapeFixture.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [141705 141800])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [141806 141848]))                  
                :type "class")
                nil [138578 141849])
            ("b2BodyDef" variable nil nil [141849 141932])
            ("b2BodyDef" variable nil nil [141933 142026])
            ("b2BodyDef" variable nil nil [142027 142120])
            ("b2BodyDef" variable nil nil [142121 142214])
            ("b2BodyDef_swigregister" variable nil nil [142215 142269])
            ("b2BodyDef_swigregister" code nil nil [142270 142303])
            ("b2Body" type
               (:documentation "A rigid body. These are created via  b2World::CreateBody."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [142399 142502])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [142553 142599]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [142521 142525])
                            ("args" variable nil (reparse-symbol function_parameters) [142527 142532])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [142534 142542]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [142508 142600])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [142604 142625])
                    ("__SetTransform" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [142650 142654])
                            ("position" variable nil (reparse-symbol function_parameters) [142656 142664])
                            ("angle" variable nil (reparse-symbol function_parameters) [142666 142671]))                          
                        :documentation "
        __SetTransform(b2Body self, b2Vec2 position, float32 angle)

        Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body's transform may cause non-physical behavior.

        Parameters:
        -----------

        position: 
        the world position of the body's local origin.

        angle: 
        the world rotation in radians.
        ")
                        (reparse-symbol indented_block_body) [142631 143184])
                    ("__GetTransform" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [143209 143213]))                          
                        :documentation "
        __GetTransform(b2Body self) -> b2Transform

        Get the body transform for the body's origin. 
        the world transform of the body's origin.
        ")
                        (reparse-symbol indented_block_body) [143190 143447])
                    ("__GetPosition" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [143471 143475]))                          
                        :documentation "
        __GetPosition(b2Body self) -> b2Vec2

        Get the world body origin position. 
        the world position of the body's origin.
        ")
                        (reparse-symbol indented_block_body) [143453 143691])
                    ("__GetAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [143712 143716]))                          
                        :documentation "
        __GetAngle(b2Body self) -> float32

        Get the angle in radians. 
        the current world rotation angle in radians.
        ")
                        (reparse-symbol indented_block_body) [143697 143921])
                    ("__GetWorldCenter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [143948 143952]))                          
                        :documentation "
        __GetWorldCenter(b2Body self) -> b2Vec2

        Get the world position of the center of mass.
        ")
                        (reparse-symbol indented_block_body) [143927 144134])
                    ("__GetLocalCenter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [144161 144165]))                          
                        :documentation "
        __GetLocalCenter(b2Body self) -> b2Vec2

        Get the local position of the center of mass.
        ")
                        (reparse-symbol indented_block_body) [144140 144347])
                    ("__SetLinearVelocity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [144377 144381])
                            ("v" variable nil (reparse-symbol function_parameters) [144383 144384]))                          
                        :documentation "
        __SetLinearVelocity(b2Body self, b2Vec2 v)

        Set the linear velocity of the center of mass.

        Parameters:
        -----------

        v: 
        the new linear velocity of the center of mass.
        ")
                        (reparse-symbol indented_block_body) [144353 144685])
                    ("__GetLinearVelocity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [144715 144719]))                          
                        :documentation "
        __GetLinearVelocity(b2Body self) -> b2Vec2

        Get the linear velocity of the center of mass. 
        the linear velocity of the center of mass.
        ")
                        (reparse-symbol indented_block_body) [144691 144960])
                    ("__SetAngularVelocity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [144991 144995])
                            ("omega" variable nil (reparse-symbol function_parameters) [144997 145002]))                          
                        :documentation "
        __SetAngularVelocity(b2Body self, float32 omega)

        Set the angular velocity.

        Parameters:
        -----------

        omega: 
        the new angular velocity in radians/second.
        ")
                        (reparse-symbol indented_block_body) [144966 145294])
                    ("__GetAngularVelocity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [145325 145329]))                          
                        :documentation "
        __GetAngularVelocity(b2Body self) -> float32

        Get the angular velocity. 
        the angular velocity in radians/second.
        ")
                        (reparse-symbol indented_block_body) [145300 145549])
                    ("ApplyForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [145570 145574])
                            ("force" variable nil (reparse-symbol function_parameters) [145576 145581])
                            ("point" variable nil (reparse-symbol function_parameters) [145583 145588])
                            ("wake" variable nil (reparse-symbol function_parameters) [145590 145594]))                          
                        :documentation "
        ApplyForce(b2Body self, b2Vec2 force, b2Vec2 point, bool wake)

        Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body.

        Parameters:
        -----------

        force: 
        the world force vector, usually in Newtons (N).

        point: 
        the world position of the point of application.
        ")
                        (reparse-symbol indented_block_body) [145555 146120])
                    ("ApplyForceToCenter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [146149 146153])
                            ("force" variable nil (reparse-symbol function_parameters) [146155 146160])
                            ("wake" variable nil (reparse-symbol function_parameters) [146162 146166]))                          
                        :documentation "ApplyForceToCenter(b2Body self, b2Vec2 force, bool wake)")
                        (reparse-symbol indented_block_body) [146126 146307])
                    ("ApplyTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [146329 146333])
                            ("torque" variable nil (reparse-symbol function_parameters) [146335 146341])
                            ("wake" variable nil (reparse-symbol function_parameters) [146343 146347]))                          
                        :documentation "
        ApplyTorque(b2Body self, float32 torque, bool wake)

        Apply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass. This wakes up the body.

        Parameters:
        -----------

        torque: 
        about the z-axis (out of the screen), usually in N-m.
        ")
                        (reparse-symbol indented_block_body) [146313 146760])
                    ("ApplyLinearImpulse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [146789 146793])
                            ("impulse" variable nil (reparse-symbol function_parameters) [146795 146802])
                            ("point" variable nil (reparse-symbol function_parameters) [146804 146809])
                            ("wake" variable nil (reparse-symbol function_parameters) [146811 146815]))                          
                        :documentation "
        ApplyLinearImpulse(b2Body self, b2Vec2 impulse, b2Vec2 point, bool wake)

        Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body.

        Parameters:
        -----------

        impulse: 
        the world impulse vector, usually in N-seconds or kg-m/s.

        point: 
        the world position of the point of application.
        ")
                        (reparse-symbol indented_block_body) [146766 147396])
                    ("ApplyAngularImpulse" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [147426 147430])
                            ("impulse" variable nil (reparse-symbol function_parameters) [147432 147439])
                            ("wake" variable nil (reparse-symbol function_parameters) [147441 147445]))                          
                        :documentation "
        ApplyAngularImpulse(b2Body self, float32 impulse, bool wake)

        Apply an angular impulse.

        Parameters:
        -----------

        impulse: 
        the angular impulse in units of kg*m*m/s
        ")
                        (reparse-symbol indented_block_body) [147402 147755])
                    ("__GetMass" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [147775 147779]))                          
                        :documentation "
        __GetMass(b2Body self) -> float32

        Get the total mass of the body. 
        the mass, usually in kilograms (kg).
        ")
                        (reparse-symbol indented_block_body) [147761 147980])
                    ("__GetInertia" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [148003 148007]))                          
                        :documentation "
        __GetInertia(b2Body self) -> float32

        Get the rotational inertia of the body about the local origin. 
        the rotational inertia, usually in kg-m^2.
        ")
                        (reparse-symbol indented_block_body) [147986 148251])
                    ("GetMassData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [148273 148277])
                            ("data" variable nil (reparse-symbol function_parameters) [148279 148283]))                          
                        :documentation "
        GetMassData(b2Body self, b2MassData data)

        Get the mass data of the body. 
        a struct containing the mass, inertia and center of the body.
        ")
                        (reparse-symbol indented_block_body) [148257 148524])
                    ("__SetMassData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [148548 148552])
                            ("data" variable nil (reparse-symbol function_parameters) [148554 148558]))                          
                        :documentation "
        __SetMassData(b2Body self, b2MassData data)

        Set the mass properties to override the mass properties of the fixtures. Note that this changes the center of mass position. Note that creating or destroying fixtures can also alter the mass. This function has no effect if the body isn't dynamic.

        Parameters:
        -----------

        massData: 
        the mass properties.
        ")
                        (reparse-symbol indented_block_body) [148530 149038])
                    ("ResetMassData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [149062 149066]))                          
                        :documentation "
        ResetMassData(b2Body self)

        This resets the mass properties to the sum of the mass properties of the fixtures. This normally does not need to be called unless you called SetMassData to override the mass and you later want to reset the mass.
        ")
                        (reparse-symbol indented_block_body) [149044 149399])
                    ("GetWorldPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [149423 149427])
                            ("localPoint" variable nil (reparse-symbol function_parameters) [149429 149439]))                          
                        :documentation "
        GetWorldPoint(b2Body self, b2Vec2 localPoint) -> b2Vec2

        Get the world coordinates of a point given the local coordinates.

        Parameters:
        -----------

        localPoint: 
        a point on the body measured relative the the body's origin. 
        the same point expressed in world coordinates.
        ")
                        (reparse-symbol indented_block_body) [149405 149854])
                    ("GetWorldVector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [149879 149883])
                            ("localVector" variable nil (reparse-symbol function_parameters) [149885 149896]))                          
                        :documentation "
        GetWorldVector(b2Body self, b2Vec2 localVector) -> b2Vec2

        Get the world coordinates of a vector given the local coordinates.

        Parameters:
        -----------

        localVector: 
        a vector fixed in the body. 
        the same vector expressed in world coordinates.
        ")
                        (reparse-symbol indented_block_body) [149860 150285])
                    ("GetLocalPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [150309 150313])
                            ("worldPoint" variable nil (reparse-symbol function_parameters) [150315 150325]))                          
                        :documentation "
        GetLocalPoint(b2Body self, b2Vec2 worldPoint) -> b2Vec2

        Gets a local point relative to the body's origin given a world point.

        Parameters:
        -----------

        a: 
        point in world coordinates. 
        the corresponding local point relative to the body's origin.
        ")
                        (reparse-symbol indented_block_body) [150291 150716])
                    ("GetLocalVector" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [150741 150745])
                            ("worldVector" variable nil (reparse-symbol function_parameters) [150747 150758]))                          
                        :documentation "
        GetLocalVector(b2Body self, b2Vec2 worldVector) -> b2Vec2

        Gets a local vector given a world vector.

        Parameters:
        -----------

        a: 
        vector in world coordinates. 
        the corresponding local vector.
        ")
                        (reparse-symbol indented_block_body) [150722 151097])
                    ("GetLinearVelocityFromWorldPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [151139 151143])
                            ("worldPoint" variable nil (reparse-symbol function_parameters) [151145 151155]))                          
                        :documentation "
        GetLinearVelocityFromWorldPoint(b2Body self, b2Vec2 worldPoint) -> b2Vec2

        Get the world linear velocity of a world point attached to this body.

        Parameters:
        -----------

        a: 
        point in world coordinates. 
        the world velocity of a point.
        ")
                        (reparse-symbol indented_block_body) [151103 151552])
                    ("GetLinearVelocityFromLocalPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [151594 151598])
                            ("localPoint" variable nil (reparse-symbol function_parameters) [151600 151610]))                          
                        :documentation "
        GetLinearVelocityFromLocalPoint(b2Body self, b2Vec2 localPoint) -> b2Vec2

        Get the world velocity of a local point.

        Parameters:
        -----------

        a: 
        point in local coordinates. 
        the world velocity of a point.
        ")
                        (reparse-symbol indented_block_body) [151558 151978])
                    ("__GetLinearDamping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [152007 152011]))                          
                        :documentation "
        __GetLinearDamping(b2Body self) -> float32

        Get the linear damping of the body.
        ")
                        (reparse-symbol indented_block_body) [151984 152188])
                    ("__SetLinearDamping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [152217 152221])
                            ("linearDamping" variable nil (reparse-symbol function_parameters) [152223 152236]))                          
                        :documentation "
        __SetLinearDamping(b2Body self, float32 linearDamping)

        Set the linear damping of the body.
        ")
                        (reparse-symbol indented_block_body) [152194 152440])
                    ("__GetAngularDamping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [152470 152474]))                          
                        :documentation "
        __GetAngularDamping(b2Body self) -> float32

        Get the angular damping of the body.
        ")
                        (reparse-symbol indented_block_body) [152446 152654])
                    ("__SetAngularDamping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [152684 152688])
                            ("angularDamping" variable nil (reparse-symbol function_parameters) [152690 152704]))                          
                        :documentation "
        __SetAngularDamping(b2Body self, float32 angularDamping)

        Set the angular damping of the body.
        ")
                        (reparse-symbol indented_block_body) [152660 152913])
                    ("__GetGravityScale" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [152941 152945]))                          
                        :documentation "__GetGravityScale(b2Body self) -> float32")
                        (reparse-symbol indented_block_body) [152919 153057])
                    ("__SetGravityScale" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [153085 153089])
                            ("scale" variable nil (reparse-symbol function_parameters) [153091 153096]))                          
                        :documentation "__SetGravityScale(b2Body self, float32 scale)")
                        (reparse-symbol indented_block_body) [153063 153219])
                    ("__SetType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [153239 153243])
                            ("type" variable nil (reparse-symbol function_parameters) [153245 153249]))                          
                        :documentation "
        __SetType(b2Body self, b2BodyType type)

        Set the type of this body. This may alter the mass and velocity.
        ")
                        (reparse-symbol indented_block_body) [153225 153449])
                    ("__GetType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [153469 153473]))                          
                        :documentation "
        __GetType(b2Body self) -> b2BodyType

        Get the type of this body.
        ")
                        (reparse-symbol indented_block_body) [153455 153626])
                    ("__SetBullet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [153648 153652])
                            ("flag" variable nil (reparse-symbol function_parameters) [153654 153658]))                          
                        :documentation "
        __SetBullet(b2Body self, bool flag)

        Should this body be treated like a bullet for continuous collision detection?
        ")
                        (reparse-symbol indented_block_body) [153632 153869])
                    ("__IsBullet" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [153890 153894]))                          
                        :documentation "
        __IsBullet(b2Body self) -> bool

        Is this body treated like a bullet for continuous collision detection?
        ")
                        (reparse-symbol indented_block_body) [153875 154087])
                    ("__SetSleepingAllowed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [154118 154122])
                            ("flag" variable nil (reparse-symbol function_parameters) [154124 154128]))                          
                        :documentation "
        __SetSleepingAllowed(b2Body self, bool flag)

        You can disable sleeping on this body. If you disable sleeping, the body will be woken.
        ")
                        (reparse-symbol indented_block_body) [154093 154367])
                    ("__IsSleepingAllowed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [154397 154401]))                          
                        :documentation "
        __IsSleepingAllowed(b2Body self) -> bool

        Is this body allowed to sleep.
        ")
                        (reparse-symbol indented_block_body) [154373 154572])
                    ("__SetAwake" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [154593 154597])
                            ("flag" variable nil (reparse-symbol function_parameters) [154599 154603]))                          
                        :documentation "
        __SetAwake(b2Body self, bool flag)

        Set the sleep state of the body. A sleeping body has very low CPU cost.

        Parameters:
        -----------

        flag: 
        set to true to put body to sleep, false to wake it.
        ")
                        (reparse-symbol indented_block_body) [154578 154923])
                    ("__IsAwake" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [154943 154947]))                          
                        :documentation "
        __IsAwake(b2Body self) -> bool

        Get the sleeping state of this body. 
        true if the body is sleeping.
        ")
                        (reparse-symbol indented_block_body) [154929 155143])
                    ("__SetActive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [155165 155169])
                            ("flag" variable nil (reparse-symbol function_parameters) [155171 155175]))                          
                        :documentation "
        __SetActive(b2Body self, bool flag)

        Set the active state of the body. An inactive body is not simulated and cannot be collided with or woken up. If you pass a flag of true, all fixtures will be added to the broad-phase. If you pass a flag of false, all fixtures will be removed from the broad-phase and all contacts will be destroyed. Fixtures and joints are otherwise unaffected. You may continue to create/destroy fixtures and joints on inactive bodies. Fixtures on an inactive body are implicitly inactive and will not participate in collisions, ray-casts, or queries. Joints connected to an inactive body are implicitly inactive. An inactive body is still owned by a  b2Worldobject and remains in the body list.
        ")
                        (reparse-symbol indented_block_body) [155149 155988])
                    ("__IsActive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [156009 156013]))                          
                        :documentation "
        __IsActive(b2Body self) -> bool

        Get the active state of the body.
        ")
                        (reparse-symbol indented_block_body) [155994 156169])
                    ("__SetFixedRotation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [156198 156202])
                            ("flag" variable nil (reparse-symbol function_parameters) [156204 156208]))                          
                        :documentation "
        __SetFixedRotation(b2Body self, bool flag)

        Set this body to have fixed rotation. This causes the mass to be reset.
        ")
                        (reparse-symbol indented_block_body) [156175 156427])
                    ("__IsFixedRotation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [156455 156459]))                          
                        :documentation "
        __IsFixedRotation(b2Body self) -> bool

        Does this body have fixed rotation?
        ")
                        (reparse-symbol indented_block_body) [156433 156631])
                    ("__GetFixtureList_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [156667 156671])
                            ("args" variable nil (reparse-symbol function_parameters) [156673 156678]))                          
                        :documentation "
        __GetFixtureList_internal(b2Body self) -> b2Fixture
        __GetFixtureList_internal(b2Body self) -> b2Fixture

        Get the list of all fixtures attached to this body.
        ")
                        (reparse-symbol indented_block_body) [156637 156954])
                    ("__GetJointList_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [156988 156992])
                            ("args" variable nil (reparse-symbol function_parameters) [156994 156999]))                          
                        :documentation "
        __GetJointList_internal(b2Body self) -> b2JointEdge
        __GetJointList_internal(b2Body self) -> b2JointEdge

        Get the list of all joints attached to this body.
        ")
                        (reparse-symbol indented_block_body) [156960 157271])
                    ("__GetContactList_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [157307 157311])
                            ("args" variable nil (reparse-symbol function_parameters) [157313 157318]))                          
                        :documentation "
        __GetContactList_internal(b2Body self) -> b2ContactEdge
        __GetContactList_internal(b2Body self) -> b2ContactEdge

        Get the list of all contacts attached to this body. 
        WARNING: 
        this list changes during the time step and you may miss some collisions if you don't use  b2ContactListener.
        ")
                        (reparse-symbol indented_block_body) [157277 157738])
                    ("__GetNext" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [157758 157762])
                            ("args" variable nil (reparse-symbol function_parameters) [157764 157769]))                          
                        :documentation "
        __GetNext(b2Body self) -> b2Body
        __GetNext(b2Body self) -> b2Body

        Get the next body in the world's body list.
        ")
                        (reparse-symbol indented_block_body) [157744 157983])
                    ("__GetWorld" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [158004 158008])
                            ("args" variable nil (reparse-symbol function_parameters) [158010 158015]))                          
                        :documentation "
        __GetWorld(b2Body self) -> b2World
        __GetWorld(b2Body self) -> b2World

        Get the parent world of this body.
        ")
                        (reparse-symbol indented_block_body) [157989 158225])
                    ("Dump" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [158240 158244]))                          
                        :documentation "Dump(b2Body self)")
                        (reparse-symbol indented_block_body) [158231 158319])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [158325 158346])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [158366 158370]))                          
                        :documentation "__hash__(b2Body self) -> long")
                        (reparse-symbol indented_block_body) [158353 158461])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [158480 158484]))                          )
                        (reparse-symbol indented_block_body) [158467 158522])
                    ("DestroyFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [158547 158551])
                            ("fixture" variable nil (reparse-symbol function_parameters) [158553 158560]))                          
                        :documentation "
        DestroyFixture(b2Body self, b2Fixture fixture)

        Destroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with this fixture. This will automatically adjust the mass of the body if the body is dynamic and the fixture has positive density. All fixtures attached to a body are implicitly destroyed when the body is destroyed.

        Parameters:
        -----------

        fixture: 
        the fixture to be removed.

        WARNING: 
        This function is locked during callbacks.
        ")
                        (reparse-symbol indented_block_body) [158528 159193])
                    ("__CreateFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [159219 159223])
                            ("args" variable nil (reparse-symbol function_parameters) [159225 159230]))                          
                        :documentation "
        __CreateFixture(b2Body self, b2Shape shape, float32 density) -> b2Fixture
        __CreateFixture(b2Body self, b2FixtureDef defn) -> b2Fixture
        ")
                        (reparse-symbol indented_block_body) [159199 159466])
                    ("__GetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [159490 159494]))                          
                        :documentation "__GetUserData(b2Body self) -> PyObject *")
                        (reparse-symbol indented_block_body) [159472 159601])
                    ("__SetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [159625 159629])
                            ("data" variable nil (reparse-symbol function_parameters) [159631 159635]))                          
                        :documentation "__SetUserData(b2Body self, PyObject * data)")
                        (reparse-symbol indented_block_body) [159607 159751])
                    ("ClearUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [159775 159779]))                          
                        :documentation "ClearUserData(b2Body self)")
                        (reparse-symbol indented_block_body) [159757 159872])
                    ("userData" variable nil (reparse-symbol indented_block_body) [159878 159927])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [159934 159956])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [159961 160018])
                    ("__GetMassData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [160041 160045]))                          
                        :documentation "
        Get a b2MassData object that represents this b2Body

        NOTE: To just get the mass, use body.mass
        ")
                        (reparse-symbol indented_block_body) [160023 160326])
                    ("__SetInertia" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [160348 160352])
                            ("inertia" variable nil (reparse-symbol function_parameters) [160354 160361]))                          
                        :documentation "
        Set the body's inertia
        ")
                        (reparse-symbol indented_block_body) [160331 160494])
                    ("__SetMass" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [160513 160517])
                            ("mass" variable nil (reparse-symbol function_parameters) [160519 160523]))                          
                        :documentation "
        Set the body's mass
        ")
                        (reparse-symbol indented_block_body) [160499 160653])
                    ("__SetLocalCenter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [160679 160683])
                            ("lcenter" variable nil (reparse-symbol function_parameters) [160685 160692]))                          
                        :documentation "
        Set the body's local center
        ")
                        (reparse-symbol indented_block_body) [160658 160835])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [160853 160857]))                          
                        :documentation "
        Iterates over the fixtures in the body
        ")
                        (reparse-symbol indented_block_body) [160840 160995])
                    ("__CreateShapeFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [161025 161029])
                            ("type_" variable nil (reparse-symbol function_parameters) [161031 161036])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [161038 161046]))                          
                        :documentation "
        Internal function to handle creating circles, polygons, etc.
        without first creating a fixture. type_ is b2Shape.
        ")
                        (reparse-symbol indented_block_body) [161000 162065])
                    ("CreatePolygonFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [162095 162099])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [162101 162109]))                          
                        :documentation "
        Create a polygon shape without an explicit fixture definition.

        Takes kwargs; you can pass in properties for either the polygon
        or the fixture to this function. For example:
        CreatePolygonFixture(box=(1, 1), friction=0.2, density=1.0)
        where 'box' is a property from the polygon shape, and 
        'friction' and 'density' are from the fixture definition.
        ")
                        (reparse-symbol indented_block_body) [162070 162598])
                    ("CreateCircleFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [162627 162631])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [162633 162641]))                          
                        :documentation "
        Create a circle shape without an explicit fixture definition.

        Takes kwargs; you can pass in properties for either the circle
        or the fixture to this function. For example:
        CreateCircleFixture(radius=0.2, friction=0.2, density=1.0)
        where 'radius' is a property from the circle shape, and 
        'friction' and 'density' are from the fixture definition.
        ")
                        (reparse-symbol indented_block_body) [162603 163128])
                    ("CreateEdgeFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [163155 163159])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [163161 163169]))                          
                        :documentation "
        Create a edge shape without an explicit fixture definition.

        Takes kwargs; you can pass in properties for either the edge
        or the fixture to this function. For example:
        CreateEdgeFixture(vertices=[(0,0),(1,0)], friction=0.2, density=1.0)
        where 'vertices' is a property from the edge shape, and 
        'friction' and 'density' are from the fixture definition.
        ")
                        (reparse-symbol indented_block_body) [163133 163660])
                    ("CreateLoopFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [163687 163691])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [163693 163701]))                          
                        :documentation "
        Create a loop shape without an explicit fixture definition.

        Takes kwargs; you can pass in properties for either the loop
        or the fixture to this function. For example:
        CreateLoopFixture(vertices=[...], friction=0.2, density=1.0)
        where 'vertices' is a property from the loop shape, and 
        'friction' and 'density' are from the fixture definition.
        ")
                        (reparse-symbol indented_block_body) [163665 164185])
                    ("CreateChainFixture" variable nil (reparse-symbol indented_block_body) [164190 164228])
                    ("CreateFixturesFromShapes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [164263 164267])
                            ("shapes" variable nil (reparse-symbol function_parameters) [164269 164275])
                            ("shapeFixture" variable nil (reparse-symbol function_parameters) [164282 164294]))                          
                        :documentation "
        Create fixture(s) on the body from one or more shapes, and optionally a single
        fixture definition.

        Takes kwargs; examples of valid combinations are as follows:
        CreateFixturesFromShapes(shapes=b2CircleShape(radius=0.2))
        CreateFixturesFromShapes(shapes=b2CircleShape(radius=0.2), shapeFixture=b2FixtureDef(friction=0.2))
        CreateFixturesFromShapes(shapes=[b2CircleShape(radius=0.2), b2PolygonShape(box=[1,2])])
        ")
                        (reparse-symbol indented_block_body) [164234 165471])
                    ("CreateFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [165494 165498])
                            ("defn" variable nil (reparse-symbol function_parameters) [165500 165504])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [165511 165519]))                          
                        :documentation "
        Create a fixtures on the body.

        Takes kwargs; examples of valid combinations are as follows:
        CreateFixture(b2FixtureDef(shape=s, restitution=0.2, ...))
        CreateFixture(shape=s, restitution=0.2, ...)
        ")
                        (reparse-symbol indented_block_body) [165476 166076])
                    ("CreateEdgeChain" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [166101 166105])
                            ("edge_list" variable nil (reparse-symbol function_parameters) [166107 166116]))                          
                        :documentation "
        Creates a body a set of connected edge chains.
        Expects edge_list to be a list of vertices, length >= 2.
        ")
                        (reparse-symbol indented_block_body) [166081 166776])
                    ("sleepingAllowed" variable nil (reparse-symbol indented_block_body) [166809 166878])
                    ("angularVelocity" variable nil (reparse-symbol indented_block_body) [166883 166953])
                    ("linearVelocity" variable nil (reparse-symbol indented_block_body) [166958 167025])
                    ("awake" variable nil (reparse-symbol indented_block_body) [167030 167069])
                    ("angularDamping" variable nil (reparse-symbol indented_block_body) [167074 167141])
                    ("fixedRotation" variable nil (reparse-symbol indented_block_body) [167146 167209])
                    ("linearDamping" variable nil (reparse-symbol indented_block_body) [167214 167278])
                    ("bullet" variable nil (reparse-symbol indented_block_body) [167283 167325])
                    ("type" variable nil (reparse-symbol indented_block_body) [167330 167367])
                    ("active" variable nil (reparse-symbol indented_block_body) [167372 167414])
                    ("angle" variable nil (reparse-symbol indented_block_body) [167419 167510])
                    ("transform" variable nil (reparse-symbol indented_block_body) [167515 167600])
                    ("massData" variable nil (reparse-symbol indented_block_body) [167605 167654])
                    ("mass" variable nil (reparse-symbol indented_block_body) [167659 167696])
                    ("localCenter" variable nil (reparse-symbol indented_block_body) [167701 167759])
                    ("inertia" variable nil (reparse-symbol indented_block_body) [167764 167810])
                    ("position" variable nil (reparse-symbol indented_block_body) [167815 167905])
                    ("gravityScale" variable nil (reparse-symbol indented_block_body) [167910 167971])
                    ("joints" variable nil (reparse-symbol indented_block_body) [167993 168257])
                    ("contacts" variable nil (reparse-symbol indented_block_body) [168262 168531])
                    ("fixtures" variable nil (reparse-symbol indented_block_body) [168536 168808])
                    ("joints_gen" variable nil (reparse-symbol indented_block_body) [168813 169132])
                    ("contacts_gen" variable nil (reparse-symbol indented_block_body) [169137 169449])
                    ("fixtures_gen" variable nil (reparse-symbol indented_block_body) [169454 169768])
                    ("next" variable nil (reparse-symbol indented_block_body) [169773 169805])
                    ("worldCenter" variable nil (reparse-symbol indented_block_body) [169810 169856])
                    ("world" variable nil (reparse-symbol indented_block_body) [169861 169895]))                  
                :type "class")
                nil [142305 169896])
            ("b2Body" variable nil nil [169898 169984])
            ("b2Body" variable nil nil [169985 170071])
            ("b2Body" variable nil nil [170072 170156])
            ("b2Body" variable nil nil [170157 170235])
            ("b2Body" variable nil nil [170236 170326])
            ("b2Body" variable nil nil [170327 170417])
            ("b2Body" variable nil nil [170418 170514])
            ("b2Body" variable nil nil [170515 170611])
            ("b2Body" variable nil nil [170612 170710])
            ("b2Body" variable nil nil [170711 170809])
            ("b2Body" variable nil nil [170810 170888])
            ("b2Body" variable nil nil [170889 170983])
            ("b2Body" variable nil nil [170984 171064])
            ("b2Body" variable nil nil [171065 171159])
            ("b2Body" variable nil nil [171160 171256])
            ("b2Body" variable nil nil [171257 171333])
            ("b2Body" variable nil nil [171334 171416])
            ("b2Body" variable nil nil [171417 171497])
            ("b2Body" variable nil nil [171498 171582])
            ("b2Body" variable nil nil [171583 171667])
            ("b2Body" variable nil nil [171668 171752])
            ("b2Body" variable nil nil [171753 171839])
            ("b2Body" variable nil nil [171840 171924])
            ("b2Body" variable nil nil [171925 172011])
            ("b2Body" variable nil nil [172012 172132])
            ("b2Body" variable nil nil [172133 172253])
            ("b2Body" variable nil nil [172254 172348])
            ("b2Body" variable nil nil [172349 172443])
            ("b2Body" variable nil nil [172444 172540])
            ("b2Body" variable nil nil [172541 172637])
            ("b2Body" variable nil nil [172638 172730])
            ("b2Body" variable nil nil [172731 172823])
            ("b2Body" variable nil nil [172824 172900])
            ("b2Body" variable nil nil [172901 172977])
            ("b2Body" variable nil nil [172978 173058])
            ("b2Body" variable nil nil [173059 173137])
            ("b2Body" variable nil nil [173138 173236])
            ("b2Body" variable nil nil [173237 173333])
            ("b2Body" variable nil nil [173334 173412])
            ("b2Body" variable nil nil [173413 173489])
            ("b2Body" variable nil nil [173490 173570])
            ("b2Body" variable nil nil [173571 173649])
            ("b2Body" variable nil nil [173650 173744])
            ("b2Body" variable nil nil [173745 173837])
            ("b2Body" variable nil nil [173838 173946])
            ("b2Body" variable nil nil [173947 174051])
            ("b2Body" variable nil nil [174052 174160])
            ("b2Body" variable nil nil [174161 174237])
            ("b2Body" variable nil nil [174238 174316])
            ("b2Body" variable nil nil [174317 174383])
            ("b2Body" variable nil nil [174384 174458])
            ("b2Body" variable nil nil [174459 174545])
            ("b2Body" variable nil nil [174546 174634])
            ("b2Body" variable nil nil [174635 174719])
            ("b2Body" variable nil nil [174720 174804])
            ("b2Body" variable nil nil [174805 174889])
            ("b2Body_swigregister" variable nil nil [174890 174938])
            ("b2Body_swigregister" code nil nil [174939 174966])
            ("b2Filter" type
               (:documentation "This holds contact filtering data."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [175041 175144])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [175149 175170])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [175214 175266])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [175275 175303]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [175189 175193])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [175195 175203]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [175176 175304])
                    ("categoryBits" variable nil (reparse-symbol indented_block_body) [175310 175407])
                    ("maskBits" variable nil (reparse-symbol indented_block_body) [175412 175497])
                    ("groupIndex" variable nil (reparse-symbol indented_block_body) [175502 175593])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [175599 175620])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [175640 175644]))                          
                        :documentation "__hash__(b2Filter self) -> long")
                        (reparse-symbol indented_block_body) [175627 175739])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [175758 175762]))                          )
                        (reparse-symbol indented_block_body) [175745 175800])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [175805 175846]))                  
                :type "class")
                nil [174968 175847])
            ("b2Filter" variable nil nil [175847 175927])
            ("b2Filter_swigregister" variable nil nil [175928 175980])
            ("b2Filter_swigregister" code nil nil [175981 176012])
            ("b2FixtureDef" type
               (:documentation "A fixture definition is used to create a fixture. This class defines an abstract fixture definition. You can reuse fixture definitions safely."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [176199 176302])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [176307 176328])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [176372 176432])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [176441 176469]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [176347 176351])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [176353 176361]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [176334 176470])
                    ("shape" variable nil (reparse-symbol indented_block_body) [176476 176560])
                    ("friction" variable nil (reparse-symbol indented_block_body) [176565 176658])
                    ("restitution" variable nil (reparse-symbol indented_block_body) [176663 176765])
                    ("density" variable nil (reparse-symbol indented_block_body) [176770 176860])
                    ("isSensor" variable nil (reparse-symbol indented_block_body) [176865 176958])
                    ("filter" variable nil (reparse-symbol indented_block_body) [176963 177050])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [177056 177077])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177097 177101]))                          
                        :documentation "__hash__(b2FixtureDef self) -> long")
                        (reparse-symbol indented_block_body) [177084 177204])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177223 177227]))                          )
                        (reparse-symbol indented_block_body) [177210 177265])
                    ("__GetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177289 177293]))                          
                        :documentation "__GetUserData(b2FixtureDef self) -> PyObject *")
                        (reparse-symbol indented_block_body) [177271 177412])
                    ("__SetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177436 177440])
                            ("data" variable nil (reparse-symbol function_parameters) [177442 177446]))                          
                        :documentation "__SetUserData(b2FixtureDef self, PyObject * data)")
                        (reparse-symbol indented_block_body) [177418 177574])
                    ("ClearUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177598 177602]))                          
                        :documentation "ClearUserData(b2FixtureDef self)")
                        (reparse-symbol indented_block_body) [177580 177707])
                    ("userData" variable nil (reparse-symbol indented_block_body) [177713 177762])
                    ("__del__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177779 177783]))                          )
                        (reparse-symbol indented_block_body) [177767 177815])
                    ("__SetCategoryBits" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177843 177847])
                            ("value" variable nil (reparse-symbol function_parameters) [177849 177854]))                          )
                        (reparse-symbol indented_block_body) [177821 177896])
                    ("__SetGroupIndex" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177920 177924])
                            ("value" variable nil (reparse-symbol function_parameters) [177926 177931]))                          )
                        (reparse-symbol indented_block_body) [177900 177971])
                    ("__SetMaskBits" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [177993 177997])
                            ("value" variable nil (reparse-symbol function_parameters) [177999 178004]))                          )
                        (reparse-symbol indented_block_body) [177975 178042])
                    ("categoryBits" variable nil (reparse-symbol indented_block_body) [178047 178126])
                    ("groupIndex" variable nil (reparse-symbol indented_block_body) [178131 178204])
                    ("maskBits" variable nil (reparse-symbol indented_block_body) [178209 178276])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [178282 178327]))                  
                :type "class")
                nil [176014 178328])
            ("b2FixtureDef" variable nil nil [178328 178420])
            ("b2FixtureDef" variable nil nil [178421 178523])
            ("b2FixtureDef" variable nil nil [178524 178626])
            ("b2FixtureDef" variable nil nil [178627 178729])
            ("b2FixtureDef_swigregister" variable nil nil [178730 178790])
            ("b2FixtureDef_swigregister" code nil nil [178791 178830])
            ("b2FixtureProxy" type
               (:documentation "This proxy is used internally to connect fixtures to the broad-phase."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [178946 179049])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [179054 179075])
                    ("aabb" variable nil (reparse-symbol indented_block_body) [179080 179165])
                    ("fixture" variable nil (reparse-symbol indented_block_body) [179170 179264])
                    ("childIndex" variable nil (reparse-symbol indented_block_body) [179269 179372])
                    ("proxyId" variable nil (reparse-symbol indented_block_body) [179377 179471])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [179477 179498])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [179518 179522]))                          
                        :documentation "__hash__(b2FixtureProxy self) -> long")
                        (reparse-symbol indented_block_body) [179505 179629])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [179648 179652]))                          )
                        (reparse-symbol indented_block_body) [179635 179690])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2FixtureProxy self) -> b2FixtureProxy

        This proxy is used internally to connect fixtures to the broad-phase.
        \"\"\"" code nil (reparse-symbol indented_block_body) [179724 179874])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [179883 179948]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [179709 179713]))                          
                        :documentation "
        __init__(b2FixtureProxy self) -> b2FixtureProxy

        This proxy is used internally to connect fixtures to the broad-phase.
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [179696 179949])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [179953 180000]))                  
                :type "class")
                nil [178832 180001])
            ("b2FixtureProxy" variable nil nil [180001 180099])
            ("b2FixtureProxy_swigregister" variable nil nil [180100 180164])
            ("b2FixtureProxy_swigregister" code nil nil [180165 180208])
            ("b2Fixture" type
               (:documentation "
    A fixture is used to attach a shape to a body for collision detection. A fixture inherits its transform from its parent. Fixtures hold additional non-geometric data such as friction, collision filters, etc. Fixtures are created via  b2Body::CreateFixture. 
    WARNING: 
    you cannot reuse fixtures.
    "
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [180561 180664])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [180715 180761]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [180683 180687])
                            ("args" variable nil (reparse-symbol function_parameters) [180689 180694])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [180696 180704]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [180670 180762])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [180766 180787])
                    ("__GetType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [180807 180811]))                          
                        :documentation "
        __GetType(b2Fixture self) -> b2Shape::Type

        Get the type of the child shape. You can use this to down cast to the concrete shape. 
        the shape type.
        ")
                        (reparse-symbol indented_block_body) [180793 181057])
                    ("__GetShape" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [181078 181082])
                            ("args" variable nil (reparse-symbol function_parameters) [181084 181089]))                          
                        :documentation "
        __GetShape(b2Fixture self) -> b2Shape
        __GetShape(b2Fixture self) -> b2Shape

        Get the child shape. You can modify the child shape, however you should not change the number of vertices because this will crash some collision caching mechanisms. Manipulating the shape may lead to non-physical behavior.
        ")
                        (reparse-symbol indented_block_body) [181063 181496])
                    ("__SetSensor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [181518 181522])
                            ("sensor" variable nil (reparse-symbol function_parameters) [181524 181530]))                          
                        :documentation "
        __SetSensor(b2Fixture self, bool sensor)

        Set if this fixture is a sensor.
        ")
                        (reparse-symbol indented_block_body) [181502 181706])
                    ("__IsSensor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [181727 181731]))                          
                        :documentation "
        __IsSensor(b2Fixture self) -> bool

        Is this fixture a sensor (non-solid)? 
        the true if the shape is a sensor.
        ")
                        (reparse-symbol indented_block_body) [181712 181941])
                    ("__SetFilterData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [181967 181971])
                            ("filter" variable nil (reparse-symbol function_parameters) [181973 181979]))                          
                        :documentation "
        __SetFilterData(b2Fixture self, b2Filter filter)

        Set the contact filtering data. This will not update contacts until the next time step when either parent body is active and awake. This automatically calls Refilter.
        ")
                        (reparse-symbol indented_block_body) [181947 182301])
                    ("__GetFilterData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [182327 182331]))                          
                        :documentation "
        __GetFilterData(b2Fixture self) -> b2Filter

        Get the contact filtering data.
        ")
                        (reparse-symbol indented_block_body) [182307 182505])
                    ("Refilter" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [182524 182528]))                          
                        :documentation "
        Refilter(b2Fixture self)

        Call this if you want to establish collision that was previously disabled by  b2ContactFilter::ShouldCollide.
        ")
                        (reparse-symbol indented_block_body) [182511 182754])
                    ("__GetBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [182774 182778])
                            ("args" variable nil (reparse-symbol function_parameters) [182780 182785]))                          
                        :documentation "
        __GetBody(b2Fixture self) -> b2Body
        __GetBody(b2Fixture self) -> b2Body

        Get the parent body of this fixture. This is NULL if the fixture is not attached. 
        the parent body.
        ")
                        (reparse-symbol indented_block_body) [182760 183072])
                    ("__GetNext" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [183092 183096])
                            ("args" variable nil (reparse-symbol function_parameters) [183098 183103]))                          
                        :documentation "
        __GetNext(b2Fixture self) -> b2Fixture
        __GetNext(b2Fixture self) -> b2Fixture

        Get the next fixture in the parent body's fixture list. 
        the next shape.
        ")
                        (reparse-symbol indented_block_body) [183078 183369])
                    ("TestPoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [183389 183393])
                            ("p" variable nil (reparse-symbol function_parameters) [183395 183396]))                          
                        :documentation "
        TestPoint(b2Fixture self, b2Vec2 p) -> bool

        Test a point for containment in this fixture.

        Parameters:
        -----------

        p: 
        a point in world coordinates.
        ")
                        (reparse-symbol indented_block_body) [183375 183673])
                    ("RayCast" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [183691 183695])
                            ("output" variable nil (reparse-symbol function_parameters) [183697 183703])
                            ("input" variable nil (reparse-symbol function_parameters) [183705 183710])
                            ("childIndex" variable nil (reparse-symbol function_parameters) [183712 183722]))                          
                        :documentation "
        RayCast(b2Fixture self, b2RayCastOutput output, b2RayCastInput input, int32 childIndex) -> bool

        Cast a ray against this shape.

        Parameters:
        -----------

        output: 
        the ray-cast results.

        input: 
        the ray-cast input parameters.
        ")
                        (reparse-symbol indented_block_body) [183679 184111])
                    ("__GetMassData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [184135 184139])
                            ("massData" variable nil (reparse-symbol function_parameters) [184141 184149]))                          
                        :documentation "
        __GetMassData(b2Fixture self, b2MassData massData)

        Get the mass data for this fixture. The mass data is based on the density and the shape. The rotational inertia is about the shape's origin. This operation may be expensive.
        ")
                        (reparse-symbol indented_block_body) [184117 184480])
                    ("__SetDensity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [184503 184507])
                            ("density" variable nil (reparse-symbol function_parameters) [184509 184516]))                          
                        :documentation "
        __SetDensity(b2Fixture self, float32 density)

        Set the density of this fixture. This will _not_ automatically adjust the mass of the body. You must call  b2Body::ResetMassDatato update the body's mass.
        ")
                        (reparse-symbol indented_block_body) [184486 184821])
                    ("__GetDensity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [184844 184848]))                          
                        :documentation "
        __GetDensity(b2Fixture self) -> float32

        Get the density of this fixture.
        ")
                        (reparse-symbol indented_block_body) [184827 185016])
                    ("__GetFriction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [185040 185044]))                          
                        :documentation "
        __GetFriction(b2Fixture self) -> float32

        Get the coefficient of friction.
        ")
                        (reparse-symbol indented_block_body) [185022 185214])
                    ("__SetFriction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [185238 185242])
                            ("friction" variable nil (reparse-symbol function_parameters) [185244 185252]))                          
                        :documentation "
        __SetFriction(b2Fixture self, float32 friction)

        Set the coefficient of friction. This will immediately update the mixed friction on all associated contacts.
        ")
                        (reparse-symbol indented_block_body) [185220 185515])
                    ("__GetRestitution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [185542 185546]))                          
                        :documentation "
        __GetRestitution(b2Fixture self) -> float32

        Get the coefficient of restitution.
        ")
                        (reparse-symbol indented_block_body) [185521 185725])
                    ("__SetRestitution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [185752 185756])
                            ("restitution" variable nil (reparse-symbol function_parameters) [185758 185769]))                          
                        :documentation "
        __SetRestitution(b2Fixture self, float32 restitution)

        Set the coefficient of restitution. This will immediately update the mixed restitution on all associated contacts.
        ")
                        (reparse-symbol indented_block_body) [185731 186050])
                    ("GetAABB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [186068 186072])
                            ("childIndex" variable nil (reparse-symbol function_parameters) [186074 186084]))                          
                        :documentation "
        GetAABB(b2Fixture self, int32 childIndex) -> b2AABB

        Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a more accurate AABB, compute it using the shape and the body transform.
        ")
                        (reparse-symbol indented_block_body) [186056 186386])
                    ("Dump" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [186401 186405])
                            ("bodyIndex" variable nil (reparse-symbol function_parameters) [186407 186416]))                          
                        :documentation "Dump(b2Fixture self, int32 bodyIndex)")
                        (reparse-symbol indented_block_body) [186392 186525])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [186531 186552])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [186572 186576]))                          
                        :documentation "__hash__(b2Fixture self) -> long")
                        (reparse-symbol indented_block_body) [186559 186673])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [186692 186696]))                          )
                        (reparse-symbol indented_block_body) [186679 186734])
                    ("__GetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [186758 186762]))                          
                        :documentation "__GetUserData(b2Fixture self) -> PyObject *")
                        (reparse-symbol indented_block_body) [186740 186875])
                    ("__SetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [186899 186903])
                            ("data" variable nil (reparse-symbol function_parameters) [186905 186909]))                          
                        :documentation "__SetUserData(b2Fixture self, PyObject * data)")
                        (reparse-symbol indented_block_body) [186881 187031])
                    ("ClearUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [187055 187059]))                          
                        :documentation "ClearUserData(b2Fixture self)")
                        (reparse-symbol indented_block_body) [187037 187158])
                    ("userData" variable nil (reparse-symbol indented_block_body) [187164 187213])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [187219 187261])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [187267 187292])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [187297 187357])
                    ("friction" variable nil (reparse-symbol indented_block_body) [187391 187440])
                    ("restitution" variable nil (reparse-symbol indented_block_body) [187445 187503])
                    ("filterData" variable nil (reparse-symbol indented_block_body) [187508 187563])
                    ("sensor" variable nil (reparse-symbol indented_block_body) [187568 187610])
                    ("density" variable nil (reparse-symbol indented_block_body) [187615 187661])
                    ("next" variable nil (reparse-symbol indented_block_body) [187683 187715])
                    ("type" variable nil (reparse-symbol indented_block_body) [187720 187752])
                    ("shape" variable nil (reparse-symbol indented_block_body) [187757 187791])
                    ("body" variable nil (reparse-symbol indented_block_body) [187796 187828])
                    ("massData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [187861 187865]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [187834 187941]))                  
                :type "class")
                nil [180210 187941])
            ("b2Fixture" variable nil nil [187942 188027])
            ("b2Fixture" variable nil nil [188028 188115])
            ("b2Fixture" variable nil nil [188116 188205])
            ("b2Fixture" variable nil nil [188206 188293])
            ("b2Fixture" variable nil nil [188294 188391])
            ("b2Fixture" variable nil nil [188392 188489])
            ("b2Fixture" variable nil nil [188490 188573])
            ("b2Fixture" variable nil nil [188574 188659])
            ("b2Fixture" variable nil nil [188660 188745])
            ("b2Fixture" variable nil nil [188746 188831])
            ("b2Fixture" variable nil nil [188832 188913])
            ("b2Fixture" variable nil nil [188914 189007])
            ("b2Fixture" variable nil nil [189008 189099])
            ("b2Fixture" variable nil nil [189100 189191])
            ("b2Fixture" variable nil nil [189192 189285])
            ("b2Fixture" variable nil nil [189286 189379])
            ("b2Fixture" variable nil nil [189380 189479])
            ("b2Fixture" variable nil nil [189480 189579])
            ("b2Fixture" variable nil nil [189580 189661])
            ("b2Fixture" variable nil nil [189662 189737])
            ("b2Fixture" variable nil nil [189738 189821])
            ("b2Fixture" variable nil nil [189822 189915])
            ("b2Fixture" variable nil nil [189916 190009])
            ("b2Fixture" variable nil nil [190010 190103])
            ("b2Fixture_swigregister" variable nil nil [190104 190158])
            ("b2Fixture_swigregister" code nil nil [190159 190192])
            ("b2DestructionListener" type
               (:documentation "Joints and fixtures are destroyed when their associated body is destroyed. Implement this listener so that you may nullify references to these joints and shapes."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [190407 190510])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [190515 190536])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [190541 190595])
                    ("SayGoodbye" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [190616 190620])
                            ("args" variable nil (reparse-symbol function_parameters) [190622 190627]))                          
                        :documentation "
        SayGoodbye(b2DestructionListener self, b2Joint joint)
        SayGoodbye(b2DestructionListener self, b2Fixture fixture)

        Called when any fixture is about to be destroyed due to the destruction of its parent body.
        ")
                        (reparse-symbol indented_block_body) [190601 190951])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [190957 190978])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [190998 191002]))                          
                        :documentation "__hash__(b2DestructionListener self) -> long")
                        (reparse-symbol indented_block_body) [190985 191123])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [191142 191146]))                          )
                        (reparse-symbol indented_block_body) [191129 191184])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [191228 191336])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [191344 191429])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [191438 191466]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [191203 191207])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [191209 191217]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [191190 191467])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [191488 191492]))                          )
                        (reparse-symbol indented_block_body) [191473 191607]))                  
                :type "class")
                nil [190194 191607])
            ("b2DestructionListener" variable nil nil [191607 191730])
            ("b2DestructionListener" variable nil nil [191731 191850])
            ("b2DestructionListener_swigregister" variable nil nil [191851 191929])
            ("b2DestructionListener_swigregister" code nil nil [191930 191987])
            ("b2ContactFilter" type
               (:documentation "Implement this class to provide collision filtering. In other words, you can implement this class if you want finer control over contact creation."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [192181 192284])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [192289 192310])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [192315 192363])
                    ("ShouldCollide" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [192387 192391])
                            ("fixtureA" variable nil (reparse-symbol function_parameters) [192393 192401])
                            ("fixtureB" variable nil (reparse-symbol function_parameters) [192403 192411]))                          
                        :documentation "
        ShouldCollide(b2ContactFilter self, b2Fixture fixtureA, b2Fixture fixtureB) -> bool

        Return true if contact calculations should be performed between these two shapes. 
        WARNING: 
        for performance reasons this is only called when the AABBs begin to overlap.
        ")
                        (reparse-symbol indented_block_body) [192369 192803])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [192809 192830])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [192850 192854]))                          
                        :documentation "__hash__(b2ContactFilter self) -> long")
                        (reparse-symbol indented_block_body) [192837 192963])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [192982 192986]))                          )
                        (reparse-symbol indented_block_body) [192969 193024])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [193068 193170])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [193178 193251])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [193260 193288]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [193043 193047])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [193049 193057]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [193030 193289])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [193310 193314]))                          )
                        (reparse-symbol indented_block_body) [193295 193423]))                  
                :type "class")
                nil [191989 193423])
            ("b2ContactFilter" variable nil nil [193423 193534])
            ("b2ContactFilter" variable nil nil [193535 193636])
            ("b2ContactFilter_swigregister" variable nil nil [193637 193703])
            ("b2ContactFilter_swigregister" code nil nil [193704 193749])
            ("b2ContactImpulse" type
               (:documentation "Contact impulses for reporting. Impulses are used instead of forces because sub-step forces may approach infinity for rigid body collisions. These match up one-to-one with the contact points in  b2Manifold."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [194004 194107])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [194112 194133])
                    ("count" variable nil (reparse-symbol indented_block_body) [194138 194230])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [194236 194257])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [194277 194281]))                          
                        :documentation "__hash__(b2ContactImpulse self) -> long")
                        (reparse-symbol indented_block_body) [194264 194392])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [194411 194415]))                          )
                        (reparse-symbol indented_block_body) [194398 194453])
                    ("__get_normal_impulses" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [194485 194489]))                          
                        :documentation "__get_normal_impulses(b2ContactImpulse self) -> PyObject *")
                        (reparse-symbol indented_block_body) [194459 194632])
                    ("__get_tangent_impulses" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [194665 194669]))                          
                        :documentation "__get_tangent_impulses(b2ContactImpulse self) -> PyObject *")
                        (reparse-symbol indented_block_body) [194638 194814])
                    ("normalImpulses" variable nil (reparse-symbol indented_block_body) [194820 194874])
                    ("tangentImpulses" variable nil (reparse-symbol indented_block_body) [194879 194935])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [194980 195048])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [195057 195085]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [194955 194959])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [194961 194969]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [194942 195086])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [195092 195141]))                  
                :type "class")
                nil [193751 195142])
            ("b2ContactImpulse" variable nil nil [195142 195246])
            ("b2ContactImpulse" variable nil nil [195247 195377])
            ("b2ContactImpulse" variable nil nil [195378 195510])
            ("b2ContactImpulse_swigregister" variable nil nil [195511 195579])
            ("b2ContactImpulse_swigregister" code nil nil [195580 195627])
            ("b2ContactListener" type
               (:documentation "
    Implement this class to get contact information. You can use these results for things like sounds and game logic. You can also get contact results by traversing the contact lists after the time step. However, you might miss some contacts because continuous physics leads to sub-stepping. Additionally you may receive multiple callbacks for the same contact in a single time step. You should strive to make your callbacks efficient because there may be many callbacks per time step. 
    WARNING: 
    You cannot create/destroy Box2D entities inside these callbacks.
    "
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [196252 196355])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [196360 196381])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [196386 196436])
                    ("BeginContact" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [196459 196463])
                            ("contact" variable nil (reparse-symbol function_parameters) [196465 196472]))                          
                        :documentation "
        BeginContact(b2ContactListener self, b2Contact contact)

        Called when two fixtures begin to touch.
        ")
                        (reparse-symbol indented_block_body) [196442 196681])
                    ("EndContact" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [196702 196706])
                            ("contact" variable nil (reparse-symbol function_parameters) [196708 196715]))                          
                        :documentation "
        EndContact(b2ContactListener self, b2Contact contact)

        Called when two fixtures cease to touch.
        ")
                        (reparse-symbol indented_block_body) [196687 196920])
                    ("PreSolve" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [196939 196943])
                            ("contact" variable nil (reparse-symbol function_parameters) [196945 196952])
                            ("oldManifold" variable nil (reparse-symbol function_parameters) [196954 196965]))                          
                        :documentation "
        PreSolve(b2ContactListener self, b2Contact contact, b2Manifold oldManifold)

        This is called after a contact is updated. This allows you to inspect a contact before it goes to the solver. If you are careful, you can modify the contact manifold (e.g. disable contact). A copy of the old manifold is provided so that you can detect changes. Note: this is called only for awake bodies. Note: this is called even when the number of contact points is zero. Note: this is not called for sensors. Note: if you set the number of contact points to zero, you will not get an EndContact callback. However, you may get a BeginContact callback the next step.
        ")
                        (reparse-symbol indented_block_body) [196926 197730])
                    ("PostSolve" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [197750 197754])
                            ("contact" variable nil (reparse-symbol function_parameters) [197756 197763])
                            ("impulse" variable nil (reparse-symbol function_parameters) [197765 197772]))                          
                        :documentation "
        PostSolve(b2ContactListener self, b2Contact contact, b2ContactImpulse impulse)

        This lets you inspect a contact after the solver is finished. This is useful for inspecting impulses. Note: the contact manifold does not include time of impact impulses, which can be arbitrarily large if the sub-step is small. Hence the impulse is provided explicitly in a separate data structure. Note: this is only called for contacts that are touching, solid, and awake.
        ")
                        (reparse-symbol indented_block_body) [197736 198344])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [198350 198371])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [198391 198395]))                          
                        :documentation "__hash__(b2ContactListener self) -> long")
                        (reparse-symbol indented_block_body) [198378 198508])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [198527 198531]))                          )
                        (reparse-symbol indented_block_body) [198514 198569])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [198613 198717])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [198725 198802])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [198811 198839]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [198588 198592])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [198594 198602]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [198575 198840])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [198861 198865]))                          )
                        (reparse-symbol indented_block_body) [198846 198976]))                  
                :type "class")
                nil [195629 198976])
            ("b2ContactListener" variable nil nil [198976 199091])
            ("b2ContactListener" variable nil nil [199092 199203])
            ("b2ContactListener" variable nil nil [199204 199311])
            ("b2ContactListener" variable nil nil [199312 199421])
            ("b2ContactListener" variable nil nil [199422 199529])
            ("b2ContactListener_swigregister" variable nil nil [199530 199600])
            ("b2ContactListener_swigregister" code nil nil [199601 199650])
            ("b2QueryCallback" type
               (:documentation "Callback class for AABB queries. See b2World::Query"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [199749 199852])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [199857 199878])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [199883 199931])
                    ("ReportFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [199955 199959])
                            ("fixture" variable nil (reparse-symbol function_parameters) [199961 199968]))                          
                        :documentation "
        ReportFixture(b2QueryCallback self, b2Fixture fixture) -> bool

        Called for each fixture found in the query AABB. 
        false to terminate the query.
        ")
                        (reparse-symbol indented_block_body) [199937 200230])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [200236 200257])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [200277 200281]))                          
                        :documentation "__hash__(b2QueryCallback self) -> long")
                        (reparse-symbol indented_block_body) [200264 200390])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [200409 200413]))                          )
                        (reparse-symbol indented_block_body) [200396 200451])
                    ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [200495 200597])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [200605 200678])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [200687 200715]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [200470 200474])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [200476 200484]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [200457 200716])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [200737 200741]))                          )
                        (reparse-symbol indented_block_body) [200722 200850]))                  
                :type "class")
                nil [199652 200850])
            ("b2QueryCallback" variable nil nil [200850 200961])
            ("b2QueryCallback" variable nil nil [200962 201063])
            ("b2QueryCallback_swigregister" variable nil nil [201064 201130])
            ("b2QueryCallback_swigregister" code nil nil [201131 201176])
            ("b2RayCastCallback" type
               (:documentation "Callback class for ray casts. See  b2World::RayCast"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [201277 201380])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [201385 201406])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [201411 201461])
                    ("ReportFixture" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [201485 201489])
                            ("fixture" variable nil (reparse-symbol function_parameters) [201491 201498])
                            ("point" variable nil (reparse-symbol function_parameters) [201500 201505])
                            ("normal" variable nil (reparse-symbol function_parameters) [201507 201513])
                            ("fraction" variable nil (reparse-symbol function_parameters) [201515 201523]))                          
                        :documentation "
        ReportFixture(b2RayCastCallback self, b2Fixture fixture, b2Vec2 point, b2Vec2 normal, float32 fraction) -> float32

        Called for each fixture found in the query. You control how the ray cast proceeds by returning a float: return -1: ignore this fixture and continue return 0: terminate the ray cast return fraction: clip the ray to this point return 1: don't clip the ray and continue

        Parameters:
        -----------

        fixture: 
        the fixture hit by the ray

        point: 
        the point of initial intersection

        normal: 
        the normal vector at the point of intersection 
        -1 to filter, 0 to terminate, fraction to clip the ray for closest hit, 1 to continue
        ")
                        (reparse-symbol indented_block_body) [201467 202365])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [202371 202392])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [202412 202416]))                          
                        :documentation "__hash__(b2RayCastCallback self) -> long")
                        (reparse-symbol indented_block_body) [202399 202529])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [202548 202552]))                          )
                        (reparse-symbol indented_block_body) [202535 202590])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        __init__(b2RayCastCallback self) -> b2RayCastCallback

        Callback class for ray casts. See  b2World::RayCast
        \"\"\"" code nil (reparse-symbol indented_block_body) [202624 202762])
                            ("if" code nil (reparse-symbol indented_block_body) [202771 202875])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [202883 202961]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [202609 202613]))                          
                        :documentation "
        __init__(b2RayCastCallback self) -> b2RayCastCallback

        Callback class for ray casts. See  b2World::RayCast
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [202596 202962])
                    ("__disown__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [202981 202985]))                          )
                        (reparse-symbol indented_block_body) [202966 203096]))                  
                :type "class")
                nil [201178 203096])
            ("b2RayCastCallback" variable nil nil [203096 203213])
            ("b2RayCastCallback" variable nil nil [203214 203321])
            ("b2RayCastCallback_swigregister" variable nil nil [203322 203392])
            ("b2RayCastCallback_swigregister" code nil nil [203393 203442])
            ("b2Profile" type
               (:documentation "Proxy of C++ b2Profile class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [203512 203615])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [203620 203641])
                    ("step" variable nil (reparse-symbol indented_block_body) [203646 203721])
                    ("collide" variable nil (reparse-symbol indented_block_body) [203726 203810])
                    ("solve" variable nil (reparse-symbol indented_block_body) [203815 203893])
                    ("solveInit" variable nil (reparse-symbol indented_block_body) [203898 203988])
                    ("solveVelocity" variable nil (reparse-symbol indented_block_body) [203993 204095])
                    ("solvePosition" variable nil (reparse-symbol indented_block_body) [204100 204202])
                    ("broadphase" variable nil (reparse-symbol indented_block_body) [204207 204300])
                    ("solveTOI" variable nil (reparse-symbol indented_block_body) [204305 204392])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(b2Profile self) -> b2Profile\"\"\"" code nil (reparse-symbol indented_block_body) [204426 204469])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [204478 204533]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [204411 204415]))                          
                        :documentation "__init__(b2Profile self) -> b2Profile"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [204398 204534])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [204538 204580]))                  
                :type "class")
                nil [203444 204581])
            ("b2Profile_swigregister" variable nil nil [204581 204635])
            ("b2Profile_swigregister" code nil nil [204636 204669])
            ("b2SolverData" type
               (:documentation "Proxy of C++ b2SolverData class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [204745 204848])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [204853 204874])
                    ("step" variable nil (reparse-symbol indented_block_body) [204879 204960])
                    ("positions" variable nil (reparse-symbol indented_block_body) [204965 205061])
                    ("velocities" variable nil (reparse-symbol indented_block_body) [205066 205165])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(b2SolverData self) -> b2SolverData\"\"\"" code nil (reparse-symbol indented_block_body) [205199 205248])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [205257 205318]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [205184 205188]))                          
                        :documentation "__init__(b2SolverData self) -> b2SolverData"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [205171 205319])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [205323 205368]))                  
                :type "class")
                nil [204671 205369])
            ("b2SolverData_swigregister" variable nil nil [205369 205429])
            ("b2SolverData_swigregister" code nil nil [205430 205469])
            ("b2ContactManager" type
               (:documentation "Proxy of C++ b2ContactManager class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [205553 205656])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [205661 205682])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(b2ContactManager self) -> b2ContactManager\"\"\"" code nil (reparse-symbol indented_block_body) [205716 205773])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [205782 205851]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [205701 205705]))                          
                        :documentation "__init__(b2ContactManager self) -> b2ContactManager"
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [205688 205852])
                    ("AddPair" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [205869 205873])
                            ("proxyUserDataA" variable nil (reparse-symbol function_parameters) [205875 205889])
                            ("proxyUserDataB" variable nil (reparse-symbol function_parameters) [205891 205905]))                          
                        :documentation "AddPair(b2ContactManager self, void * proxyUserDataA, void * proxyUserDataB)")
                        (reparse-symbol indented_block_body) [205857 206084])
                    ("FindNewContacts" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [206110 206114]))                          
                        :documentation "FindNewContacts(b2ContactManager self)")
                        (reparse-symbol indented_block_body) [206090 206231])
                    ("Destroy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [206249 206253])
                            ("c" variable nil (reparse-symbol function_parameters) [206255 206256]))                          
                        :documentation "Destroy(b2ContactManager self, b2Contact c)")
                        (reparse-symbol indented_block_body) [206237 206373])
                    ("Collide" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [206391 206395]))                          
                        :documentation "Collide(b2ContactManager self)")
                        (reparse-symbol indented_block_body) [206379 206496])
                    ("broadPhase" variable nil (reparse-symbol indented_block_body) [206501 206608])
                    ("contactList" variable nil (reparse-symbol indented_block_body) [206613 206723])
                    ("contactCount" variable nil (reparse-symbol indented_block_body) [206728 206841])
                    ("contactFilter" variable nil (reparse-symbol indented_block_body) [206846 206962])
                    ("contactListener" variable nil (reparse-symbol indented_block_body) [206967 207089])
                    ("allocator" variable nil (reparse-symbol indented_block_body) [207094 207198])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [207204 207225])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [207245 207249]))                          
                        :documentation "__hash__(b2ContactManager self) -> long")
                        (reparse-symbol indented_block_body) [207232 207360])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [207379 207383]))                          )
                        (reparse-symbol indented_block_body) [207366 207421])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [207428 207477]))                  
                :type "class")
                nil [205471 207478])
            ("b2ContactManager" variable nil nil [207478 207580])
            ("b2ContactManager" variable nil nil [207581 207699])
            ("b2ContactManager" variable nil nil [207700 207802])
            ("b2ContactManager" variable nil nil [207803 207905])
            ("b2ContactManager" variable nil nil [207906 208010])
            ("b2ContactManager_swigregister" variable nil nil [208011 208079])
            ("b2ContactManager_swigregister" code nil nil [208080 208127])
            ("b2_stackSize" variable nil nil [208128 208165])
            ("b2_maxStackEntries" variable nil nil [208166 208215])
            ("b2World" type
               (:documentation "The world class manages all physics entities, dynamic simulation, and asynchronous queries. The world also contains efficient memory management facilities."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [208410 208513])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [208518 208539])
                    ("__init__" function
                       (:suite 
                          ( ("\"\"\"__init__(self, gravity=(0, -10), doSleep=True, **kwargs) -> b2World

        Additional kwargs like contactListener will be passed after the world is created.

        Examples:
         b2World(gravity=(0,-10), doSleep=True)
         b2World(contactListener=myListener)
        \"\"\"" code nil (reparse-symbol indented_block_body) [208616 208901])
                            ("_Box2D" code nil (reparse-symbol indented_block_body) [208910 208967])
                            ("self" variable nil (reparse-symbol indented_block_body) [208977 209005])
                            ("for" code nil (reparse-symbol indented_block_body) [209015 209291]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [208558 208562])
                            ("gravity" variable nil (reparse-symbol function_parameters) [208564 208571])
                            ("doSleep" variable nil (reparse-symbol function_parameters) [208582 208589])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [208596 208604]))                          
                        :documentation "__init__(self, gravity=(0, -10), doSleep=True, **kwargs) -> b2World

        Additional kwargs like contactListener will be passed after the world is created.

        Examples:
         b2World(gravity=(0,-10), doSleep=True)
         b2World(contactListener=myListener)
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [208545 209291])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [209297 209337])
                    ("__SetDestructionListener_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [209381 209385])
                            ("listener" variable nil (reparse-symbol function_parameters) [209387 209395]))                          
                        :documentation "
        __SetDestructionListener_internal(b2World self, b2DestructionListener listener)

        Register a destruction listener. The listener is owned by you and must remain in scope.
        ")
                        (reparse-symbol indented_block_body) [209343 209687])
                    ("__SetContactFilter_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [209725 209729])
                            ("filter" variable nil (reparse-symbol function_parameters) [209731 209737]))                          
                        :documentation "
        __SetContactFilter_internal(b2World self, b2ContactFilter filter)

        Register a contact filter to provide specific control over collision. Otherwise the default filter is used (b2_defaultFilter). The listener is owned by you and must remain in scope.
        ")
                        (reparse-symbol indented_block_body) [209693 210101])
                    ("__SetContactListener_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [210141 210145])
                            ("listener" variable nil (reparse-symbol function_parameters) [210147 210155]))                          
                        :documentation "
        __SetContactListener_internal(b2World self, b2ContactListener listener)

        Register a contact event listener. The listener is owned by you and must remain in scope.
        ")
                        (reparse-symbol indented_block_body) [210107 210437])
                    ("__SetDebugDraw_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [210471 210475])
                            ("debugDraw" variable nil (reparse-symbol function_parameters) [210477 210486]))                          
                        :documentation "
        __SetDebugDraw_internal(b2World self, b2Draw debugDraw)

        Register a routine for debug drawing. The debug draw functions are called inside with  b2World::DrawDebugDatamethod. The debug draw object is owned by you and must remain in scope.
        ")
                        (reparse-symbol indented_block_body) [210443 210838])
                    ("Step" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [210853 210857])
                            ("timeStep" variable nil (reparse-symbol function_parameters) [210859 210867])
                            ("velocityIterations" variable nil (reparse-symbol function_parameters) [210869 210887])
                            ("positionIterations" variable nil (reparse-symbol function_parameters) [210889 210907]))                          
                        :documentation "
        Step(b2World self, float32 timeStep, int32 velocityIterations, int32 positionIterations)

        Take a time step. This performs collision detection, integration, and constraint solution.

        Parameters:
        -----------

        timeStep: 
        the amount of time to simulate, this should not vary.

        velocityIterations: 
        for the velocity constraint solver.

        positionIterations: 
        for the position constraint solver.
        ")
                        (reparse-symbol indented_block_body) [210844 211493])
                    ("ClearForces" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [211515 211519]))                          
                        :documentation "
        ClearForces(b2World self)

        Manually clear the force buffer on all bodies. By default, forces are cleared automatically after each call to Step. The default behavior is modified by calling SetAutoClearForces. The purpose of this function is to support sub-stepping. Sub-stepping is often used to maintain a fixed sized time step under a variable frame-rate. When you perform sub-stepping you will disable auto clearing of forces and instead call ClearForces after all sub-steps are complete in one pass of your game loop. 
        See: 
         SetAutoClearForces
        ")
                        (reparse-symbol indented_block_body) [211499 212174])
                    ("DrawDebugData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [212198 212202]))                          
                        :documentation "
        DrawDebugData(b2World self)

        Call this to draw shapes and other debug draw data.
        ")
                        (reparse-symbol indented_block_body) [212180 212376])
                    ("QueryAABB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [212396 212400])
                            ("callback" variable nil (reparse-symbol function_parameters) [212402 212410])
                            ("aabb" variable nil (reparse-symbol function_parameters) [212412 212416]))                          
                        :documentation "
        QueryAABB(b2World self, b2QueryCallback callback, b2AABB aabb)

        Query the world for all fixtures that potentially overlap the provided AABB.

        Parameters:
        -----------

        callback: 
        a user implemented callback class.

        aabb: 
        the query box.
        ")
                        (reparse-symbol indented_block_body) [212382 212805])
                    ("RayCast" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [212823 212827])
                            ("callback" variable nil (reparse-symbol function_parameters) [212829 212837])
                            ("point1" variable nil (reparse-symbol function_parameters) [212839 212845])
                            ("point2" variable nil (reparse-symbol function_parameters) [212847 212853]))                          
                        :documentation "
        RayCast(b2World self, b2RayCastCallback callback, b2Vec2 point1, b2Vec2 point2)

        Ray-cast the world for all fixtures in the path of the ray. Your callback controls whether you get the closest point, any point, or n-points. The ray-cast ignores shapes that contain the starting point.

        Parameters:
        -----------

        callback: 
        a user implemented callback class.

        point1: 
        the ray starting point

        point2: 
        the ray ending point
        ")
                        (reparse-symbol indented_block_body) [212811 213450])
                    ("__GetBodyList_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [213483 213487])
                            ("args" variable nil (reparse-symbol function_parameters) [213489 213494]))                          
                        :documentation "
        __GetBodyList_internal(b2World self) -> b2Body
        __GetBodyList_internal(b2World self) -> b2Body

        Get the world body list. With the returned body, use  b2Body::GetNextto get the next body in the world list. A NULL body indicates the end of the list. 
        the head of the world body list.
        ")
                        (reparse-symbol indented_block_body) [213456 213900])
                    ("__GetJointList_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [213934 213938])
                            ("args" variable nil (reparse-symbol function_parameters) [213940 213945]))                          
                        :documentation "
        __GetJointList_internal(b2World self) -> b2Joint
        __GetJointList_internal(b2World self) -> b2Joint

        Get the world joint list. With the returned joint, use  b2Joint::GetNextto get the next joint in the world list. A NULL joint indicates the end of the list. 
        the head of the world joint list.
        ")
                        (reparse-symbol indented_block_body) [213906 214362])
                    ("__GetContactList_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [214398 214402])
                            ("args" variable nil (reparse-symbol function_parameters) [214404 214409]))                          
                        :documentation "
        __GetContactList_internal(b2World self) -> b2Contact
        __GetContactList_internal(b2World self) -> b2Contact

        Get the world contact list. With the returned contact, use  b2Contact::GetNextto get the next contact in the world list. A NULL contact indicates the end of the list. 
        the head of the world contact list.

        WARNING: 
        contacts are
        ")
                        (reparse-symbol indented_block_body) [214368 214888])
                    ("SetAllowSleeping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [214915 214919])
                            ("flag" variable nil (reparse-symbol function_parameters) [214921 214925]))                          
                        :documentation "SetAllowSleeping(b2World self, bool flag)")
                        (reparse-symbol indented_block_body) [214894 215043])
                    ("GetAllowSleeping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [215070 215074]))                          
                        :documentation "GetAllowSleeping(b2World self) -> bool")
                        (reparse-symbol indented_block_body) [215049 215183])
                    ("__SetWarmStarting" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [215211 215215])
                            ("flag" variable nil (reparse-symbol function_parameters) [215217 215221]))                          
                        :documentation "
        __SetWarmStarting(b2World self, bool flag)

        Enable/disable warm starting. For testing.
        ")
                        (reparse-symbol indented_block_body) [215189 215411])
                    ("__GetWarmStarting" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [215439 215443]))                          
                        :documentation "__GetWarmStarting(b2World self) -> bool")
                        (reparse-symbol indented_block_body) [215417 215554])
                    ("__SetContinuousPhysics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [215587 215591])
                            ("flag" variable nil (reparse-symbol function_parameters) [215593 215597]))                          
                        :documentation "
        __SetContinuousPhysics(b2World self, bool flag)

        Enable/disable continuous physics. For testing.
        ")
                        (reparse-symbol indented_block_body) [215560 215802])
                    ("__GetContinuousPhysics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [215835 215839]))                          
                        :documentation "__GetContinuousPhysics(b2World self) -> bool")
                        (reparse-symbol indented_block_body) [215808 215960])
                    ("__SetSubStepping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [215987 215991])
                            ("flag" variable nil (reparse-symbol function_parameters) [215993 215997]))                          
                        :documentation "
        __SetSubStepping(b2World self, bool flag)

        Enable/disable single stepped continuous physics. For testing.
        ")
                        (reparse-symbol indented_block_body) [215966 216205])
                    ("__GetSubStepping" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [216232 216236]))                          
                        :documentation "__GetSubStepping(b2World self) -> bool")
                        (reparse-symbol indented_block_body) [216211 216345])
                    ("__GetProxyCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [216371 216375]))                          
                        :documentation "
        __GetProxyCount(b2World self) -> int32

        Get the number of broad-phase proxies.
        ")
                        (reparse-symbol indented_block_body) [216351 216549])
                    ("__GetBodyCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [216574 216578]))                          
                        :documentation "
        __GetBodyCount(b2World self) -> int32

        Get the number of bodies.
        ")
                        (reparse-symbol indented_block_body) [216555 216737])
                    ("__GetJointCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [216763 216767]))                          
                        :documentation "
        __GetJointCount(b2World self) -> int32

        Get the number of joints.
        ")
                        (reparse-symbol indented_block_body) [216743 216928])
                    ("__GetContactCount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [216956 216960]))                          
                        :documentation "
        __GetContactCount(b2World self) -> int32

        Get the number of contacts (each may have 0 or more contact points).
        ")
                        (reparse-symbol indented_block_body) [216934 217168])
                    ("GetTreeHeight" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [217192 217196]))                          
                        :documentation "GetTreeHeight(b2World self) -> int32")
                        (reparse-symbol indented_block_body) [217174 217300])
                    ("GetTreeBalance" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [217325 217329]))                          
                        :documentation "GetTreeBalance(b2World self) -> int32")
                        (reparse-symbol indented_block_body) [217306 217435])
                    ("GetTreeQuality" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [217460 217464]))                          
                        :documentation "GetTreeQuality(b2World self) -> float32")
                        (reparse-symbol indented_block_body) [217441 217572])
                    ("__SetGravity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [217595 217599])
                            ("gravity" variable nil (reparse-symbol function_parameters) [217601 217608]))                          
                        :documentation "
        __SetGravity(b2World self, b2Vec2 gravity)

        Change the global gravity vector.
        ")
                        (reparse-symbol indented_block_body) [217578 217787])
                    ("__GetGravity" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [217810 217814]))                          
                        :documentation "
        __GetGravity(b2World self) -> b2Vec2

        Get the global gravity vector.
        ")
                        (reparse-symbol indented_block_body) [217793 217975])
                    ("__IsLocked" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [217996 218000]))                          
                        :documentation "
        __IsLocked(b2World self) -> bool

        Is the world locked (in the middle of a time step).
        ")
                        (reparse-symbol indented_block_body) [217981 218176])
                    ("__SetAutoClearForces" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [218207 218211])
                            ("flag" variable nil (reparse-symbol function_parameters) [218213 218217]))                          
                        :documentation "
        __SetAutoClearForces(b2World self, bool flag)

        Set flag to control automatic clearing of forces after each time step.
        ")
                        (reparse-symbol indented_block_body) [218182 218441])
                    ("__GetAutoClearForces" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [218472 218476]))                          
                        :documentation "
        __GetAutoClearForces(b2World self) -> bool

        Get the flag that controls automatic clearing of forces after each time step.
        ")
                        (reparse-symbol indented_block_body) [218447 218698])
                    ("ShiftOrigin" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [218720 218724])
                            ("newOrigin" variable nil (reparse-symbol function_parameters) [218726 218735]))                          
                        :documentation "ShiftOrigin(b2World self, b2Vec2 newOrigin)")
                        (reparse-symbol indented_block_body) [218704 218855])
                    ("__GetContactManager" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [218885 218889]))                          
                        :documentation "
        __GetContactManager(b2World self) -> b2ContactManager

        Get the contact manager for testing.
        ")
                        (reparse-symbol indented_block_body) [218861 219080])
                    ("GetProfile" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219101 219105]))                          
                        :documentation "GetProfile(b2World self) -> b2Profile")
                        (reparse-symbol indented_block_body) [219086 219207])
                    ("Dump" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219222 219226]))                          
                        :documentation "Dump(b2World self)")
                        (reparse-symbol indented_block_body) [219213 219303])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [219309 219330])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219350 219354]))                          
                        :documentation "__hash__(b2World self) -> long")
                        (reparse-symbol indented_block_body) [219337 219447])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219466 219470]))                          )
                        (reparse-symbol indented_block_body) [219453 219508])
                    ("__CreateBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219531 219535])
                            ("defn" variable nil (reparse-symbol function_parameters) [219537 219541]))                          
                        :documentation "__CreateBody(b2World self, b2BodyDef defn) -> b2Body")
                        (reparse-symbol indented_block_body) [219514 219666])
                    ("__CreateJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219690 219694])
                            ("defn" variable nil (reparse-symbol function_parameters) [219696 219700]))                          
                        :documentation "__CreateJoint(b2World self, b2JointDef defn) -> b2Joint")
                        (reparse-symbol indented_block_body) [219672 219829])
                    ("DestroyBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [219851 219855])
                            ("body" variable nil (reparse-symbol function_parameters) [219857 219861]))                          
                        :documentation "
        DestroyBody(b2World self, b2Body body)

        Destroy a rigid body given a definition. No reference to the definition is retained. This function is locked during callbacks. 
        WARNING: 
        This automatically deletes all associated shapes and joints. 
        This function is locked during callbacks.
        ")
                        (reparse-symbol indented_block_body) [219835 220264])
                    ("DestroyJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [220287 220291])
                            ("joint" variable nil (reparse-symbol function_parameters) [220293 220298]))                          
                        :documentation "
        DestroyJoint(b2World self, b2Joint joint)

        Destroy a joint. This may cause the connected bodies to begin colliding. 
        WARNING: 
        This function is locked during callbacks.
        ")
                        (reparse-symbol indented_block_body) [220270 220582])
                    ("__iter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [220601 220605]))                          
                        :documentation "
        Iterates over the bodies in the world
        ")
                        (reparse-symbol indented_block_body) [220588 220734])
                    ("CreateDynamicBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [220761 220765])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [220767 220775]))                          
                        :documentation "
        Create a single dynamic body in the world.

        Accepts only kwargs to a b2BodyDef. For more information, see
        CreateBody and b2BodyDef.
        ")
                        (reparse-symbol indented_block_body) [220739 221039])
                    ("CreateKinematicBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [221068 221072])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [221074 221082]))                          
                        :documentation "
        Create a single kinematic body in the world.

        Accepts only kwargs to a b2BodyDef. For more information, see
        CreateBody and b2BodyDef.
        ")
                        (reparse-symbol indented_block_body) [221044 221350])
                    ("CreateStaticBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [221376 221380])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [221382 221390]))                          
                        :documentation "
        Create a single static body in the world.

        Accepts only kwargs to a b2BodyDef. For more information, see
        CreateBody and b2BodyDef.
        ")
                        (reparse-symbol indented_block_body) [221355 221652])
                    ("CreateBody" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [221672 221676])
                            ("defn" variable nil (reparse-symbol function_parameters) [221678 221682])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [221689 221697]))                          
                        :documentation "
        Create a body in the world.
        Takes a single b2BodyDef argument, or kwargs to pass to a temporary b2BodyDef.
        world.CreateBody(position=(1,2), angle=1) 
        is short for:
        world.CreateBody(b2BodyDef(position=(1,2), angle=1))

        If the definition (or kwargs) sets 'fixtures', they will be created on the 
        newly created body. A single fixture is also accepted.

        CreateBody(..., fixtures=[])

        This is short for:
            body = CreateBody(...)
            for fixture in []:
                body.CreateFixture(fixture)

         'shapes' and 'shapeFixture' are also accepted:
         CreateBody(..., shapes=[], shapeFixture=b2FixtureDef())

        This is short for:
            body = CreateBody(...)
            body.CreateFixturesFromShapes(shapes=[], shapeFixture=b2FixtureDef())
        ")
                        (reparse-symbol indented_block_body) [221657 223487])
                    ("CreateDistanceJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [223516 223520])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [223522 223530]))                          
                        :documentation "
        Create a single b2DistanceJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [223492 223906])
                    ("CreateRopeJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [223931 223935])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [223937 223945]))                          
                        :documentation "
        Create a single b2RopeJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [223911 224313])
                    ("CreateFrictionJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [224342 224346])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [224348 224356]))                          
                        :documentation "
        Create a single b2FrictionJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [224318 224732])
                    ("CreateGearJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [224757 224761])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [224763 224771]))                          
                        :documentation "
        Create a single b2GearJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either joint1 or joint2 is left unset.
        ")
                        (reparse-symbol indented_block_body) [224737 225157])
                    ("CreateWheelJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [225183 225187])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [225189 225197]))                          
                        :documentation "
        Create a single b2WheelJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [225162 225567])
                    ("CreateMouseJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [225593 225597])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [225599 225607]))                          
                        :documentation "
        Create a single b2MouseJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [225572 225977])
                    ("CreatePrismaticJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [226007 226011])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [226013 226021]))                          
                        :documentation "
        Create a single b2PrismaticJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [225982 226399])
                    ("CreatePulleyJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [226426 226430])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [226432 226440]))                          
                        :documentation "
        Create a single b2PulleyJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [226404 226812])
                    ("CreateRevoluteJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [226841 226845])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [226847 226855]))                          
                        :documentation "
        Create a single b2RevoluteJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [226817 227231])
                    ("CreateWeldJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [227256 227260])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [227262 227270]))                          
                        :documentation "
        Create a single b2WeldJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [227236 227638])
                    ("CreateMotorJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [227664 227668])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [227670 227678]))                          
                        :documentation "
        Create a single b2MotorJoint. Only accepts kwargs to the joint definition.

        Raises ValueError if either bodyA or bodyB is left unset.
        ")
                        (reparse-symbol indented_block_body) [227643 228048])
                    ("CreateJoint" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [228069 228073])
                            ("defn" variable nil (reparse-symbol function_parameters) [228075 228079])
                            ("type" variable nil (reparse-symbol function_parameters) [228086 228090])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [228097 228105]))                          
                        :documentation "
        Create a joint in the world.
        Takes a single b2JointDef argument, or kwargs to pass to a temporary b2JointDef.

        All of these are exactly equivalent:
        world.CreateJoint(type=b2RevoluteJoint, bodyA=body, bodyB=body2)
        world.CreateJoint(type=b2RevoluteJointDef, bodyA=body, bodyB=body2)
        world.CreateJoint(b2RevoluteJointDef(bodyA=body, bodyB=body2))
        ")
                        (reparse-symbol indented_block_body) [228053 229686])
                    ("__GetData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [230101 230105])
                            ("name" variable nil (reparse-symbol function_parameters) [230107 230111]))                          )
                        (reparse-symbol indented_block_body) [230087 230234])
                    ("__SetData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [230252 230256])
                            ("name" variable nil (reparse-symbol function_parameters) [230258 230262])
                            ("value" variable nil (reparse-symbol function_parameters) [230264 230269])
                            ("fcn" variable nil (reparse-symbol function_parameters) [230271 230274]))                          )
                        (reparse-symbol indented_block_body) [230238 230330])
                    ("gravity" variable nil (reparse-symbol indented_block_body) [230363 230411])
                    ("autoClearForces" variable nil (reparse-symbol indented_block_body) [230416 230486])
                    ("__data" variable nil (reparse-symbol indented_block_body) [230491 230502])
                    ("destructionListener" variable nil (reparse-symbol indented_block_body) [230586 230790])
                    ("contactListener" variable nil (reparse-symbol indented_block_body) [230795 230977])
                    ("contactFilter" variable nil (reparse-symbol indented_block_body) [230982 231169])
                    ("renderer" variable nil (reparse-symbol indented_block_body) [231174 231338])
                    ("continuousPhysics" variable nil (reparse-symbol indented_block_body) [231344 231420])
                    ("warmStarting" variable nil (reparse-symbol indented_block_body) [231425 231486])
                    ("subStepping" variable nil (reparse-symbol indented_block_body) [231491 231549])
                    ("contactManager" variable nil (reparse-symbol indented_block_body) [231572 231623])
                    ("contactCount" variable nil (reparse-symbol indented_block_body) [231628 231677])
                    ("bodyCount" variable nil (reparse-symbol indented_block_body) [231682 231728])
                    ("jointCount" variable nil (reparse-symbol indented_block_body) [231733 231780])
                    ("proxyCount" variable nil (reparse-symbol indented_block_body) [231785 231832])
                    ("joints" variable nil (reparse-symbol indented_block_body) [231837 232058])
                    ("bodies" variable nil (reparse-symbol indented_block_body) [232063 232283])
                    ("contacts" variable nil (reparse-symbol indented_block_body) [232288 232515])
                    ("joints_gen" variable nil (reparse-symbol indented_block_body) [232520 232839])
                    ("bodies_gen" variable nil (reparse-symbol indented_block_body) [232844 233139])
                    ("contacts_gen" variable nil (reparse-symbol indented_block_body) [233144 233448])
                    ("locked" variable nil (reparse-symbol indented_block_body) [233453 233489]))                  
                :type "class")
                nil [208217 233490])
            ("b2World" variable nil nil [233492 233619])
            ("b2World" variable nil nil [233620 233735])
            ("b2World" variable nil nil [233736 233855])
            ("b2World" variable nil nil [233856 233963])
            ("b2World" variable nil nil [233964 234033])
            ("b2World" variable nil nil [234034 234117])
            ("b2World" variable nil nil [234118 234205])
            ("b2World" variable nil nil [234206 234285])
            ("b2World" variable nil nil [234286 234361])
            ("b2World" variable nil nil [234362 234467])
            ("b2World" variable nil nil [234468 234575])
            ("b2World" variable nil nil [234576 234687])
            ("b2World" variable nil nil [234688 234781])
            ("b2World" variable nil nil [234782 234875])
            ("b2World" variable nil nil [234876 234971])
            ("b2World" variable nil nil [234972 235067])
            ("b2World" variable nil nil [235068 235173])
            ("b2World" variable nil nil [235174 235279])
            ("b2World" variable nil nil [235280 235373])
            ("b2World" variable nil nil [235374 235467])
            ("b2World" variable nil nil [235468 235559])
            ("b2World" variable nil nil [235560 235649])
            ("b2World" variable nil nil [235650 235741])
            ("b2World" variable nil nil [235742 235837])
            ("b2World" variable nil nil [235838 235925])
            ("b2World" variable nil nil [235926 236015])
            ("b2World" variable nil nil [236016 236105])
            ("b2World" variable nil nil [236106 236191])
            ("b2World" variable nil nil [236192 236277])
            ("b2World" variable nil nil [236278 236359])
            ("b2World" variable nil nil [236360 236461])
            ("b2World" variable nil nil [236462 236563])
            ("b2World" variable nil nil [236564 236647])
            ("b2World" variable nil nil [236648 236747])
            ("b2World" variable nil nil [236748 236829])
            ("b2World" variable nil nil [236830 236899])
            ("b2World" variable nil nil [236900 236977])
            ("b2World" variable nil nil [236978 237063])
            ("b2World" variable nil nil [237064 237151])
            ("b2World" variable nil nil [237152 237235])
            ("b2World" variable nil nil [237236 237321])
            ("b2World_swigregister" variable nil nil [237322 237372])
            ("b2World_swigregister" code nil nil [237373 237402])
            ("b2MixFriction" function
               (:documentation "
    b2MixFriction(float32 friction1, float32 friction2) -> float32

    Friction mixing law. Feel free to customize this.
    "
                :arguments 
                  ( ("friction1" variable nil (reparse-symbol function_parameters) [237423 237432])
                    ("friction2" variable nil (reparse-symbol function_parameters) [237434 237443]))                  )
                nil [237405 237638])
            ("b2MixRestitution" function
               (:documentation "
    b2MixRestitution(float32 restitution1, float32 restitution2) -> float32

    Restitution mixing law. Feel free to customize this.
    "
                :arguments 
                  ( ("restitution1" variable nil (reparse-symbol function_parameters) [237660 237672])
                    ("restitution2" variable nil (reparse-symbol function_parameters) [237674 237686]))                  )
                nil [237639 237902])
            ("b2ContactEdge" type
               (:documentation "A contact edge is used to connect bodies and contacts together in a contact graph where each body is a node and each contact is an edge. A contact edge belongs to a doubly linked list maintained in each attached body. Each contact has two contact nodes, one for each attached body."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [238227 238330])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [238335 238356])
                    ("other" variable nil (reparse-symbol indented_block_body) [238361 238447])
                    ("contact" variable nil (reparse-symbol indented_block_body) [238452 238544])
                    ("prev" variable nil (reparse-symbol indented_block_body) [238549 238632])
                    ("next" variable nil (reparse-symbol indented_block_body) [238637 238720])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [238726 238747])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [238767 238771]))                          
                        :documentation "__hash__(b2ContactEdge self) -> long")
                        (reparse-symbol indented_block_body) [238754 238876])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [238895 238899]))                          )
                        (reparse-symbol indented_block_body) [238882 238937])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [238981 239043])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [239052 239080]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [238956 238960])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [238962 238970]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [238943 239081])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [239087 239133]))                  
                :type "class")
                nil [237902 239134])
            ("b2ContactEdge" variable nil nil [239134 239229])
            ("b2ContactEdge_swigregister" variable nil nil [239230 239292])
            ("b2ContactEdge_swigregister" code nil nil [239293 239334])
            ("b2Contact" type
               (:documentation "The class manages contact between two shapes. A contact exists for each overlapping AABB in the broad-phase (except if filtered). Therefore a contact object may exist that has no contact points."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [239570 239673])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [239724 239790]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [239692 239696])
                            ("args" variable nil (reparse-symbol function_parameters) [239698 239703])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [239705 239713]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [239679 239791])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [239795 239816])
                    ("__GetManifold" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [239840 239844])
                            ("args" variable nil (reparse-symbol function_parameters) [239846 239851]))                          
                        :documentation "
        __GetManifold(b2Contact self) -> b2Manifold
        __GetManifold(b2Contact self) -> b2Manifold

        Get the contact manifold. Do not modify the manifold unless you understand the internals of Box2D.
        ")
                        (reparse-symbol indented_block_body) [239822 240149])
                    ("__GetWorldManifold_internal" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [240187 240191])
                            ("worldManifold" variable nil (reparse-symbol function_parameters) [240193 240206]))                          
                        :documentation "
        __GetWorldManifold_internal(b2Contact self, b2WorldManifold worldManifold)

        Get the world manifold.
        ")
                        (reparse-symbol indented_block_body) [240155 240430])
                    ("__IsTouching" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [240453 240457]))                          
                        :documentation "
        __IsTouching(b2Contact self) -> bool

        Is this contact touching?
        ")
                        (reparse-symbol indented_block_body) [240436 240615])
                    ("__SetEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [240638 240642])
                            ("flag" variable nil (reparse-symbol function_parameters) [240644 240648]))                          
                        :documentation "
        __SetEnabled(b2Contact self, bool flag)

        Enable/disable this contact. This can be used inside the pre-solve contact listener. The contact is only disabled for the current time step (or sub-step in continuous collisions).
        ")
                        (reparse-symbol indented_block_body) [240621 240969])
                    ("__IsEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [240991 240995]))                          
                        :documentation "
        __IsEnabled(b2Contact self) -> bool

        Has this contact been disabled?
        ")
                        (reparse-symbol indented_block_body) [240975 241157])
                    ("__GetNext" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [241177 241181])
                            ("args" variable nil (reparse-symbol function_parameters) [241183 241188]))                          
                        :documentation "
        __GetNext(b2Contact self) -> b2Contact
        __GetNext(b2Contact self) -> b2Contact

        Get the next contact in the world's contact list.
        ")
                        (reparse-symbol indented_block_body) [241163 241423])
                    ("__GetFixtureA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [241447 241451])
                            ("args" variable nil (reparse-symbol function_parameters) [241453 241458]))                          
                        :documentation "
        __GetFixtureA(b2Contact self) -> b2Fixture
        __GetFixtureA(b2Contact self) -> b2Fixture

        Get fixture A in this contact.
        ")
                        (reparse-symbol indented_block_body) [241429 241686])
                    ("__GetChildIndexA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [241713 241717]))                          
                        :documentation "
        __GetChildIndexA(b2Contact self) -> int32

        Get the child primitive index for fixture A.
        ")
                        (reparse-symbol indented_block_body) [241692 241903])
                    ("__GetFixtureB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [241927 241931])
                            ("args" variable nil (reparse-symbol function_parameters) [241933 241938]))                          
                        :documentation "
        __GetFixtureB(b2Contact self) -> b2Fixture
        __GetFixtureB(b2Contact self) -> b2Fixture

        Get fixture B in this contact.
        ")
                        (reparse-symbol indented_block_body) [241909 242166])
                    ("__GetChildIndexB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [242193 242197]))                          
                        :documentation "
        __GetChildIndexB(b2Contact self) -> int32

        Get the child primitive index for fixture B.
        ")
                        (reparse-symbol indented_block_body) [242172 242383])
                    ("__SetFriction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [242407 242411])
                            ("friction" variable nil (reparse-symbol function_parameters) [242413 242421]))                          
                        :documentation "
        __SetFriction(b2Contact self, float32 friction)

        Override the default friction mixture. You can call this in  b2ContactListener::PreSolve. This value persists until set or reset.
        ")
                        (reparse-symbol indented_block_body) [242389 242705])
                    ("__GetFriction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [242729 242733]))                          
                        :documentation "
        __GetFriction(b2Contact self) -> float32

        Get the friction.
        ")
                        (reparse-symbol indented_block_body) [242711 242888])
                    ("ResetFriction" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [242912 242916]))                          
                        :documentation "
        ResetFriction(b2Contact self)

        Reset the friction mixture to the default value.
        ")
                        (reparse-symbol indented_block_body) [242894 243091])
                    ("__SetRestitution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [243118 243122])
                            ("restitution" variable nil (reparse-symbol function_parameters) [243124 243135]))                          
                        :documentation "
        __SetRestitution(b2Contact self, float32 restitution)

        Override the default restitution mixture. You can call this in  b2ContactListener::PreSolve. The value persists until you set or reset.
        ")
                        (reparse-symbol indented_block_body) [243097 243437])
                    ("__GetRestitution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [243464 243468]))                          
                        :documentation "
        __GetRestitution(b2Contact self) -> float32

        Get the restitution.
        ")
                        (reparse-symbol indented_block_body) [243443 243632])
                    ("ResetRestitution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [243659 243663]))                          
                        :documentation "
        ResetRestitution(b2Contact self)

        Reset the restitution to the default value.
        ")
                        (reparse-symbol indented_block_body) [243638 243839])
                    ("__SetTangentSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [243867 243871])
                            ("speed" variable nil (reparse-symbol function_parameters) [243873 243878]))                          
                        :documentation "__SetTangentSpeed(b2Contact self, float32 speed)")
                        (reparse-symbol indented_block_body) [243845 244007])
                    ("__GetTangentSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [244035 244039]))                          
                        :documentation "__GetTangentSpeed(b2Contact self) -> float32")
                        (reparse-symbol indented_block_body) [244013 244157])
                    ("Evaluate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [244176 244180])
                            ("manifold" variable nil (reparse-symbol function_parameters) [244182 244190])
                            ("xfA" variable nil (reparse-symbol function_parameters) [244192 244195])
                            ("xfB" variable nil (reparse-symbol function_parameters) [244197 244200]))                          
                        :documentation "
        Evaluate(b2Contact self, b2Manifold manifold, b2Transform xfA, b2Transform xfB)

        Evaluate this contact with your own manifold and transforms.
        ")
                        (reparse-symbol indented_block_body) [244163 244452])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [244458 244479])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [244499 244503]))                          
                        :documentation "__hash__(b2Contact self) -> long")
                        (reparse-symbol indented_block_body) [244486 244600])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [244619 244623]))                          )
                        (reparse-symbol indented_block_body) [244606 244661])
                    ("__GetWorldManifold" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [244690 244694]))                          )
                        (reparse-symbol indented_block_body) [244667 244792])
                    ("enabled" variable nil (reparse-symbol indented_block_body) [244825 244870])
                    ("next" variable nil (reparse-symbol indented_block_body) [244892 244924])
                    ("fixtureB" variable nil (reparse-symbol indented_block_body) [244929 244969])
                    ("fixtureA" variable nil (reparse-symbol indented_block_body) [244974 245014])
                    ("manifold" variable nil (reparse-symbol indented_block_body) [245019 245059])
                    ("childIndexA" variable nil (reparse-symbol indented_block_body) [245064 245110])
                    ("childIndexB" variable nil (reparse-symbol indented_block_body) [245115 245161])
                    ("worldManifold" variable nil (reparse-symbol indented_block_body) [245166 245216])
                    ("touching" variable nil (reparse-symbol indented_block_body) [245221 245260])
                    ("friction" variable nil (reparse-symbol indented_block_body) [245265 245314])
                    ("restitution" variable nil (reparse-symbol indented_block_body) [245319 245377])
                    ("tangentSpeed" variable nil (reparse-symbol indented_block_body) [245382 245443]))                  
                :type "class")
                nil [239336 245444])
            ("b2Contact" variable nil nil [245446 245539])
            ("b2Contact" variable nil nil [245540 245661])
            ("b2Contact" variable nil nil [245662 245753])
            ("b2Contact" variable nil nil [245754 245845])
            ("b2Contact" variable nil nil [245846 245935])
            ("b2Contact" variable nil nil [245936 246021])
            ("b2Contact" variable nil nil [246022 246115])
            ("b2Contact" variable nil nil [246116 246215])
            ("b2Contact" variable nil nil [246216 246309])
            ("b2Contact" variable nil nil [246310 246409])
            ("b2Contact" variable nil nil [246410 246503])
            ("b2Contact" variable nil nil [246504 246597])
            ("b2Contact" variable nil nil [246598 246691])
            ("b2Contact" variable nil nil [246692 246791])
            ("b2Contact" variable nil nil [246792 246891])
            ("b2Contact" variable nil nil [246892 246991])
            ("b2Contact" variable nil nil [246992 247093])
            ("b2Contact" variable nil nil [247094 247195])
            ("b2Contact" variable nil nil [247196 247279])
            ("b2Contact" variable nil nil [247280 247363])
            ("b2Contact_swigregister" variable nil nil [247364 247418])
            ("b2Contact_swigregister" code nil nil [247419 247452])
            ("_Box2D" code nil nil [247455 247495])
            ("e_wheelJoint" variable nil nil [247496 247530])
            ("_Box2D" code nil nil [247532 247571])
            ("e_ropeJoint" variable nil nil [247572 247604])
            ("b2Jacobian" type
               (:documentation "Proxy of C++ b2Jacobian class"
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [247675 247778])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [247783 247804])
                    ("linear" variable nil (reparse-symbol indented_block_body) [247809 247892])
                    ("angularA" variable nil (reparse-symbol indented_block_body) [247897 247986])
                    ("angularB" variable nil (reparse-symbol indented_block_body) [247991 248080])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [248086 248107])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [248127 248131]))                          
                        :documentation "__hash__(b2Jacobian self) -> long")
                        (reparse-symbol indented_block_body) [248114 248230])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [248249 248253]))                          )
                        (reparse-symbol indented_block_body) [248236 248291])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [248335 248391])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [248400 248428]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [248310 248314])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [248316 248324]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [248297 248429])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [248435 248478]))                  
                :type "class")
                nil [247605 248479])
            ("b2Jacobian" variable nil nil [248479 248565])
            ("b2Jacobian_swigregister" variable nil nil [248566 248622])
            ("b2Jacobian_swigregister" code nil nil [248623 248658])
            ("b2JointEdge" type
               (:documentation "A joint edge is used to connect bodies and joints together in a joint graph where each body is a node and each joint is an edge. A joint edge belongs to a doubly linked list maintained in each attached body. Each joint has two joint nodes, one for each attached body."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [248969 249072])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [249077 249098])
                    ("other" variable nil (reparse-symbol indented_block_body) [249103 249185])
                    ("joint" variable nil (reparse-symbol indented_block_body) [249190 249272])
                    ("prev" variable nil (reparse-symbol indented_block_body) [249277 249356])
                    ("next" variable nil (reparse-symbol indented_block_body) [249361 249440])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [249446 249467])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [249487 249491]))                          
                        :documentation "__hash__(b2JointEdge self) -> long")
                        (reparse-symbol indented_block_body) [249474 249592])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [249611 249615]))                          )
                        (reparse-symbol indented_block_body) [249598 249653])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [249697 249755])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [249764 249792]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [249672 249676])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [249678 249686]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [249659 249793])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [249799 249843]))                  
                :type "class")
                nil [248660 249844])
            ("b2JointEdge" variable nil nil [249844 249933])
            ("b2JointEdge_swigregister" variable nil nil [249934 249992])
            ("b2JointEdge_swigregister" code nil nil [249993 250030])
            ("b2JointDef" type
               (:documentation "Joint definitions are used to construct joints."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [250120 250223])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [250228 250249])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [250293 250349])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [250358 250386]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [250268 250272])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [250274 250282]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [250255 250387])
                    ("type" variable nil (reparse-symbol indented_block_body) [250393 250470])
                    ("bodyA" variable nil (reparse-symbol indented_block_body) [250475 250555])
                    ("bodyB" variable nil (reparse-symbol indented_block_body) [250560 250640])
                    ("collideConnected" variable nil (reparse-symbol indented_block_body) [250645 250758])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [250764 250785])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [250805 250809]))                          
                        :documentation "__hash__(b2JointDef self) -> long")
                        (reparse-symbol indented_block_body) [250792 250908])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [250927 250931]))                          )
                        (reparse-symbol indented_block_body) [250914 250969])
                    ("__GetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [250993 250997]))                          
                        :documentation "__GetUserData(b2JointDef self) -> PyObject *")
                        (reparse-symbol indented_block_body) [250975 251112])
                    ("__SetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [251136 251140])
                            ("data" variable nil (reparse-symbol function_parameters) [251142 251146]))                          
                        :documentation "__SetUserData(b2JointDef self, PyObject * data)")
                        (reparse-symbol indented_block_body) [251118 251270])
                    ("ClearUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [251294 251298]))                          
                        :documentation "ClearUserData(b2JointDef self)")
                        (reparse-symbol indented_block_body) [251276 251399])
                    ("userData" variable nil (reparse-symbol indented_block_body) [251405 251454])
                    ("__del__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [251471 251475]))                          )
                        (reparse-symbol indented_block_body) [251459 251507])
                    ("to_kwargs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [251527 251531]))                          
                        :documentation "
        Returns a dictionary representing this joint definition
        ")
                        (reparse-symbol indented_block_body) [251513 252079])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [252084 252127]))                  
                :type "class")
                nil [250032 252128])
            ("b2JointDef" variable nil nil [252128 252214])
            ("b2JointDef" variable nil nil [252215 252311])
            ("b2JointDef" variable nil nil [252312 252408])
            ("b2JointDef" variable nil nil [252409 252505])
            ("b2JointDef_swigregister" variable nil nil [252506 252562])
            ("b2JointDef_swigregister" code nil nil [252563 252598])
            ("b2Joint" type
               (:documentation "The base joint class. Joints are used to constraint two bodies together in various fashions. Some joints also feature limits and motors."
                :superclasses ("object")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [252774 252877])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [252928 252994]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [252896 252900])
                            ("args" variable nil (reparse-symbol function_parameters) [252902 252907])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [252909 252917]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [252883 252995])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [252999 253020])
                    ("__GetType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [253040 253044]))                          
                        :documentation "
        __GetType(b2Joint self) -> b2JointType

        Get the type of the concrete joint.
        ")
                        (reparse-symbol indented_block_body) [253026 253209])
                    ("__GetBodyA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [253230 253234]))                          
                        :documentation "
        __GetBodyA(b2Joint self) -> b2Body

        Get the first body attached to this joint.
        ")
                        (reparse-symbol indented_block_body) [253215 253403])
                    ("__GetBodyB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [253424 253428]))                          
                        :documentation "
        __GetBodyB(b2Joint self) -> b2Body

        Get the second body attached to this joint.
        ")
                        (reparse-symbol indented_block_body) [253409 253598])
                    ("__GetAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [253621 253625]))                          
                        :documentation "
        __GetAnchorA(b2Joint self) -> b2Vec2

        Get the anchor point on bodyA in world coordinates.
        ")
                        (reparse-symbol indented_block_body) [253604 253807])
                    ("__GetAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [253830 253834]))                          
                        :documentation "
        __GetAnchorB(b2Joint self) -> b2Vec2

        Get the anchor point on bodyB in world coordinates.
        ")
                        (reparse-symbol indented_block_body) [253813 254016])
                    ("GetReactionForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [254043 254047])
                            ("inv_dt" variable nil (reparse-symbol function_parameters) [254049 254055]))                          
                        :documentation "
        GetReactionForce(b2Joint self, float32 inv_dt) -> b2Vec2

        Get the reaction force on body2 at the joint anchor in Newtons.
        ")
                        (reparse-symbol indented_block_body) [254022 254281])
                    ("GetReactionTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [254309 254313])
                            ("inv_dt" variable nil (reparse-symbol function_parameters) [254315 254321]))                          
                        :documentation "
        GetReactionTorque(b2Joint self, float32 inv_dt) -> float32

        Get the reaction torque on body2 in N*m.
        ")
                        (reparse-symbol indented_block_body) [254287 254527])
                    ("__GetNext" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [254547 254551])
                            ("args" variable nil (reparse-symbol function_parameters) [254553 254558]))                          
                        :documentation "
        __GetNext(b2Joint self) -> b2Joint
        __GetNext(b2Joint self) -> b2Joint

        Get the next joint the world joint list.
        ")
                        (reparse-symbol indented_block_body) [254533 254774])
                    ("__IsActive" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [254795 254799]))                          
                        :documentation "
        __IsActive(b2Joint self) -> bool

        Short-cut function to determine if either body is inactive.
        ")
                        (reparse-symbol indented_block_body) [254780 254983])
                    ("__GetCollideConnected" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255015 255019]))                          
                        :documentation "__GetCollideConnected(b2Joint self) -> bool")
                        (reparse-symbol indented_block_body) [254989 255138])
                    ("Dump" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255153 255157]))                          
                        :documentation "Dump(b2Joint self)")
                        (reparse-symbol indented_block_body) [255144 255234])
                    ("ShiftOrigin" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255256 255260])
                            ("newOrigin" variable nil (reparse-symbol function_parameters) [255262 255271]))                          
                        :documentation "ShiftOrigin(b2Joint self, b2Vec2 newOrigin)")
                        (reparse-symbol indented_block_body) [255240 255391])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [255397 255418])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255438 255442]))                          
                        :documentation "__hash__(b2Joint self) -> long")
                        (reparse-symbol indented_block_body) [255425 255535])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255554 255558]))                          )
                        (reparse-symbol indented_block_body) [255541 255596])
                    ("__GetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255620 255624]))                          
                        :documentation "__GetUserData(b2Joint self) -> PyObject *")
                        (reparse-symbol indented_block_body) [255602 255733])
                    ("__SetUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255757 255761])
                            ("data" variable nil (reparse-symbol function_parameters) [255763 255767]))                          
                        :documentation "__SetUserData(b2Joint self, PyObject * data)")
                        (reparse-symbol indented_block_body) [255739 255885])
                    ("ClearUserData" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [255909 255913]))                          
                        :documentation "ClearUserData(b2Joint self)")
                        (reparse-symbol indented_block_body) [255891 256008])
                    ("userData" variable nil (reparse-symbol indented_block_body) [256014 256063])
                    ("__eq__" variable nil (reparse-symbol indented_block_body) [256070 256093])
                    ("__ne__" variable nil (reparse-symbol indented_block_body) [256098 256156])
                    ("next" variable nil (reparse-symbol indented_block_body) [256178 256210])
                    ("bodyA" variable nil (reparse-symbol indented_block_body) [256215 256249])
                    ("bodyB" variable nil (reparse-symbol indented_block_body) [256254 256288])
                    ("type" variable nil (reparse-symbol indented_block_body) [256293 256325])
                    ("active" variable nil (reparse-symbol indented_block_body) [256330 256365])
                    ("anchorB" variable nil (reparse-symbol indented_block_body) [256370 256408])
                    ("anchorA" variable nil (reparse-symbol indented_block_body) [256413 256451])
                    ("collideConnected" variable nil (reparse-symbol indented_block_body) [256456 256512])
                    ("getAsType" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [256532 256536]))                          
                        :documentation "
        Backward compatibility
        ")
                        (reparse-symbol indented_block_body) [256518 256614]))                  
                :type "class")
                nil [252600 256614])
            ("b2Joint" variable nil nil [256615 256694])
            ("b2Joint" variable nil nil [256695 256776])
            ("b2Joint" variable nil nil [256777 256858])
            ("b2Joint" variable nil nil [256859 256944])
            ("b2Joint" variable nil nil [256945 257030])
            ("b2Joint" variable nil nil [257031 257124])
            ("b2Joint" variable nil nil [257125 257220])
            ("b2Joint" variable nil nil [257221 257300])
            ("b2Joint" variable nil nil [257301 257382])
            ("b2Joint" variable nil nil [257383 257486])
            ("b2Joint" variable nil nil [257487 257556])
            ("b2Joint" variable nil nil [257557 257640])
            ("b2Joint" variable nil nil [257641 257718])
            ("b2Joint" variable nil nil [257719 257806])
            ("b2Joint" variable nil nil [257807 257894])
            ("b2Joint" variable nil nil [257895 257982])
            ("b2Joint_swigregister" variable nil nil [257983 258033])
            ("b2Joint_swigregister" code nil nil [258034 258063])
            ("b2DistanceJointDef" type
               (:documentation "
    Distance joint definition. This requires defining an anchor point on both bodies and the non-zero length of the distance joint. The definition uses local anchor points so that the initial configuration can violate the constraint slightly. This helps when saving and loading a game. 
    WARNING: 
    Do not use a zero or short length.
    "
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [258463 258566])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [258571 258592])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [258636 258708])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [258717 258754])
                            ("if" code nil (reparse-symbol indented_block_body) [258763 258883]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [258611 258615])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [258617 258625]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [258598 258883])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [258905 258909])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [258911 258916])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [258918 258923])
                            ("anchorA" variable nil (reparse-symbol function_parameters) [258925 258932])
                            ("anchorB" variable nil (reparse-symbol function_parameters) [258934 258941]))                          
                        :documentation "
        Initialize(b2DistanceJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 anchorA, b2Vec2 anchorB)

        Initialize the bodies, anchors, and length using the world anchors.
        ")
                        (reparse-symbol indented_block_body) [258890 259239])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [259244 259361])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [259366 259483])
                    ("length" variable nil (reparse-symbol indented_block_body) [259488 259587])
                    ("frequencyHz" variable nil (reparse-symbol indented_block_body) [259592 259706])
                    ("dampingRatio" variable nil (reparse-symbol indented_block_body) [259711 259828])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [259834 259855])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [259875 259879]))                          
                        :documentation "__hash__(b2DistanceJointDef self) -> long")
                        (reparse-symbol indented_block_body) [259862 259994])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [260013 260017]))                          )
                        (reparse-symbol indented_block_body) [260000 260055])
                    ("__update_length" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [260081 260085]))                          )
                        (reparse-symbol indented_block_body) [260061 260205])
                    ("__set_anchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [260227 260231])
                            ("value" variable nil (reparse-symbol function_parameters) [260233 260238]))                          )
                        (reparse-symbol indented_block_body) [260209 260404])
                    ("__set_anchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [260426 260430])
                            ("value" variable nil (reparse-symbol function_parameters) [260432 260437]))                          )
                        (reparse-symbol indented_block_body) [260408 260603])
                    ("__get_anchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [260625 260629]))                          )
                        (reparse-symbol indented_block_body) [260607 260765])
                    ("__get_anchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [260787 260791]))                          )
                        (reparse-symbol indented_block_body) [260769 260927])
                    ("anchorA" variable nil (reparse-symbol indented_block_body) [260932 261184])
                    ("anchorB" variable nil (reparse-symbol indented_block_body) [261189 261441])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [261447 261498]))                  
                :type "class")
                nil [258065 261499])
            ("b2DistanceJointDef" variable nil nil [261499 261613])
            ("b2DistanceJointDef" variable nil nil [261614 261724])
            ("b2DistanceJointDef_swigregister" variable nil nil [261725 261797])
            ("b2DistanceJointDef_swigregister" code nil nil [261798 261849])
            ("b2DistanceJoint" type
               (:documentation "A distance joint constrains two points on two bodies to remain at a fixed distance from each other. You can view this as a massless, rigid rod."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [262041 262144])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [262195 262241]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [262163 262167])
                            ("args" variable nil (reparse-symbol function_parameters) [262169 262174])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [262176 262184]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [262150 262242])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [262246 262267])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [262293 262297]))                          
                        :documentation "GetLocalAnchorA(b2DistanceJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [262273 262422])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [262448 262452]))                          
                        :documentation "GetLocalAnchorB(b2DistanceJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [262428 262577])
                    ("__SetLength" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [262599 262603])
                            ("length" variable nil (reparse-symbol function_parameters) [262605 262611]))                          
                        :documentation "
        __SetLength(b2DistanceJoint self, float32 length)

        Set/get the natural length. Manipulating the length can lead to non-physical behavior when the frequency is zero.
        ")
                        (reparse-symbol indented_block_body) [262583 262883])
                    ("__GetLength" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [262905 262909]))                          
                        :documentation "__GetLength(b2DistanceJoint self) -> float32")
                        (reparse-symbol indented_block_body) [262889 263027])
                    ("__SetFrequency" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [263052 263056])
                            ("hz" variable nil (reparse-symbol function_parameters) [263058 263060]))                          
                        :documentation "__SetFrequency(b2DistanceJoint self, float32 hz)")
                        (reparse-symbol indented_block_body) [263033 263189])
                    ("__GetFrequency" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [263214 263218]))                          
                        :documentation "__GetFrequency(b2DistanceJoint self) -> float32")
                        (reparse-symbol indented_block_body) [263195 263342])
                    ("__SetDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [263370 263374])
                            ("ratio" variable nil (reparse-symbol function_parameters) [263376 263381]))                          
                        :documentation "__SetDampingRatio(b2DistanceJoint self, float32 ratio)")
                        (reparse-symbol indented_block_body) [263348 263522])
                    ("__GetDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [263550 263554]))                          
                        :documentation "__GetDampingRatio(b2DistanceJoint self) -> float32")
                        (reparse-symbol indented_block_body) [263528 263684])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [263690 263711])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [263731 263735]))                          
                        :documentation "__hash__(b2DistanceJoint self) -> long")
                        (reparse-symbol indented_block_body) [263718 263844])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [263863 263867]))                          )
                        (reparse-symbol indented_block_body) [263850 263905])
                    ("length" variable nil (reparse-symbol indented_block_body) [263948 263991])
                    ("frequency" variable nil (reparse-symbol indented_block_body) [263996 264048])
                    ("dampingRatio" variable nil (reparse-symbol indented_block_body) [264053 264114])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [264121 264169]))                  
                :type "class")
                nil [261851 264170])
            ("b2DistanceJoint" variable nil nil [264170 264285])
            ("b2DistanceJoint" variable nil nil [264286 264401])
            ("b2DistanceJoint" variable nil nil [264402 264509])
            ("b2DistanceJoint" variable nil nil [264510 264617])
            ("b2DistanceJoint" variable nil nil [264618 264731])
            ("b2DistanceJoint" variable nil nil [264732 264845])
            ("b2DistanceJoint" variable nil nil [264846 264965])
            ("b2DistanceJoint" variable nil nil [264966 265085])
            ("b2DistanceJoint" variable nil nil [265086 265187])
            ("b2DistanceJoint_swigregister" variable nil nil [265188 265254])
            ("b2DistanceJoint_swigregister" code nil nil [265255 265300])
            ("b2FrictionJointDef" type
               (:documentation "Friction joint definition."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [265381 265484])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [265489 265510])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [265554 265626])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [265635 265672]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [265529 265533])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [265535 265543]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [265516 265673])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [265695 265699])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [265701 265706])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [265708 265713])
                            ("anchor" variable nil (reparse-symbol function_parameters) [265715 265721]))                          
                        :documentation "
        Initialize(b2FrictionJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 anchor)

        Initialize the bodies, anchors, axis, and reference angle using the world anchor and world axis.
        ")
                        (reparse-symbol indented_block_body) [265680 266021])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [266026 266143])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [266148 266265])
                    ("maxForce" variable nil (reparse-symbol indented_block_body) [266270 266375])
                    ("maxTorque" variable nil (reparse-symbol indented_block_body) [266380 266488])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [266494 266515])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [266535 266539]))                          
                        :documentation "__hash__(b2FrictionJointDef self) -> long")
                        (reparse-symbol indented_block_body) [266522 266654])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [266673 266677]))                          )
                        (reparse-symbol indented_block_body) [266660 266715])
                    ("__set_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [266738 266742])
                            ("value" variable nil (reparse-symbol function_parameters) [266744 266749]))                          )
                        (reparse-symbol indented_block_body) [266721 267016])
                    ("__get_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [267037 267041]))                          )
                        (reparse-symbol indented_block_body) [267020 267293])
                    ("anchor" variable nil (reparse-symbol indented_block_body) [267298 267593])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [267599 267650]))                  
                :type "class")
                nil [265302 267651])
            ("b2FrictionJointDef" variable nil nil [267651 267765])
            ("b2FrictionJointDef" variable nil nil [267766 267876])
            ("b2FrictionJointDef_swigregister" variable nil nil [267877 267949])
            ("b2FrictionJointDef_swigregister" code nil nil [267950 268001])
            ("b2FrictionJoint" type
               (:documentation "Friction joint. This is used for top-down friction. It provides 2D translational friction and angular friction."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [268161 268264])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [268315 268361]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [268283 268287])
                            ("args" variable nil (reparse-symbol function_parameters) [268289 268294])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [268296 268304]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [268270 268362])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [268366 268387])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [268413 268417]))                          
                        :documentation "GetLocalAnchorA(b2FrictionJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [268393 268542])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [268568 268572]))                          
                        :documentation "GetLocalAnchorB(b2FrictionJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [268548 268697])
                    ("__SetMaxForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [268721 268725])
                            ("force" variable nil (reparse-symbol function_parameters) [268727 268732]))                          
                        :documentation "
        __SetMaxForce(b2FrictionJoint self, float32 force)

        Set the maximum friction force in N.
        ")
                        (reparse-symbol indented_block_body) [268703 268929])
                    ("__GetMaxForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [268953 268957]))                          
                        :documentation "
        __GetMaxForce(b2FrictionJoint self) -> float32

        Get the maximum friction force in N.
        ")
                        (reparse-symbol indented_block_body) [268935 269143])
                    ("__SetMaxTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [269168 269172])
                            ("torque" variable nil (reparse-symbol function_parameters) [269174 269180]))                          
                        :documentation "
        __SetMaxTorque(b2FrictionJoint self, float32 torque)

        Set the maximum friction torque in N*m.
        ")
                        (reparse-symbol indented_block_body) [269149 269384])
                    ("__GetMaxTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [269409 269413]))                          
                        :documentation "
        __GetMaxTorque(b2FrictionJoint self) -> float32

        Get the maximum friction torque in N*m.
        ")
                        (reparse-symbol indented_block_body) [269390 269604])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [269610 269631])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [269651 269655]))                          
                        :documentation "__hash__(b2FrictionJoint self) -> long")
                        (reparse-symbol indented_block_body) [269638 269764])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [269783 269787]))                          )
                        (reparse-symbol indented_block_body) [269770 269825])
                    ("maxForce" variable nil (reparse-symbol indented_block_body) [269867 269916])
                    ("maxTorque" variable nil (reparse-symbol indented_block_body) [269921 269973])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [269979 270027]))                  
                :type "class")
                nil [268003 270028])
            ("b2FrictionJoint" variable nil nil [270028 270143])
            ("b2FrictionJoint" variable nil nil [270144 270259])
            ("b2FrictionJoint" variable nil nil [270260 270371])
            ("b2FrictionJoint" variable nil nil [270372 270483])
            ("b2FrictionJoint" variable nil nil [270484 270597])
            ("b2FrictionJoint" variable nil nil [270598 270711])
            ("b2FrictionJoint" variable nil nil [270712 270813])
            ("b2FrictionJoint_swigregister" variable nil nil [270814 270880])
            ("b2FrictionJoint_swigregister" code nil nil [270881 270926])
            ("b2GearJointDef" type
               (:documentation "Gear joint definition. This definition requires two existing revolute or prismatic joints (any combination will work). The provided joints must attach a dynamic body to a static body."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [271160 271263])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [271268 271289])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [271333 271397])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [271406 271434]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [271308 271312])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [271314 271322]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [271295 271435])
                    ("joint1" variable nil (reparse-symbol indented_block_body) [271441 271532])
                    ("joint2" variable nil (reparse-symbol indented_block_body) [271537 271628])
                    ("ratio" variable nil (reparse-symbol indented_block_body) [271633 271721])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [271727 271748])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [271768 271772]))                          
                        :documentation "__hash__(b2GearJointDef self) -> long")
                        (reparse-symbol indented_block_body) [271755 271879])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [271898 271902]))                          )
                        (reparse-symbol indented_block_body) [271885 271940])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [271945 271992]))                  
                :type "class")
                nil [270928 271993])
            ("b2GearJointDef" variable nil nil [271993 272091])
            ("b2GearJointDef_swigregister" variable nil nil [272092 272156])
            ("b2GearJointDef_swigregister" code nil nil [272157 272200])
            ("b2GearJoint" type
               (:documentation "
    A gear joint is used to connect two joints together. Either joint can be a revolute or prismatic joint. You specify a gear ratio to bind the motions together: coordinate1 + ratio * coordinate2 = constant The ratio can be negative or positive. If one joint is a revolute joint and the other joint is a prismatic joint, then the ratio will have units of length or units of 1/length. 
    WARNING: 
    The revolute and prismatic joints must be attached to fixed bodies (which must be body1 on those joints).
    "
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [272760 272863])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [272914 272960]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [272882 272886])
                            ("args" variable nil (reparse-symbol function_parameters) [272888 272893])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [272895 272903]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [272869 272961])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [272965 272986])
                    ("GetJoint1" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [273006 273010]))                          
                        :documentation "GetJoint1(b2GearJoint self) -> b2Joint")
                        (reparse-symbol indented_block_body) [272992 273116])
                    ("GetJoint2" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [273136 273140]))                          
                        :documentation "GetJoint2(b2GearJoint self) -> b2Joint")
                        (reparse-symbol indented_block_body) [273122 273246])
                    ("__SetRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [273267 273271])
                            ("ratio" variable nil (reparse-symbol function_parameters) [273273 273278]))                          
                        :documentation "
        __SetRatio(b2GearJoint self, float32 ratio)

        Set/Get the gear ratio.
        ")
                        (reparse-symbol indented_block_body) [273252 273448])
                    ("__GetRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [273469 273473]))                          
                        :documentation "__GetRatio(b2GearJoint self) -> float32")
                        (reparse-symbol indented_block_body) [273454 273581])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [273587 273608])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [273628 273632]))                          
                        :documentation "__hash__(b2GearJoint self) -> long")
                        (reparse-symbol indented_block_body) [273615 273733])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [273752 273756]))                          )
                        (reparse-symbol indented_block_body) [273739 273794])
                    ("ratio" variable nil (reparse-symbol indented_block_body) [273836 273876])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [273883 273927]))                  
                :type "class")
                nil [272202 273928])
            ("b2GearJoint" variable nil nil [273928 274019])
            ("b2GearJoint" variable nil nil [274020 274111])
            ("b2GearJoint" variable nil nil [274112 274205])
            ("b2GearJoint" variable nil nil [274206 274299])
            ("b2GearJoint" variable nil nil [274300 274389])
            ("b2GearJoint_swigregister" variable nil nil [274390 274448])
            ("b2GearJoint_swigregister" code nil nil [274449 274486])
            ("b2MotorJointDef" type
               (:documentation "Proxy of C++ b2MotorJointDef class"
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [274572 274675])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [274680 274701])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [274769 274835])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [274844 274907])
                            ("if" code nil (reparse-symbol indented_block_body) [274916 275033]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [274720 274724])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [274726 274731])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [274738 274743])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [274750 274758]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [274707 275033])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [275055 275059])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [275061 275066])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [275068 275073]))                          
                        :documentation "Initialize(b2MotorJointDef self, b2Body bodyA, b2Body bodyB)")
                        (reparse-symbol indented_block_body) [275040 275220])
                    ("linearOffset" variable nil (reparse-symbol indented_block_body) [275225 275336])
                    ("angularOffset" variable nil (reparse-symbol indented_block_body) [275341 275455])
                    ("maxForce" variable nil (reparse-symbol indented_block_body) [275460 275559])
                    ("maxTorque" variable nil (reparse-symbol indented_block_body) [275564 275666])
                    ("correctionFactor" variable nil (reparse-symbol indented_block_body) [275671 275794])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [275802 275850]))                  
                :type "class")
                nil [274488 275851])
            ("b2MotorJointDef" variable nil nil [275851 275956])
            ("b2MotorJointDef_swigregister" variable nil nil [275957 276023])
            ("b2MotorJointDef_swigregister" code nil nil [276024 276069])
            ("b2MotorJoint" type
               (:documentation "Proxy of C++ b2MotorJoint class"
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [276146 276249])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [276300 276346]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [276268 276272])
                            ("args" variable nil (reparse-symbol function_parameters) [276274 276279])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [276281 276289]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [276255 276347])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [276351 276372])
                    ("__SetLinearOffset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [276400 276404])
                            ("linearOffset" variable nil (reparse-symbol function_parameters) [276406 276418]))                          
                        :documentation "__SetLinearOffset(b2MotorJoint self, b2Vec2 linearOffset)")
                        (reparse-symbol indented_block_body) [276378 276566])
                    ("__GetLinearOffset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [276594 276598]))                          
                        :documentation "__GetLinearOffset(b2MotorJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [276572 276721])
                    ("__SetAngularOffset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [276750 276754])
                            ("angularOffset" variable nil (reparse-symbol function_parameters) [276756 276769]))                          
                        :documentation "__SetAngularOffset(b2MotorJoint self, float32 angularOffset)")
                        (reparse-symbol indented_block_body) [276727 276922])
                    ("__GetAngularOffset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [276951 276955]))                          
                        :documentation "__GetAngularOffset(b2MotorJoint self) -> float32")
                        (reparse-symbol indented_block_body) [276928 277081])
                    ("__SetMaxForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [277105 277109])
                            ("force" variable nil (reparse-symbol function_parameters) [277111 277116]))                          
                        :documentation "__SetMaxForce(b2MotorJoint self, float32 force)")
                        (reparse-symbol indented_block_body) [277087 277243])
                    ("__GetMaxForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [277267 277271]))                          
                        :documentation "__GetMaxForce(b2MotorJoint self) -> float32")
                        (reparse-symbol indented_block_body) [277249 277387])
                    ("__SetMaxTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [277412 277416])
                            ("torque" variable nil (reparse-symbol function_parameters) [277418 277424]))                          
                        :documentation "__SetMaxTorque(b2MotorJoint self, float32 torque)")
                        (reparse-symbol indented_block_body) [277393 277555])
                    ("__GetMaxTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [277580 277584]))                          
                        :documentation "__GetMaxTorque(b2MotorJoint self) -> float32")
                        (reparse-symbol indented_block_body) [277561 277702])
                    ("maxForce" variable nil (reparse-symbol indented_block_body) [277744 277793])
                    ("maxTorque" variable nil (reparse-symbol indented_block_body) [277798 277850])
                    ("linearOffset" variable nil (reparse-symbol indented_block_body) [277855 277916])
                    ("angularOffset" variable nil (reparse-symbol indented_block_body) [277921 277985])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [277992 278037]))                  
                :type "class")
                nil [276071 278038])
            ("b2MotorJoint" variable nil nil [278038 278148])
            ("b2MotorJoint" variable nil nil [278149 278259])
            ("b2MotorJoint" variable nil nil [278260 278372])
            ("b2MotorJoint" variable nil nil [278373 278485])
            ("b2MotorJoint" variable nil nil [278486 278588])
            ("b2MotorJoint" variable nil nil [278589 278691])
            ("b2MotorJoint" variable nil nil [278692 278796])
            ("b2MotorJoint" variable nil nil [278797 278901])
            ("b2MotorJoint_swigregister" variable nil nil [278902 278962])
            ("b2MotorJoint_swigregister" code nil nil [278963 279002])
            ("b2MouseJointDef" type
               (:documentation "Mouse joint definition. This requires a world target point, tuning parameters, and the time step."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [279151 279254])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [279259 279280])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [279324 279390])
                            ("_init_kwargs" code nil (reparse-symbol indented_block_body) [279399 279427]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [279299 279303])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [279305 279313]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [279286 279428])
                    ("target" variable nil (reparse-symbol indented_block_body) [279434 279527])
                    ("maxForce" variable nil (reparse-symbol indented_block_body) [279532 279631])
                    ("frequencyHz" variable nil (reparse-symbol indented_block_body) [279636 279744])
                    ("dampingRatio" variable nil (reparse-symbol indented_block_body) [279749 279860])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [279866 279887])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [279907 279911]))                          
                        :documentation "__hash__(b2MouseJointDef self) -> long")
                        (reparse-symbol indented_block_body) [279894 280020])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [280039 280043]))                          )
                        (reparse-symbol indented_block_body) [280026 280081])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [280086 280134]))                  
                :type "class")
                nil [279004 280135])
            ("b2MouseJointDef" variable nil nil [280135 280236])
            ("b2MouseJointDef_swigregister" variable nil nil [280237 280303])
            ("b2MouseJointDef_swigregister" code nil nil [280304 280349])
            ("b2MouseJoint" type
               (:documentation "A mouse joint is used to make a point on a body track a specified world point. This a soft constraint with a maximum force. This allows the constraint to stretch and without applying huge forces. NOTE: this joint is not documented in the manual because it was developed to be used in the testbed. If you want to learn how to use the mouse joint, look at the testbed."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [280761 280864])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [280915 280961]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [280883 280887])
                            ("args" variable nil (reparse-symbol function_parameters) [280889 280894])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [280896 280904]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [280870 280962])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [280966 280987])
                    ("__SetTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [281009 281013])
                            ("target" variable nil (reparse-symbol function_parameters) [281015 281021]))                          
                        :documentation "
        __SetTarget(b2MouseJoint self, b2Vec2 target)

        Use this to update the target point.
        ")
                        (reparse-symbol indented_block_body) [280993 281209])
                    ("__GetTarget" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [281231 281235]))                          
                        :documentation "__GetTarget(b2MouseJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [281215 281346])
                    ("__SetMaxForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [281370 281374])
                            ("force" variable nil (reparse-symbol function_parameters) [281376 281381]))                          
                        :documentation "
        __SetMaxForce(b2MouseJoint self, float32 force)

        Set/get the maximum force in Newtons.
        ")
                        (reparse-symbol indented_block_body) [281352 281573])
                    ("__GetMaxForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [281597 281601]))                          
                        :documentation "__GetMaxForce(b2MouseJoint self) -> float32")
                        (reparse-symbol indented_block_body) [281579 281717])
                    ("__SetFrequency" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [281742 281746])
                            ("hz" variable nil (reparse-symbol function_parameters) [281748 281750]))                          
                        :documentation "
        __SetFrequency(b2MouseJoint self, float32 hz)

        Set/get the frequency in Hertz.
        ")
                        (reparse-symbol indented_block_body) [281723 281932])
                    ("__GetFrequency" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [281957 281961]))                          
                        :documentation "__GetFrequency(b2MouseJoint self) -> float32")
                        (reparse-symbol indented_block_body) [281938 282079])
                    ("__SetDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [282107 282111])
                            ("ratio" variable nil (reparse-symbol function_parameters) [282113 282118]))                          
                        :documentation "
        __SetDampingRatio(b2MouseJoint self, float32 ratio)

        Set/get the damping ratio (dimensionless).
        ")
                        (reparse-symbol indented_block_body) [282085 282323])
                    ("__GetDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [282351 282355]))                          
                        :documentation "__GetDampingRatio(b2MouseJoint self) -> float32")
                        (reparse-symbol indented_block_body) [282329 282479])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [282485 282506])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [282526 282530]))                          
                        :documentation "__hash__(b2MouseJoint self) -> long")
                        (reparse-symbol indented_block_body) [282513 282633])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [282652 282656]))                          )
                        (reparse-symbol indented_block_body) [282639 282694])
                    ("maxForce" variable nil (reparse-symbol indented_block_body) [282737 282786])
                    ("frequency" variable nil (reparse-symbol indented_block_body) [282791 282843])
                    ("dampingRatio" variable nil (reparse-symbol indented_block_body) [282848 282909])
                    ("target" variable nil (reparse-symbol indented_block_body) [282914 282957])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [282964 283009]))                  
                :type "class")
                nil [280351 283010])
            ("b2MouseJoint" variable nil nil [283010 283108])
            ("b2MouseJoint" variable nil nil [283109 283207])
            ("b2MouseJoint" variable nil nil [283208 283310])
            ("b2MouseJoint" variable nil nil [283311 283413])
            ("b2MouseJoint" variable nil nil [283414 283518])
            ("b2MouseJoint" variable nil nil [283519 283623])
            ("b2MouseJoint" variable nil nil [283624 283734])
            ("b2MouseJoint" variable nil nil [283735 283845])
            ("b2MouseJoint" variable nil nil [283846 283938])
            ("b2MouseJoint_swigregister" variable nil nil [283939 283999])
            ("b2MouseJoint_swigregister" code nil nil [284000 284039])
            ("b2PrismaticJointDef" type
               (:documentation "
    Prismatic joint definition. This requires defining a line of motion using an axis and an anchor point. The definition uses local anchor points and a local axis so that the initial configuration can violate the constraint slightly. The joint translation is zero when the local anchor points coincide in world space. Using local anchors and a local axis helps when saving and loading a game. 
    WARNING: 
    at least one body should by dynamic with a non-fixed rotation.
    "
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [284576 284679])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [284684 284705])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [284749 284823])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [284832 284869])
                            ("if" code nil (reparse-symbol indented_block_body) [284878 285013]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [284724 284728])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [284730 284738]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [284711 285013])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [285035 285039])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [285041 285046])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [285048 285053])
                            ("anchor" variable nil (reparse-symbol function_parameters) [285055 285061])
                            ("axis" variable nil (reparse-symbol function_parameters) [285063 285067]))                          
                        :documentation "
        Initialize(b2PrismaticJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 anchor, b2Vec2 axis)

        Initialize the bodies, anchors, axis, and reference angle using the world anchor and world axis.
        ")
                        (reparse-symbol indented_block_body) [285020 285388])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [285393 285512])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [285517 285636])
                    ("localAxisA" variable nil (reparse-symbol indented_block_body) [285641 285754])
                    ("referenceAngle" variable nil (reparse-symbol indented_block_body) [285759 285884])
                    ("enableLimit" variable nil (reparse-symbol indented_block_body) [285889 286005])
                    ("lowerTranslation" variable nil (reparse-symbol indented_block_body) [286010 286141])
                    ("upperTranslation" variable nil (reparse-symbol indented_block_body) [286146 286277])
                    ("enableMotor" variable nil (reparse-symbol indented_block_body) [286282 286398])
                    ("maxMotorForce" variable nil (reparse-symbol indented_block_body) [286403 286525])
                    ("motorSpeed" variable nil (reparse-symbol indented_block_body) [286530 286643])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [286649 286670])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [286690 286694]))                          
                        :documentation "__hash__(b2PrismaticJointDef self) -> long")
                        (reparse-symbol indented_block_body) [286677 286811])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [286830 286834]))                          )
                        (reparse-symbol indented_block_body) [286817 286872])
                    ("__set_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [286895 286899])
                            ("value" variable nil (reparse-symbol function_parameters) [286901 286906]))                          )
                        (reparse-symbol indented_block_body) [286878 287173])
                    ("__get_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [287194 287198]))                          )
                        (reparse-symbol indented_block_body) [287177 287450])
                    ("__set_axis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [287469 287473])
                            ("value" variable nil (reparse-symbol function_parameters) [287475 287480]))                          )
                        (reparse-symbol indented_block_body) [287454 287614])
                    ("__get_axis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [287633 287637]))                          )
                        (reparse-symbol indented_block_body) [287618 287799])
                    ("anchor" variable nil (reparse-symbol indented_block_body) [287804 288099])
                    ("axis" variable nil (reparse-symbol indented_block_body) [288104 288339])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [288345 288397]))                  
                :type "class")
                nil [284041 288398])
            ("b2PrismaticJointDef" variable nil nil [288398 288515])
            ("b2PrismaticJointDef" variable nil nil [288516 288629])
            ("b2PrismaticJointDef_swigregister" variable nil nil [288630 288704])
            ("b2PrismaticJointDef_swigregister" code nil nil [288705 288758])
            ("b2PrismaticJoint" type
               (:documentation "A prismatic joint. This joint provides one degree of freedom: translation along an axis fixed in body1. Relative rotation is prevented. You can use a joint limit to restrict the range of motion and a joint motor to drive the motion or to model joint friction."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [289067 289170])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [289221 289267]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [289189 289193])
                            ("args" variable nil (reparse-symbol function_parameters) [289195 289200])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [289202 289210]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [289176 289268])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [289272 289293])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [289319 289323]))                          
                        :documentation "GetLocalAnchorA(b2PrismaticJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [289299 289450])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [289476 289480]))                          
                        :documentation "GetLocalAnchorB(b2PrismaticJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [289456 289607])
                    ("GetLocalAxisA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [289631 289635]))                          
                        :documentation "GetLocalAxisA(b2PrismaticJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [289613 289758])
                    ("GetReferenceAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [289786 289790]))                          
                        :documentation "GetReferenceAngle(b2PrismaticJoint self) -> float32")
                        (reparse-symbol indented_block_body) [289764 289922])
                    ("__GetJointTranslation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [289954 289958]))                          
                        :documentation "
        __GetJointTranslation(b2PrismaticJoint self) -> float32

        Get the current joint translation, usually in meters.
        ")
                        (reparse-symbol indented_block_body) [289928 290179])
                    ("__GetJointSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [290205 290209]))                          
                        :documentation "
        __GetJointSpeed(b2PrismaticJoint self) -> float32

        Get the current joint translation speed, usually in meters per second.
        ")
                        (reparse-symbol indented_block_body) [290185 290435])
                    ("__IsLimitEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [290462 290466]))                          
                        :documentation "
        __IsLimitEnabled(b2PrismaticJoint self) -> bool

        Is the joint limit enabled?
        ")
                        (reparse-symbol indented_block_body) [290441 290648])
                    ("__EnableLimit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [290672 290676])
                            ("flag" variable nil (reparse-symbol function_parameters) [290678 290682]))                          
                        :documentation "
        __EnableLimit(b2PrismaticJoint self, bool flag)

        Enable/disable the joint limit.
        ")
                        (reparse-symbol indented_block_body) [290654 290871])
                    ("__GetLowerLimit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [290897 290901]))                          
                        :documentation "
        __GetLowerLimit(b2PrismaticJoint self) -> float32

        Get the lower joint limit, usually in meters.
        ")
                        (reparse-symbol indented_block_body) [290877 291102])
                    ("__GetUpperLimit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [291128 291132]))                          
                        :documentation "
        __GetUpperLimit(b2PrismaticJoint self) -> float32

        Get the upper joint limit, usually in meters.
        ")
                        (reparse-symbol indented_block_body) [291108 291333])
                    ("SetLimits" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [291353 291357])
                            ("lower" variable nil (reparse-symbol function_parameters) [291359 291364])
                            ("upper" variable nil (reparse-symbol function_parameters) [291366 291371]))                          
                        :documentation "
        SetLimits(b2PrismaticJoint self, float32 lower, float32 upper)

        Set the joint limits, usually in meters.
        ")
                        (reparse-symbol indented_block_body) [291339 291588])
                    ("__IsMotorEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [291615 291619]))                          
                        :documentation "
        __IsMotorEnabled(b2PrismaticJoint self) -> bool

        Is the joint motor enabled?
        ")
                        (reparse-symbol indented_block_body) [291594 291801])
                    ("__EnableMotor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [291825 291829])
                            ("flag" variable nil (reparse-symbol function_parameters) [291831 291835]))                          
                        :documentation "
        __EnableMotor(b2PrismaticJoint self, bool flag)

        Enable/disable the joint motor.
        ")
                        (reparse-symbol indented_block_body) [291807 292024])
                    ("__SetMotorSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [292050 292054])
                            ("speed" variable nil (reparse-symbol function_parameters) [292056 292061]))                          
                        :documentation "
        __SetMotorSpeed(b2PrismaticJoint self, float32 speed)

        Set the motor speed, usually in meters per second.
        ")
                        (reparse-symbol indented_block_body) [292030 292278])
                    ("__GetMotorSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [292304 292308]))                          
                        :documentation "
        __GetMotorSpeed(b2PrismaticJoint self) -> float32

        Get the motor speed, usually in meters per second.
        ")
                        (reparse-symbol indented_block_body) [292284 292514])
                    ("__SetMaxMotorForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [292543 292547])
                            ("force" variable nil (reparse-symbol function_parameters) [292549 292554]))                          
                        :documentation "
        __SetMaxMotorForce(b2PrismaticJoint self, float32 force)

        Set the maximum motor force, usually in N.
        ")
                        (reparse-symbol indented_block_body) [292520 292769])
                    ("__GetMaxMotorForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [292798 292802]))                          
                        :documentation "__GetMaxMotorForce(b2PrismaticJoint self) -> float32")
                        (reparse-symbol indented_block_body) [292775 292936])
                    ("GetMotorForce" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [292960 292964])
                            ("inv_dt" variable nil (reparse-symbol function_parameters) [292966 292972]))                          
                        :documentation "
        GetMotorForce(b2PrismaticJoint self, float32 inv_dt) -> float32

        Get the current motor force given the inverse time step, usually in N.
        ")
                        (reparse-symbol indented_block_body) [292942 293218])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [293224 293245])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [293265 293269]))                          
                        :documentation "__hash__(b2PrismaticJoint self) -> long")
                        (reparse-symbol indented_block_body) [293252 293380])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [293399 293403]))                          )
                        (reparse-symbol indented_block_body) [293386 293441])
                    ("motorSpeed" variable nil (reparse-symbol indented_block_body) [293484 293539])
                    ("motorEnabled" variable nil (reparse-symbol indented_block_body) [293544 293600])
                    ("limitEnabled" variable nil (reparse-symbol indented_block_body) [293605 293661])
                    ("upperLimit" variable nil (reparse-symbol indented_block_body) [293666 293756])
                    ("lowerLimit" variable nil (reparse-symbol indented_block_body) [293761 293851])
                    ("limits" variable nil (reparse-symbol indented_block_body) [293856 293959])
                    ("maxMotorForce" variable nil (reparse-symbol indented_block_body) [293964 294028])
                    ("translation" variable nil (reparse-symbol indented_block_body) [294050 294101])
                    ("speed" variable nil (reparse-symbol indented_block_body) [294106 294145])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [294152 294201]))                  
                :type "class")
                nil [288760 294202])
            ("b2PrismaticJoint" variable nil nil [294202 294320])
            ("b2PrismaticJoint" variable nil nil [294321 294439])
            ("b2PrismaticJoint" variable nil nil [294440 294554])
            ("b2PrismaticJoint" variable nil nil [294555 294677])
            ("b2PrismaticJoint" variable nil nil [294678 294808])
            ("b2PrismaticJoint" variable nil nil [294809 294927])
            ("b2PrismaticJoint" variable nil nil [294928 295048])
            ("b2PrismaticJoint" variable nil nil [295049 295163])
            ("b2PrismaticJoint" variable nil nil [295164 295282])
            ("b2PrismaticJoint" variable nil nil [295283 295401])
            ("b2PrismaticJoint" variable nil nil [295402 295508])
            ("b2PrismaticJoint" variable nil nil [295509 295629])
            ("b2PrismaticJoint" variable nil nil [295630 295744])
            ("b2PrismaticJoint" variable nil nil [295745 295863])
            ("b2PrismaticJoint" variable nil nil [295864 295982])
            ("b2PrismaticJoint" variable nil nil [295983 296107])
            ("b2PrismaticJoint" variable nil nil [296108 296232])
            ("b2PrismaticJoint" variable nil nil [296233 296347])
            ("b2PrismaticJoint" variable nil nil [296348 296452])
            ("b2PrismaticJoint_swigregister" variable nil nil [296453 296521])
            ("b2PrismaticJoint_swigregister" code nil nil [296522 296569])
            ("b2PulleyJointDef" type
               (:documentation "Pulley joint definition. This requires two ground anchors, two dynamic body anchor points, max lengths for each side, and a pulley ratio."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [296759 296862])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [296867 296888])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [296932 297000])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [297009 297046])
                            ("self" code nil (reparse-symbol indented_block_body) [297055 297085]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [296907 296911])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [296913 296921]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [296894 297086])
                    ("__init_pulley__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [297111 297115])
                            ("anchorA" variable nil (reparse-symbol function_parameters) [297117 297124])
                            ("anchorB" variable nil (reparse-symbol function_parameters) [297131 297138])
                            ("lengthA" variable nil (reparse-symbol function_parameters) [297145 297152])
                            ("lengthB" variable nil (reparse-symbol function_parameters) [297159 297166])
                            ("groundAnchorA" variable nil (reparse-symbol function_parameters) [297173 297186])
                            ("groundAnchorB" variable nil (reparse-symbol function_parameters) [297193 297206])
                            ("maxLengthA" variable nil (reparse-symbol function_parameters) [297213 297223])
                            ("maxLengthB" variable nil (reparse-symbol function_parameters) [297230 297240])
                            ("ratio" variable nil (reparse-symbol function_parameters) [297247 297252])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [297259 297267]))                          )
                        (reparse-symbol indented_block_body) [297091 298504])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [298526 298530])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [298532 298537])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [298539 298544])
                            ("groundAnchorA" variable nil (reparse-symbol function_parameters) [298546 298559])
                            ("groundAnchorB" variable nil (reparse-symbol function_parameters) [298561 298574])
                            ("anchorA" variable nil (reparse-symbol function_parameters) [298576 298583])
                            ("anchorB" variable nil (reparse-symbol function_parameters) [298585 298592])
                            ("ratio" variable nil (reparse-symbol function_parameters) [298594 298599]))                          
                        :documentation "
        Initialize(b2PulleyJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 groundAnchorA, b2Vec2 groundAnchorB, b2Vec2 anchorA, b2Vec2 anchorB, float32 ratio)

        Initialize the bodies, anchors, lengths, max lengths, and ratio using the world anchors.
        ")
                        (reparse-symbol indented_block_body) [298511 299010])
                    ("groundAnchorA" variable nil (reparse-symbol indented_block_body) [299015 299131])
                    ("groundAnchorB" variable nil (reparse-symbol indented_block_body) [299136 299252])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [299257 299370])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [299375 299488])
                    ("lengthA" variable nil (reparse-symbol indented_block_body) [299493 299591])
                    ("lengthB" variable nil (reparse-symbol indented_block_body) [299596 299694])
                    ("ratio" variable nil (reparse-symbol indented_block_body) [299699 299791])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [299797 299818])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [299838 299842]))                          
                        :documentation "__hash__(b2PulleyJointDef self) -> long")
                        (reparse-symbol indented_block_body) [299825 299953])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [299972 299976]))                          )
                        (reparse-symbol indented_block_body) [299959 300014])
                    ("__update_length" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [300040 300044]))                          )
                        (reparse-symbol indented_block_body) [300020 300269])
                    ("__set_anchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [300291 300295])
                            ("value" variable nil (reparse-symbol function_parameters) [300297 300302]))                          )
                        (reparse-symbol indented_block_body) [300273 300468])
                    ("__set_anchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [300490 300494])
                            ("value" variable nil (reparse-symbol function_parameters) [300496 300501]))                          )
                        (reparse-symbol indented_block_body) [300472 300667])
                    ("__get_anchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [300689 300693]))                          )
                        (reparse-symbol indented_block_body) [300671 300829])
                    ("__get_anchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [300851 300855]))                          )
                        (reparse-symbol indented_block_body) [300833 300991])
                    ("anchorA" variable nil (reparse-symbol indented_block_body) [300996 301248])
                    ("anchorB" variable nil (reparse-symbol indented_block_body) [301253 301505])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [301511 301560]))                  
                :type "class")
                nil [296571 301561])
            ("b2PulleyJointDef" variable nil nil [301561 301669])
            ("b2PulleyJointDef" variable nil nil [301670 301774])
            ("b2PulleyJointDef_swigregister" variable nil nil [301775 301843])
            ("b2PulleyJointDef_swigregister" code nil nil [301844 301891])
            ("b2_minPulleyLength" variable nil nil [301892 301941])
            ("b2PulleyJoint" type
               (:documentation "The pulley joint is connected to two bodies and two fixed ground points. The pulley supports a ratio such that: length1 + ratio * length2 <= constant Yes, the force transmitted is scaled by the ratio. The pulley also enforces a maximum length limit on both sides. This is useful to prevent one side of the pulley hitting the top."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [302317 302420])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [302471 302517]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [302439 302443])
                            ("args" variable nil (reparse-symbol function_parameters) [302445 302450])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [302452 302460]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [302426 302518])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [302522 302543])
                    ("__GetGroundAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [302572 302576]))                          
                        :documentation "
        __GetGroundAnchorA(b2PulleyJoint self) -> b2Vec2

        Get the first ground anchor.
        ")
                        (reparse-symbol indented_block_body) [302549 302759])
                    ("__GetGroundAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [302788 302792]))                          
                        :documentation "
        __GetGroundAnchorB(b2PulleyJoint self) -> b2Vec2

        Get the second ground anchor.
        ")
                        (reparse-symbol indented_block_body) [302765 302976])
                    ("__GetLengthA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [302999 303003]))                          
                        :documentation "__GetLengthA(b2PulleyJoint self) -> float32")
                        (reparse-symbol indented_block_body) [302982 303119])
                    ("__GetLengthB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [303142 303146]))                          
                        :documentation "__GetLengthB(b2PulleyJoint self) -> float32")
                        (reparse-symbol indented_block_body) [303125 303262])
                    ("__GetRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [303283 303287]))                          
                        :documentation "
        __GetRatio(b2PulleyJoint self) -> float32

        Get the pulley ratio.
        ")
                        (reparse-symbol indented_block_body) [303268 303448])
                    ("GetCurrentLengthA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [303476 303480]))                          
                        :documentation "GetCurrentLengthA(b2PulleyJoint self) -> float32")
                        (reparse-symbol indented_block_body) [303454 303606])
                    ("GetCurrentLengthB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [303634 303638]))                          
                        :documentation "GetCurrentLengthB(b2PulleyJoint self) -> float32")
                        (reparse-symbol indented_block_body) [303612 303764])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [303770 303791])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [303811 303815]))                          
                        :documentation "__hash__(b2PulleyJoint self) -> long")
                        (reparse-symbol indented_block_body) [303798 303920])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [303939 303943]))                          )
                        (reparse-symbol indented_block_body) [303926 303981])
                    ("groundAnchorB" variable nil (reparse-symbol indented_block_body) [304012 304062])
                    ("groundAnchorA" variable nil (reparse-symbol indented_block_body) [304067 304117])
                    ("ratio" variable nil (reparse-symbol indented_block_body) [304122 304156])
                    ("lengthB" variable nil (reparse-symbol indented_block_body) [304161 304209])
                    ("lengthA" variable nil (reparse-symbol indented_block_body) [304214 304262])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [304269 304315]))                  
                :type "class")
                nil [301943 304316])
            ("b2PulleyJoint" variable nil nil [304316 304431])
            ("b2PulleyJoint" variable nil nil [304432 304547])
            ("b2PulleyJoint" variable nil nil [304548 304651])
            ("b2PulleyJoint" variable nil nil [304652 304755])
            ("b2PulleyJoint" variable nil nil [304756 304855])
            ("b2PulleyJoint" variable nil nil [304856 304969])
            ("b2PulleyJoint" variable nil nil [304970 305083])
            ("b2PulleyJoint" variable nil nil [305084 305179])
            ("b2PulleyJoint_swigregister" variable nil nil [305180 305242])
            ("b2PulleyJoint_swigregister" code nil nil [305243 305284])
            ("b2RevoluteJointDef" type
               (:documentation "Revolute joint definition. This requires defining an anchor point where the bodies are joined. The definition uses local anchor points so that the initial configuration can violate the constraint slightly. You also need to specify the initial relative angle for joint limits. This helps when saving and loading a game. The local anchor points are measured from the body's origin rather than the center of mass because: 1. you might not know where the center of mass will be. 2. if you add/remove shapes from a body and recompute the mass, the joints will be broken."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [305904 306007])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [306012 306033])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [306077 306149])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [306158 306195])
                            ("if" code nil (reparse-symbol indented_block_body) [306204 306339]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [306052 306056])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [306058 306066]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [306039 306339])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [306361 306365])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [306367 306372])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [306374 306379])
                            ("anchor" variable nil (reparse-symbol function_parameters) [306381 306387]))                          
                        :documentation "
        Initialize(b2RevoluteJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 anchor)

        Initialize the bodies, anchors, and reference angle using a world anchor point.
        ")
                        (reparse-symbol indented_block_body) [306346 306670])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [306675 306792])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [306797 306914])
                    ("referenceAngle" variable nil (reparse-symbol indented_block_body) [306919 307042])
                    ("enableLimit" variable nil (reparse-symbol indented_block_body) [307047 307161])
                    ("lowerAngle" variable nil (reparse-symbol indented_block_body) [307166 307277])
                    ("upperAngle" variable nil (reparse-symbol indented_block_body) [307282 307393])
                    ("enableMotor" variable nil (reparse-symbol indented_block_body) [307398 307512])
                    ("motorSpeed" variable nil (reparse-symbol indented_block_body) [307517 307628])
                    ("maxMotorTorque" variable nil (reparse-symbol indented_block_body) [307633 307756])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [307762 307783])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [307803 307807]))                          
                        :documentation "__hash__(b2RevoluteJointDef self) -> long")
                        (reparse-symbol indented_block_body) [307790 307922])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [307941 307945]))                          )
                        (reparse-symbol indented_block_body) [307928 307983])
                    ("__set_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [308006 308010])
                            ("value" variable nil (reparse-symbol function_parameters) [308012 308017]))                          )
                        (reparse-symbol indented_block_body) [307989 308284])
                    ("__get_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [308305 308309]))                          )
                        (reparse-symbol indented_block_body) [308288 308561])
                    ("anchor" variable nil (reparse-symbol indented_block_body) [308565 308860])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [308866 308917]))                  
                :type "class")
                nil [305286 308918])
            ("b2RevoluteJointDef" variable nil nil [308918 309032])
            ("b2RevoluteJointDef" variable nil nil [309033 309143])
            ("b2RevoluteJointDef_swigregister" variable nil nil [309144 309216])
            ("b2RevoluteJointDef_swigregister" code nil nil [309217 309268])
            ("b2RevoluteJoint" type
               (:documentation "A revolute joint constrains two bodies to share a common point while they are free to rotate about the point. The relative rotation about the shared point is the joint angle. You can limit the relative rotation with a joint limit that specifies a lower and upper angle. You can use a motor to drive the relative rotation about the shared point. A maximum motor torque is provided so that infinite forces are not generated."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [309739 309842])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [309893 309939]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [309861 309865])
                            ("args" variable nil (reparse-symbol function_parameters) [309867 309872])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [309874 309882]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [309848 309940])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [309944 309965])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [309991 309995]))                          
                        :documentation "GetLocalAnchorA(b2RevoluteJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [309971 310120])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [310146 310150]))                          
                        :documentation "GetLocalAnchorB(b2RevoluteJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [310126 310275])
                    ("GetReferenceAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [310303 310307]))                          
                        :documentation "GetReferenceAngle(b2RevoluteJoint self) -> float32")
                        (reparse-symbol indented_block_body) [310281 310437])
                    ("__GetJointAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [310463 310467]))                          
                        :documentation "
        __GetJointAngle(b2RevoluteJoint self) -> float32

        Get the current joint angle in radians.
        ")
                        (reparse-symbol indented_block_body) [310443 310660])
                    ("__GetJointSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [310686 310690]))                          
                        :documentation "
        __GetJointSpeed(b2RevoluteJoint self) -> float32

        Get the current joint angle speed in radians per second.
        ")
                        (reparse-symbol indented_block_body) [310666 310900])
                    ("__IsLimitEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [310927 310931]))                          
                        :documentation "
        __IsLimitEnabled(b2RevoluteJoint self) -> bool

        Is the joint limit enabled?
        ")
                        (reparse-symbol indented_block_body) [310906 311111])
                    ("__EnableLimit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [311135 311139])
                            ("flag" variable nil (reparse-symbol function_parameters) [311141 311145]))                          
                        :documentation "
        __EnableLimit(b2RevoluteJoint self, bool flag)

        Enable/disable the joint limit.
        ")
                        (reparse-symbol indented_block_body) [311117 311332])
                    ("__GetLowerLimit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [311358 311362]))                          
                        :documentation "
        __GetLowerLimit(b2RevoluteJoint self) -> float32

        Get the lower joint limit in radians.
        ")
                        (reparse-symbol indented_block_body) [311338 311553])
                    ("__GetUpperLimit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [311579 311583]))                          
                        :documentation "
        __GetUpperLimit(b2RevoluteJoint self) -> float32

        Get the upper joint limit in radians.
        ")
                        (reparse-symbol indented_block_body) [311559 311774])
                    ("SetLimits" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [311794 311798])
                            ("lower" variable nil (reparse-symbol function_parameters) [311800 311805])
                            ("upper" variable nil (reparse-symbol function_parameters) [311807 311812]))                          
                        :documentation "
        SetLimits(b2RevoluteJoint self, float32 lower, float32 upper)

        Set the joint limits in radians.
        ")
                        (reparse-symbol indented_block_body) [311780 312019])
                    ("__IsMotorEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [312046 312050]))                          
                        :documentation "
        __IsMotorEnabled(b2RevoluteJoint self) -> bool

        Is the joint motor enabled?
        ")
                        (reparse-symbol indented_block_body) [312025 312230])
                    ("__EnableMotor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [312254 312258])
                            ("flag" variable nil (reparse-symbol function_parameters) [312260 312264]))                          
                        :documentation "
        __EnableMotor(b2RevoluteJoint self, bool flag)

        Enable/disable the joint motor.
        ")
                        (reparse-symbol indented_block_body) [312236 312451])
                    ("__SetMotorSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [312477 312481])
                            ("speed" variable nil (reparse-symbol function_parameters) [312483 312488]))                          
                        :documentation "
        __SetMotorSpeed(b2RevoluteJoint self, float32 speed)

        Set the motor speed in radians per second.
        ")
                        (reparse-symbol indented_block_body) [312457 312695])
                    ("__GetMotorSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [312721 312725]))                          
                        :documentation "
        __GetMotorSpeed(b2RevoluteJoint self) -> float32

        Get the motor speed in radians per second.
        ")
                        (reparse-symbol indented_block_body) [312701 312921])
                    ("__SetMaxMotorTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [312951 312955])
                            ("torque" variable nil (reparse-symbol function_parameters) [312957 312963]))                          
                        :documentation "
        __SetMaxMotorTorque(b2RevoluteJoint self, float32 torque)

        Set the maximum motor torque, usually in N-m.
        ")
                        (reparse-symbol indented_block_body) [312927 313183])
                    ("GetMaxMotorTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [313211 313215]))                          
                        :documentation "GetMaxMotorTorque(b2RevoluteJoint self) -> float32")
                        (reparse-symbol indented_block_body) [313189 313345])
                    ("GetMotorTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [313370 313374])
                            ("inv_dt" variable nil (reparse-symbol function_parameters) [313376 313382]))                          
                        :documentation "
        GetMotorTorque(b2RevoluteJoint self, float32 inv_dt) -> float32

        Get the current motor torque given the inverse time step. Unit is N*m.
        ")
                        (reparse-symbol indented_block_body) [313351 313628])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [313634 313655])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [313675 313679]))                          
                        :documentation "__hash__(b2RevoluteJoint self) -> long")
                        (reparse-symbol indented_block_body) [313662 313788])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [313807 313811]))                          )
                        (reparse-symbol indented_block_body) [313794 313849])
                    ("motorSpeed" variable nil (reparse-symbol indented_block_body) [313892 313947])
                    ("upperLimit" variable nil (reparse-symbol indented_block_body) [313952 314042])
                    ("lowerLimit" variable nil (reparse-symbol indented_block_body) [314047 314137])
                    ("limits" variable nil (reparse-symbol indented_block_body) [314142 314245])
                    ("motorEnabled" variable nil (reparse-symbol indented_block_body) [314250 314306])
                    ("limitEnabled" variable nil (reparse-symbol indented_block_body) [314311 314367])
                    ("angle" variable nil (reparse-symbol indented_block_body) [314389 314428])
                    ("speed" variable nil (reparse-symbol indented_block_body) [314433 314472])
                    ("maxMotorTorque" variable nil (reparse-symbol indented_block_body) [314495 314547])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [314554 314602]))                  
                :type "class")
                nil [309270 314603])
            ("b2RevoluteJoint" variable nil nil [314603 314718])
            ("b2RevoluteJoint" variable nil nil [314719 314834])
            ("b2RevoluteJoint" variable nil nil [314835 314954])
            ("b2RevoluteJoint" variable nil nil [314955 315070])
            ("b2RevoluteJoint" variable nil nil [315071 315186])
            ("b2RevoluteJoint" variable nil nil [315187 315304])
            ("b2RevoluteJoint" variable nil nil [315305 315416])
            ("b2RevoluteJoint" variable nil nil [315417 315532])
            ("b2RevoluteJoint" variable nil nil [315533 315648])
            ("b2RevoluteJoint" variable nil nil [315649 315752])
            ("b2RevoluteJoint" variable nil nil [315753 315870])
            ("b2RevoluteJoint" variable nil nil [315871 315982])
            ("b2RevoluteJoint" variable nil nil [315983 316098])
            ("b2RevoluteJoint" variable nil nil [316099 316214])
            ("b2RevoluteJoint" variable nil nil [316215 316338])
            ("b2RevoluteJoint" variable nil nil [316339 316458])
            ("b2RevoluteJoint" variable nil nil [316459 316572])
            ("b2RevoluteJoint" variable nil nil [316573 316674])
            ("b2RevoluteJoint_swigregister" variable nil nil [316675 316741])
            ("b2RevoluteJoint_swigregister" code nil nil [316742 316787])
            ("b2RopeJointDef" type
               (:documentation "Rope joint definition. This requires two body anchor points and a maximum lengths. Note: by default the connected objects will not collide. see collideConnected in  b2JointDef."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [317014 317117])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [317122 317143])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [317187 317251])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [317260 317297]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [317162 317166])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [317168 317176]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [317149 317298])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [317304 317413])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [317418 317527])
                    ("maxLength" variable nil (reparse-symbol indented_block_body) [317532 317632])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [317638 317659])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [317679 317683]))                          
                        :documentation "__hash__(b2RopeJointDef self) -> long")
                        (reparse-symbol indented_block_body) [317666 317790])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [317809 317813]))                          )
                        (reparse-symbol indented_block_body) [317796 317851])
                    ("__set_anchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [317875 317879])
                            ("value" variable nil (reparse-symbol function_parameters) [317881 317886]))                          )
                        (reparse-symbol indented_block_body) [317857 318021])
                    ("__set_anchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [318043 318047])
                            ("value" variable nil (reparse-symbol function_parameters) [318049 318054]))                          )
                        (reparse-symbol indented_block_body) [318025 318189])
                    ("__get_anchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [318211 318215]))                          )
                        (reparse-symbol indented_block_body) [318193 318351])
                    ("__get_anchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [318373 318377]))                          )
                        (reparse-symbol indented_block_body) [318355 318513])
                    ("anchorA" variable nil (reparse-symbol indented_block_body) [318518 318770])
                    ("anchorB" variable nil (reparse-symbol indented_block_body) [318775 319027])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [319033 319080]))                  
                :type "class")
                nil [316789 319081])
            ("b2RopeJointDef" variable nil nil [319081 319179])
            ("b2RopeJointDef_swigregister" variable nil nil [319180 319244])
            ("b2RopeJointDef_swigregister" code nil nil [319245 319288])
            ("b2RopeJoint" type
               (:documentation "A rope joint enforces a maximum distance between two points on two bodies. It has no other effect. Warning: if you attempt to change the maximum length during the simulation you will get some non-physical behavior. A model that would allow you to dynamically modify the length would have some sponginess, so I chose not to implement it that way. See  b2DistanceJointif you want to dynamically control length."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [319741 319844])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [319895 319941]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [319863 319867])
                            ("args" variable nil (reparse-symbol function_parameters) [319869 319874])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [319876 319884]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [319850 319942])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [319946 319967])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [319993 319997]))                          
                        :documentation "GetLocalAnchorA(b2RopeJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [319973 320114])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [320140 320144]))                          
                        :documentation "GetLocalAnchorB(b2RopeJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [320120 320261])
                    ("SetMaxLength" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [320284 320288])
                            ("length" variable nil (reparse-symbol function_parameters) [320290 320296]))                          
                        :documentation "SetMaxLength(b2RopeJoint self, float32 length)")
                        (reparse-symbol indented_block_body) [320267 320421])
                    ("__GetMaxLength" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [320446 320450]))                          
                        :documentation "
        __GetMaxLength(b2RopeJoint self) -> float32

        Get the maximum length of the rope.
        ")
                        (reparse-symbol indented_block_body) [320427 320629])
                    ("__GetLimitState" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [320655 320659]))                          
                        :documentation "__GetLimitState(b2RopeJoint self) -> b2LimitState")
                        (reparse-symbol indented_block_body) [320635 320782])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [320788 320809])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [320829 320833]))                          
                        :documentation "__hash__(b2RopeJoint self) -> long")
                        (reparse-symbol indented_block_body) [320816 320934])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [320953 320957]))                          )
                        (reparse-symbol indented_block_body) [320940 320995])
                    ("maxLength" variable nil (reparse-symbol indented_block_body) [321037 321079])
                    ("limitState" variable nil (reparse-symbol indented_block_body) [321084 321128])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [321164 321208]))                  
                :type "class")
                nil [319290 321209])
            ("b2RopeJoint" variable nil nil [321209 321312])
            ("b2RopeJoint" variable nil nil [321313 321416])
            ("b2RopeJoint" variable nil nil [321417 321514])
            ("b2RopeJoint" variable nil nil [321515 321616])
            ("b2RopeJoint" variable nil nil [321617 321720])
            ("b2RopeJoint" variable nil nil [321721 321810])
            ("b2RopeJoint_swigregister" variable nil nil [321811 321869])
            ("b2RopeJoint_swigregister" code nil nil [321870 321907])
            ("b2WeldJointDef" type
               (:documentation "Weld joint definition. You need to specify local anchor points where they are attached and the relative body angle. The position of the anchor points is important for computing the reaction torque."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [322155 322258])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [322263 322284])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [322328 322392])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [322401 322438])
                            ("if" code nil (reparse-symbol indented_block_body) [322447 322582]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [322303 322307])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [322309 322317]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [322290 322582])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [322604 322608])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [322610 322615])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [322617 322622])
                            ("anchor" variable nil (reparse-symbol function_parameters) [322624 322630]))                          
                        :documentation "
        Initialize(b2WeldJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 anchor)

        Initialize the bodies, anchors, and reference angle using a world anchor point.
        ")
                        (reparse-symbol indented_block_body) [322589 322905])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [322910 323019])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [323024 323133])
                    ("referenceAngle" variable nil (reparse-symbol indented_block_body) [323138 323253])
                    ("frequencyHz" variable nil (reparse-symbol indented_block_body) [323258 323364])
                    ("dampingRatio" variable nil (reparse-symbol indented_block_body) [323369 323478])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [323484 323505])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [323525 323529]))                          
                        :documentation "__hash__(b2WeldJointDef self) -> long")
                        (reparse-symbol indented_block_body) [323512 323636])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [323655 323659]))                          )
                        (reparse-symbol indented_block_body) [323642 323697])
                    ("__set_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [323720 323724])
                            ("value" variable nil (reparse-symbol function_parameters) [323726 323731]))                          )
                        (reparse-symbol indented_block_body) [323703 323998])
                    ("__get_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [324019 324023]))                          )
                        (reparse-symbol indented_block_body) [324002 324275])
                    ("anchor" variable nil (reparse-symbol indented_block_body) [324279 324574])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [324580 324627]))                  
                :type "class")
                nil [321909 324628])
            ("b2WeldJointDef" variable nil nil [324628 324730])
            ("b2WeldJointDef" variable nil nil [324731 324829])
            ("b2WeldJointDef_swigregister" variable nil nil [324830 324894])
            ("b2WeldJointDef_swigregister" code nil nil [324895 324938])
            ("b2WeldJoint" type
               (:documentation "A weld joint essentially glues two bodies together. A weld joint may distort somewhat because the island constraint solver is approximate."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [325121 325224])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [325275 325321]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [325243 325247])
                            ("args" variable nil (reparse-symbol function_parameters) [325249 325254])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [325256 325264]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [325230 325322])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [325326 325347])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [325373 325377]))                          
                        :documentation "GetLocalAnchorA(b2WeldJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [325353 325494])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [325520 325524]))                          
                        :documentation "GetLocalAnchorB(b2WeldJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [325500 325641])
                    ("GetReferenceAngle" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [325669 325673]))                          
                        :documentation "GetReferenceAngle(b2WeldJoint self) -> float32")
                        (reparse-symbol indented_block_body) [325647 325795])
                    ("SetFrequency" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [325818 325822])
                            ("hz" variable nil (reparse-symbol function_parameters) [325824 325826]))                          
                        :documentation "SetFrequency(b2WeldJoint self, float32 hz)")
                        (reparse-symbol indented_block_body) [325801 325943])
                    ("GetFrequency" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [325966 325970]))                          
                        :documentation "GetFrequency(b2WeldJoint self) -> float32")
                        (reparse-symbol indented_block_body) [325949 326082])
                    ("SetDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [326108 326112])
                            ("ratio" variable nil (reparse-symbol function_parameters) [326114 326119]))                          
                        :documentation "SetDampingRatio(b2WeldJoint self, float32 ratio)")
                        (reparse-symbol indented_block_body) [326088 326248])
                    ("GetDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [326274 326278]))                          
                        :documentation "GetDampingRatio(b2WeldJoint self) -> float32")
                        (reparse-symbol indented_block_body) [326254 326396])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [326402 326423])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [326443 326447]))                          
                        :documentation "__hash__(b2WeldJoint self) -> long")
                        (reparse-symbol indented_block_body) [326430 326548])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [326567 326571]))                          )
                        (reparse-symbol indented_block_body) [326554 326609])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [326614 326658]))                  
                :type "class")
                nil [324940 326659])
            ("b2WeldJoint" variable nil nil [326659 326762])
            ("b2WeldJoint" variable nil nil [326763 326866])
            ("b2WeldJoint" variable nil nil [326867 326974])
            ("b2WeldJoint" variable nil nil [326975 327072])
            ("b2WeldJoint" variable nil nil [327073 327170])
            ("b2WeldJoint" variable nil nil [327171 327274])
            ("b2WeldJoint" variable nil nil [327275 327378])
            ("b2WeldJoint" variable nil nil [327379 327468])
            ("b2WeldJoint_swigregister" variable nil nil [327469 327527])
            ("b2WeldJoint_swigregister" code nil nil [327528 327565])
            ("b2WheelJointDef" type
               (:documentation "Line joint definition. This requires defining a line of motion using an axis and an anchor point. The definition uses local anchor points and a local axis so that the initial configuration can violate the constraint slightly. The joint translation is zero when the local anchor points coincide in world space. Using local anchors and a local axis helps when saving and loading a game."
                :superclasses ("b2JointDef")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [328001 328104])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [328109 328130])
                    ("__init__" function
                       (:suite 
                          ( ("_Box2D" code nil (reparse-symbol indented_block_body) [328174 328240])
                            ("_init_jointdef_kwargs" code nil (reparse-symbol indented_block_body) [328249 328286]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [328149 328153])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [328155 328163]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [328136 328287])
                    ("Initialize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [328309 328313])
                            ("bodyA" variable nil (reparse-symbol function_parameters) [328315 328320])
                            ("bodyB" variable nil (reparse-symbol function_parameters) [328322 328327])
                            ("anchor" variable nil (reparse-symbol function_parameters) [328329 328335])
                            ("axis" variable nil (reparse-symbol function_parameters) [328337 328341]))                          
                        :documentation "
        Initialize(b2WheelJointDef self, b2Body bodyA, b2Body bodyB, b2Vec2 anchor, b2Vec2 axis)

        Initialize the bodies, anchors, axis, and reference angle using the world anchor and world axis.
        ")
                        (reparse-symbol indented_block_body) [328294 328654])
                    ("localAnchorA" variable nil (reparse-symbol indented_block_body) [328659 328770])
                    ("localAnchorB" variable nil (reparse-symbol indented_block_body) [328775 328886])
                    ("localAxisA" variable nil (reparse-symbol indented_block_body) [328891 328996])
                    ("enableMotor" variable nil (reparse-symbol indented_block_body) [329001 329109])
                    ("maxMotorTorque" variable nil (reparse-symbol indented_block_body) [329114 329231])
                    ("motorSpeed" variable nil (reparse-symbol indented_block_body) [329236 329341])
                    ("frequencyHz" variable nil (reparse-symbol indented_block_body) [329346 329454])
                    ("dampingRatio" variable nil (reparse-symbol indented_block_body) [329459 329570])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [329576 329597])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [329617 329621]))                          
                        :documentation "__hash__(b2WheelJointDef self) -> long")
                        (reparse-symbol indented_block_body) [329604 329730])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [329749 329753]))                          )
                        (reparse-symbol indented_block_body) [329736 329791])
                    ("__set_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [329814 329818])
                            ("value" variable nil (reparse-symbol function_parameters) [329820 329825]))                          )
                        (reparse-symbol indented_block_body) [329797 330092])
                    ("__get_anchor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [330113 330117]))                          )
                        (reparse-symbol indented_block_body) [330096 330369])
                    ("__set_axis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [330388 330392])
                            ("value" variable nil (reparse-symbol function_parameters) [330394 330399]))                          )
                        (reparse-symbol indented_block_body) [330373 330533])
                    ("__get_axis" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [330552 330556]))                          )
                        (reparse-symbol indented_block_body) [330537 330714])
                    ("anchor" variable nil (reparse-symbol indented_block_body) [330719 331014])
                    ("axis" variable nil (reparse-symbol indented_block_body) [331019 331254])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [331260 331308]))                  
                :type "class")
                nil [327567 331309])
            ("b2WheelJointDef" variable nil nil [331309 331414])
            ("b2WheelJointDef" variable nil nil [331415 331516])
            ("b2WheelJointDef_swigregister" variable nil nil [331517 331583])
            ("b2WheelJointDef_swigregister" code nil nil [331584 331629])
            ("b2WheelJoint" type
               (:documentation "A line joint. This joint provides two degrees of freedom: translation along an axis fixed in body1 and rotation in the plane. You can use a joint limit to restrict the range of motion and a joint motor to drive the rotation or to model rotational friction. This joint is designed for vehicle suspensions."
                :superclasses ("b2Joint")
                :members 
                  ( ("thisown" variable nil (reparse-symbol indented_block_body) [331979 332082])
                    ("__init__" function
                       (:suite 
                          ( ("raise" code nil (reparse-symbol indented_block_body) [332133 332179]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [332101 332105])
                            ("args" variable nil (reparse-symbol function_parameters) [332107 332112])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [332114 332122]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [332088 332180])
                    ("__repr__" variable nil (reparse-symbol indented_block_body) [332184 332205])
                    ("GetLocalAnchorA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [332231 332235]))                          
                        :documentation "GetLocalAnchorA(b2WheelJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [332211 332354])
                    ("GetLocalAnchorB" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [332380 332384]))                          
                        :documentation "GetLocalAnchorB(b2WheelJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [332360 332503])
                    ("GetLocalAxisA" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [332527 332531]))                          
                        :documentation "GetLocalAxisA(b2WheelJoint self) -> b2Vec2")
                        (reparse-symbol indented_block_body) [332509 332646])
                    ("__GetJointTranslation" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [332678 332682]))                          
                        :documentation "
        __GetJointTranslation(b2WheelJoint self) -> float32

        Get the current joint translation, usually in meters.
        ")
                        (reparse-symbol indented_block_body) [332652 332895])
                    ("__GetJointSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [332921 332925]))                          
                        :documentation "
        __GetJointSpeed(b2WheelJoint self) -> float32

        Get the current joint translation speed, usually in meters per second.
        ")
                        (reparse-symbol indented_block_body) [332901 333143])
                    ("__IsMotorEnabled" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [333170 333174]))                          
                        :documentation "
        __IsMotorEnabled(b2WheelJoint self) -> bool

        Is the joint motor enabled?
        ")
                        (reparse-symbol indented_block_body) [333149 333348])
                    ("__EnableMotor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [333372 333376])
                            ("flag" variable nil (reparse-symbol function_parameters) [333378 333382]))                          
                        :documentation "
        __EnableMotor(b2WheelJoint self, bool flag)

        Enable/disable the joint motor.
        ")
                        (reparse-symbol indented_block_body) [333354 333563])
                    ("__SetMotorSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [333589 333593])
                            ("speed" variable nil (reparse-symbol function_parameters) [333595 333600]))                          
                        :documentation "
        __SetMotorSpeed(b2WheelJoint self, float32 speed)

        Set the motor speed, usually in radians per second.
        ")
                        (reparse-symbol indented_block_body) [333569 333810])
                    ("__GetMotorSpeed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [333836 333840]))                          
                        :documentation "
        __GetMotorSpeed(b2WheelJoint self) -> float32

        Get the motor speed, usually in radians per second.
        ")
                        (reparse-symbol indented_block_body) [333816 334039])
                    ("__SetMaxMotorTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [334069 334073])
                            ("torque" variable nil (reparse-symbol function_parameters) [334075 334081]))                          
                        :documentation "
        __SetMaxMotorTorque(b2WheelJoint self, float32 torque)

        Set/Get the maximum motor force, usually in N-m.
        ")
                        (reparse-symbol indented_block_body) [334045 334298])
                    ("__GetMaxMotorTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [334328 334332]))                          
                        :documentation "__GetMaxMotorTorque(b2WheelJoint self) -> float32")
                        (reparse-symbol indented_block_body) [334304 334460])
                    ("GetMotorTorque" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [334485 334489])
                            ("inv_dt" variable nil (reparse-symbol function_parameters) [334491 334497]))                          
                        :documentation "
        GetMotorTorque(b2WheelJoint self, float32 inv_dt) -> float32

        Get the current motor torque given the inverse time step, usually in N-m.
        ")
                        (reparse-symbol indented_block_body) [334466 334740])
                    ("__SetSpringFrequencyHz" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [334773 334777])
                            ("hz" variable nil (reparse-symbol function_parameters) [334779 334781]))                          
                        :documentation "
        __SetSpringFrequencyHz(b2WheelJoint self, float32 hz)

        Set/Get the spring frequency in hertz. Setting the frequency to zero disables the spring.
        ")
                        (reparse-symbol indented_block_body) [334746 335037])
                    ("__GetSpringFrequencyHz" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [335070 335074]))                          
                        :documentation "__GetSpringFrequencyHz(b2WheelJoint self) -> float32")
                        (reparse-symbol indented_block_body) [335043 335208])
                    ("__SetSpringDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [335242 335246])
                            ("ratio" variable nil (reparse-symbol function_parameters) [335248 335253]))                          
                        :documentation "
        __SetSpringDampingRatio(b2WheelJoint self, float32 ratio)

        Set/Get the spring damping ratio.
        ")
                        (reparse-symbol indented_block_body) [335214 335461])
                    ("__GetSpringDampingRatio" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [335495 335499]))                          
                        :documentation "__GetSpringDampingRatio(b2WheelJoint self) -> float32")
                        (reparse-symbol indented_block_body) [335467 335635])
                    ("__dir__" variable nil (reparse-symbol indented_block_body) [335641 335662])
                    ("__hash__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [335682 335686]))                          
                        :documentation "__hash__(b2WheelJoint self) -> long")
                        (reparse-symbol indented_block_body) [335669 335789])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [335808 335812]))                          )
                        (reparse-symbol indented_block_body) [335795 335850])
                    ("motorSpeed" variable nil (reparse-symbol indented_block_body) [335893 335948])
                    ("motorEnabled" variable nil (reparse-symbol indented_block_body) [335953 336009])
                    ("maxMotorTorque" variable nil (reparse-symbol indented_block_body) [336014 336081])
                    ("springFrequencyHz" variable nil (reparse-symbol indented_block_body) [336086 336163])
                    ("springDampingRatio" variable nil (reparse-symbol indented_block_body) [336168 336248])
                    ("speed" variable nil (reparse-symbol indented_block_body) [336270 336309])
                    ("translation" variable nil (reparse-symbol indented_block_body) [336314 336365])
                    ("__swig_destroy__" variable nil (reparse-symbol indented_block_body) [336372 336417]))                  
                :type "class")
                nil [331631 336418])
            ("b2WheelJoint" variable nil nil [336418 336524])
            ("b2WheelJoint" variable nil nil [336525 336631])
            ("b2WheelJoint" variable nil nil [336632 336734])
            ("b2WheelJoint" variable nil nil [336735 336853])
            ("b2WheelJoint" variable nil nil [336854 336960])
            ("b2WheelJoint" variable nil nil [336961 337069])
            ("b2WheelJoint" variable nil nil [337070 337172])
            ("b2WheelJoint" variable nil nil [337173 337279])
            ("b2WheelJoint" variable nil nil [337280 337386])
            ("b2WheelJoint" variable nil nil [337387 337501])
            ("b2WheelJoint" variable nil nil [337502 337616])
            ("b2WheelJoint" variable nil nil [337617 337721])
            ("b2WheelJoint" variable nil nil [337722 337842])
            ("b2WheelJoint" variable nil nil [337843 337963])
            ("b2WheelJoint" variable nil nil [337964 338086])
            ("b2WheelJoint" variable nil nil [338087 338209])
            ("b2WheelJoint" variable nil nil [338210 338302])
            ("b2WheelJoint_swigregister" variable nil nil [338303 338363])
            ("b2WheelJoint_swigregister" code nil nil [338364 338403])
            ("b2LoopShape" variable nil nil [338440 338466])
            ("b2" include nil nil [338652 338661])
            ("s" variable nil nil [338663 338669])
            ("to_remove" variable nil nil [338670 338682])
            ("for" code nil nil [338683 339092])
            ("for" code nil nil [339092 339132])
            ("del" code nil nil [339133 339138])
            ("del" code nil nil [339139 339152]))          
      :file "Box2D.py"
      :pointmax 339156
      :fsize 339155
      :lastmodtime '(22579 30185 0 0)
      :unmatched-syntax '((FROM 338645 . 338649) (PERIOD 338650 . 338651) (INDENT_BLOCK 209144 . 209291) (NEWLINE 209143 . 209144) (COLON 209142 . 209143) (TRY 209061 . 209064) (AS 209137 . 209139) (INDENT_BLOCK 161872 . 162021) (NEWLINE 161871 . 161872) (COLON 161870 . 161871) (TRY 161787 . 161790) (AS 161865 . 161867) (INDENT_BLOCK 16707 . 16745) (NEWLINE 16706 . 16707) (COLON 16705 . 16706) (TRY 16621 . 16624) (AS 16700 . 16702) (INDENT_BLOCK 4220 . 4348) (NEWLINE 4219 . 4220) (COLON 4218 . 4219) (TRY 4145 . 4148) (AS 4213 . 4215))))
  :file "!Users!xiaoli!anaconda!lib!python2.7!site-packages!Box2D!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
