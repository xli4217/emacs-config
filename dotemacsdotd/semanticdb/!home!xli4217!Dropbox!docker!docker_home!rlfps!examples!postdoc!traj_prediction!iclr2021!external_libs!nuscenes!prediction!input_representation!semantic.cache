;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("colorsys" include nil nil [61 76])
            ("os" include nil nil [77 86])
            ("typing" include nil nil [87 133])
            ("cv2" include nil nil [135 145])
            ("numpy" include nil nil [146 164])
            ("pyquaternion" include nil nil [165 200])
            ("nuscenes.eval.common.utils" include nil nil [202 255])
            ("nuscenes.map_expansion.map_api" include nil nil [256 310])
            ("nuscenes.prediction" include nil nil [311 356])
            ("nuscenes.prediction.helper" include nil nil [357 425])
            ("nuscenes.prediction.input_representation.combinators" include nil nil [426 501])
            ("nuscenes.prediction.input_representation.interface" include nil nil [502 596])
            ("nuscenes.prediction.input_representation.utils" include nil nil [597 711])
            ("Color" variable nil nil [713 747])
            ("StaticLayerRasterizer" type
               (:documentation "
    Creates a representation of the static map layers where
    the map layers are given a color and rasterized onto a
    three channel image.
    "
                :superclasses ("StaticLayerRepresentation")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [9395 9415])
                            ("self" variable nil (reparse-symbol indented_block_body) [9424 9457])
                            ("if" code nil (reparse-symbol indented_block_body) [9467 9558])
                            ("self" variable nil (reparse-symbol indented_block_body) [9566 9596])
                            ("if" code nil (reparse-symbol indented_block_body) [9606 9690])
                            ("self" variable nil (reparse-symbol indented_block_body) [9698 9718])
                            ("self" variable nil (reparse-symbol indented_block_body) [9728 9756])
                            ("self" variable nil (reparse-symbol indented_block_body) [9765 9797])
                            ("self" variable nil (reparse-symbol indented_block_body) [9806 9840])
                            ("self" variable nil (reparse-symbol indented_block_body) [9849 9879])
                            ("self" variable nil (reparse-symbol indented_block_body) [9888 9920])
                            ("self" variable nil (reparse-symbol indented_block_body) [9929 9959]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9066 9070])
                            ("PredictHelper" variable nil (reparse-symbol function_parameters) [9080 9093])
                            ("None" variable nil (reparse-symbol function_parameters) [9137 9141])
                            ("None" variable nil (reparse-symbol function_parameters) [9182 9186])
                            ("float" variable nil (reparse-symbol function_parameters) [9217 9222])
                            ("float" variable nil (reparse-symbol function_parameters) [9278 9283])
                            ("float" variable nil (reparse-symbol function_parameters) [9305 9310])
                            ("float" variable nil (reparse-symbol function_parameters) [9347 9352])
                            ("float" variable nil (reparse-symbol function_parameters) [9373 9378]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [9053 9960]))                  
                :type "class")
                nil [8832 11994]))          
      :file "static_layers.py"
      :pointmax 11994
      :fsize 11993
      :lastmodtime '(24373 36840 698638 840000)
      :unmatched-syntax '((INDENT_BLOCK 10050 . 11994) (NEWLINE 10049 . 10050) (COLON 10048 . 10049) (DEF 9965 . 9968) (MINUS 10035 . 10036) (GT 10036 . 10037) (NAME 10016 . 10028) (COLON 10028 . 10029) (NAME 9995 . 10009) (COLON 10009 . 10010) (NAME 9359 . 9371) (COLON 9371 . 9372) (NAME 9334 . 9345) (COLON 9345 . 9346) (NAME 9290 . 9303) (COLON 9303 . 9304) (NAME 9264 . 9276) (COLON 9276 . 9277) (NAME 9205 . 9215) (COLON 9215 . 9216) (ASSIGN 9180 . 9181) (BRACK_BLOCK 9172 . 9179) (NAME 9160 . 9166) (COLON 9166 . 9167) (ASSIGN 9135 . 9136) (BRACK_BLOCK 9129 . 9134) (NAME 9112 . 9123) (COLON 9123 . 9124) (NAME 9072 . 9078) (COLON 9078 . 9079) (INDENT_BLOCK 7284 . 8830) (COLON 7282 . 7283) (MINUS 7269 . 7270) (GT 7270 . 7271) (ASSIGN 7253 . 7254) (BRACK_BLOCK 7229 . 7252) (NAME 7205 . 7219) (COLON 7219 . 7220) (NAME 7153 . 7160) (COLON 7160 . 7161) (NAME 7082 . 7114) (COLON 7114 . 7115) (NAME 7027 . 7043) (COLON 7043 . 7044) (NAME 6982 . 6988) (COLON 6988 . 6989) (NAME 6934 . 6943) (COLON 6943 . 6944) (NAME 6888 . 6895) (COLON 6895 . 6896) (NAME 6872 . 6879) (COLON 6879 . 6880) (NAME 6818 . 6835) (COLON 6835 . 6836) (INDENT_BLOCK 5146 . 6786) (COLON 5144 . 5145) (MINUS 5131 . 5132) (GT 5132 . 5133) (ASSIGN 5115 . 5116) (BRACK_BLOCK 5091 . 5114) (NAME 5067 . 5081) (COLON 5081 . 5082) (COLON 5034 . 5035) (COMMA 4998 . 4999) (BRACK_BLOCK 4988 . 4998) (NAME 4969 . 4981) (COLON 4981 . 4982) (COLON 4936 . 4937) (COMMA 4890 . 4891) (BRACK_BLOCK 4876 . 4890) (COLON 4869 . 4870) (COMMA 4824 . 4825) (BRACK_BLOCK 4785 . 4824) (NAME 4774 . 4779) (COLON 4779 . 4780) (PERIOD 4740 . 4741) (NAME 4731 . 4736) (COLON 4736 . 4737) (INDENT_BLOCK 3959 . 4705) (COLON 3957 . 3958) (MINUS 3949 . 3950) (GT 3950 . 3951) (NAME 3921 . 3940) (COLON 3940 . 3941) (NAME 3875 . 3895) (COLON 3895 . 3896) (INDENT_BLOCK 2956 . 3856) (COLON 2954 . 2955) (MINUS 2908 . 2909) (GT 2909 . 2910) (NAME 2886 . 2893) (COLON 2893 . 2894) (NAME 2832 . 2853) (COLON 2853 . 2854) (NAME 2793 . 2799) (COLON 2799 . 2800) (NAME 2783 . 2784) (COLON 2784 . 2785) (NAME 2773 . 2774) (COLON 2774 . 2775) (INDENT_BLOCK 2437 . 2747) (COLON 2435 . 2436) (MINUS 2427 . 2428) (GT 2428 . 2429) (NAME 2415 . 2418) (COLON 2418 . 2419) (INDENT_BLOCK 2001 . 2397) (COLON 1999 . 2000) (MINUS 1986 . 1987) (GT 1987 . 1988) (NAME 1972 . 1977) (COLON 1977 . 1978) (PERIOD 1962 . 1963) (NAME 1953 . 1958) (COLON 1958 . 1959) (INDENT_BLOCK 1574 . 1919) (COLON 1572 . 1573) (MINUS 1536 . 1537) (GT 1537 . 1538) (NAME 1510 . 1527) (COLON 1527 . 1528) (NAME 1473 . 1484) (COLON 1484 . 1485) (NAME 1453 . 1464) (COLON 1464 . 1465) (INDENT_BLOCK 818 . 1434) (COLON 816 . 817) (DEF 750 . 753) (MINUS 791 . 792) (GT 792 . 793) (NAME 768 . 774) (COLON 774 . 775)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("typing" include nil nil [61 85])
            ("cv2" include nil nil [87 97])
            ("numpy" include nil nil [98 116])
            ("nuscenes.prediction.helper" include nil nil [118 174]))          
      :file "utils.py"
      :pointmax 2916
      :fsize 2915
      :lastmodtime '(24373 36840 930631 799000)
      :unmatched-syntax '((INDENT_BLOCK 2403 . 2916) (COLON 2401 . 2402) (MINUS 2388 . 2389) (GT 2389 . 2390) (COLON 2379 . 2380) (COMMA 2363 . 2364) (BRACK_BLOCK 2348 . 2363) (NAME 2330 . 2341) (COLON 2341 . 2342) (INDENT_BLOCK 1486 . 2304) (COLON 1484 . 1485) (MINUS 1462 . 1463) (GT 1463 . 1464) (NAME 1431 . 1455) (COLON 1455 . 1456) (NAME 1398 . 1408) (COLON 1408 . 1409) (NAME 1363 . 1375) (COLON 1375 . 1376) (NAME 1343 . 1354) (COLON 1354 . 1355) (NAME 1307 . 1320) (COLON 1320 . 1321) (NAME 1286 . 1298) (COLON 1298 . 1299) (INDENT_BLOCK 461 . 1270) (COLON 459 . 460) (DEF 177 . 180) (MINUS 441 . 442) (GT 442 . 443) (COLON 426 . 427) (COMMA 386 . 387) (BRACK_BLOCK 372 . 386) (COLON 365 . 366) (COMMA 310 . 311) (BRACK_BLOCK 296 . 310) (COLON 289 . 290) (COMMA 234 . 235) (BRACK_BLOCK 220 . 234) (NAME 205 . 213) (COLON 213 . 214)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("functools" include nil nil [61 89])
            ("typing" include nil nil [90 113])
            ("cv2" include nil nil [115 125])
            ("numpy" include nil nil [126 144])
            ("nuscenes.prediction.input_representation.interface" include nil nil [146 219])
            ("Rasterizer" type
               (:documentation "
    Combines images into a three channel image.
    "
                :superclasses ("Combinator")
                :type "class")
                nil [1523 2088]))          
      :file "combinators.py"
      :pointmax 2088
      :fsize 2087
      :lastmodtime '(24373 36840 650640 296000)
      :unmatched-syntax '((INDENT_BLOCK 1679 . 2088) (NEWLINE 1678 . 1679) (COLON 1677 . 1678) (DEF 1622 . 1625) (MINUS 1664 . 1665) (GT 1665 . 1666) (BRACK_BLOCK 1650 . 1662) (NAME 1640 . 1644) (COLON 1644 . 1645) (INDENT_BLOCK 347 . 1521) (COLON 345 . 346) (DEF 222 . 225) (MINUS 332 . 333) (GT 333 . 334) (PERIOD 322 . 323) (NAME 302 . 318) (COLON 318 . 319) (PERIOD 264 . 265) (NAME 250 . 260) (COLON 260 . 261)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("abc" include nil nil [60 70])
            ("typing" include nil nil [71 94])
            ("numpy" include nil nil [96 114])
            ("StaticLayerRepresentation" type
               (:documentation " Represents static map information as a numpy array. "
                :superclasses ("abc.ABC")
                :type "class")
                nil [117 373])
            ("AgentRepresentation" type
               (:documentation " Represents information of agents in scene as numpy array. "
                :superclasses ("abc.ABC")
                :type "class")
                nil [375 631])
            ("Combinator" type
               (:documentation " Combines the StaticLayer and Agent representations into a single one. "
                :superclasses ("abc.ABC")
                :type "class")
                nil [633 864])
            ("InputRepresentation" type
               (:documentation "
    Specifies how to represent the input for a prediction model.
    Need to provide a StaticLayerRepresentation - how the map is represented,
    an AgentRepresentation - how agents in the scene are represented,
    and a Combinator, how the StaticLayerRepresentation and AgentRepresentation should be combined.
    "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1366 1409])
                            ("self" variable nil (reparse-symbol indented_block_body) [1418 1447])
                            ("self" variable nil (reparse-symbol indented_block_body) [1456 1484]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1240 1244])
                            ("StaticLayerRepresentation" variable nil (reparse-symbol function_parameters) [1260 1285])
                            ("AgentRepresentation" variable nil (reparse-symbol function_parameters) [1294 1313])
                            ("Combinator" variable nil (reparse-symbol function_parameters) [1344 1354]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1227 1485]))                  
                :type "class")
                nil [866 1839]))          
      :file "interface.py"
      :pointmax 1840
      :fsize 1839
      :lastmodtime '(24373 36840 674639 568000)
      :unmatched-syntax '((INDENT_BLOCK 1582 . 1839) (NEWLINE 1580 . 1581) (COLON 1579 . 1580) (DEF 1490 . 1493) (MINUS 1566 . 1567) (GT 1567 . 1568) (NAME 1547 . 1559) (COLON 1559 . 1560) (NAME 1526 . 1540) (COLON 1540 . 1541) (NAME 1332 . 1342) (COLON 1342 . 1343) (NAME 1287 . 1292) (COLON 1292 . 1293) (NAME 1246 . 1258) (COLON 1258 . 1259) (INDENT_BLOCK 828 . 864) (NEWLINE 827 . 828) (COLON 826 . 827) (AT 747 . 748) (MINUS 813 . 814) (GT 814 . 815) (BRACK_BLOCK 799 . 811) (NAME 789 . 793) (COLON 793 . 794) (INDENT_BLOCK 595 . 631) (NEWLINE 594 . 595) (COLON 593 . 594) (AT 486 . 487) (MINUS 580 . 581) (GT 581 . 582) (NAME 561 . 573) (COLON 573 . 574) (NAME 540 . 554) (COLON 554 . 555) (INDENT_BLOCK 337 . 373) (NEWLINE 336 . 337) (COLON 335 . 336) (AT 228 . 229) (MINUS 322 . 323) (GT 323 . 324) (NAME 303 . 315) (COLON 315 . 316) (NAME 282 . 296) (COLON 296 . 297)))
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("colorsys" include nil nil [61 76])
            ("typing" include nil nil [77 128])
            ("cv2" include nil nil [130 140])
            ("numpy" include nil nil [141 159])
            ("pyquaternion" include nil nil [160 195])
            ("nuscenes.prediction" include nil nil [197 242])
            ("nuscenes.prediction.helper" include nil nil [243 296])
            ("nuscenes.prediction.input_representation.interface" include nil nil [297 379])
            ("nuscenes.prediction.input_representation.utils" include nil nil [380 494])
            ("History" variable nil nil [496 537])
            ("AgentBoxesWithFadedHistory" type
               (:documentation "
    Represents the past sequence of agent states as a three-channel
    image with faded 2d boxes.
    "
                :superclasses ("AgentRepresentation")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [7937 7957])
                            ("self" variable nil (reparse-symbol indented_block_body) [7966 8010])
                            ("self" variable nil (reparse-symbol indented_block_body) [8019 8057])
                            ("if" code nil (reparse-symbol indented_block_body) [8067 8175])
                            ("self" variable nil (reparse-symbol indented_block_body) [8184 8212])
                            ("self" variable nil (reparse-symbol indented_block_body) [8222 8254])
                            ("self" variable nil (reparse-symbol indented_block_body) [8263 8297])
                            ("self" variable nil (reparse-symbol indented_block_body) [8306 8336])
                            ("self" variable nil (reparse-symbol indented_block_body) [8345 8377])
                            ("if" code nil (reparse-symbol indented_block_body) [8387 8452])
                            ("self" variable nil (reparse-symbol indented_block_body) [8461 8495]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7529 7533])
                            ("PredictHelper" variable nil (reparse-symbol function_parameters) [7543 7556])
                            ("float" variable nil (reparse-symbol function_parameters) [7595 7600])
                            ("float" variable nil (reparse-symbol function_parameters) [7640 7645])
                            ("float" variable nil (reparse-symbol function_parameters) [7680 7685])
                            ("float" variable nil (reparse-symbol function_parameters) [7742 7747])
                            ("float" variable nil (reparse-symbol function_parameters) [7769 7774])
                            ("float" variable nil (reparse-symbol function_parameters) [7811 7816])
                            ("float" variable nil (reparse-symbol function_parameters) [7837 7842])
                            ("None" variable nil (reparse-symbol function_parameters) [7921 7925]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [7516 8496]))                  
                :type "class")
                nil [7341 10678]))          
      :file "agents.py"
      :pointmax 10678
      :fsize 10677
      :lastmodtime '(24373 36840 626641 24000)
      :unmatched-syntax '((INDENT_BLOCK 8586 . 10678) (NEWLINE 8585 . 8586) (COLON 8584 . 8585) (DEF 8501 . 8504) (MINUS 8571 . 8572) (GT 8572 . 8573) (NAME 8552 . 8564) (COLON 8564 . 8565) (NAME 8531 . 8545) (COLON 8545 . 8546) (ASSIGN 7919 . 7920) (BRACK_BLOCK 7889 . 7918) (NAME 7866 . 7879) (COLON 7879 . 7880) (NAME 7823 . 7835) (COLON 7835 . 7836) (NAME 7798 . 7809) (COLON 7809 . 7810) (NAME 7754 . 7767) (COLON 7767 . 7768) (NAME 7728 . 7740) (COLON 7740 . 7741) (NAME 7668 . 7678) (COLON 7678 . 7679) (NAME 7623 . 7638) (COLON 7638 . 7639) (NAME 7575 . 7593) (COLON 7593 . 7594) (NAME 7535 . 7541) (COLON 7541 . 7542) (INDENT_BLOCK 6067 . 7339) (COLON 6065 . 6066) (MINUS 6058 . 6059) (GT 6059 . 6060) (COLON 6043 . 6044) (COMMA 6010 . 6011) (BRACK_BLOCK 5981 . 6010) (NAME 5962 . 5971) (COLON 5971 . 5972) (PERIOD 5931 . 5932) (NAME 5917 . 5927) (COLON 5927 . 5928) (COLON 5885 . 5886) (COMMA 5849 . 5850) (BRACK_BLOCK 5835 . 5849) (COLON 5828 . 5829) (COMMA 5786 . 5787) (BRACK_BLOCK 5776 . 5786) (NAME 5747 . 5770) (COLON 5770 . 5771) (INDENT_BLOCK 5210 . 5724) (COLON 5208 . 5209) (MINUS 5185 . 5186) (GT 5186 . 5187) (NAME 5165 . 5178) (COLON 5178 . 5179) (INDENT_BLOCK 4369 . 5144) (COLON 4367 . 4368) (MINUS 4344 . 4345) (GT 4345 . 4346) (NAME 4316 . 4337) (COLON 4337 . 4338) (COLON 4294 . 4295) (COMMA 4273 . 4274) (BRACK_BLOCK 4258 . 4273) (NAME 4246 . 4251) (COLON 4251 . 4252) (INDENT_BLOCK 3534 . 4229) (COLON 3532 . 3533) (MINUS 3522 . 3523) (GT 3523 . 3524) (COLON 3511 . 3512) (COMMA 3470 . 3471) (BRACK_BLOCK 3454 . 3470) (NAME 3436 . 3448) (COLON 3448 . 3449) (INDENT_BLOCK 3048 . 3402) (COLON 3046 . 3047) (MINUS 3036 . 3037) (GT 3037 . 3038) (NAME 3018 . 3025) (COLON 3025 . 3026) (INDENT_BLOCK 1893 . 2996) (COLON 1891 . 1892) (MINUS 1878 . 1879) (GT 1879 . 1880) (COLON 1863 . 1864) (COMMA 1833 . 1834) (BRACK_BLOCK 1819 . 1833) (COLON 1812 . 1813) (COMMA 1779 . 1780) (BRACK_BLOCK 1765 . 1779) (COLON 1758 . 1759) (COMMA 1720 . 1721) (BRACK_BLOCK 1710 . 1720) (NAME 1694 . 1704) (COLON 1704 . 1705) (INDENT_BLOCK 792 . 1674) (COLON 790 . 791) (DEF 540 . 543) (MINUS 777 . 778) (GT 778 . 779) (NAME 754 . 768) (COLON 768 . 769) (NAME 704 . 719) (COLON 719 . 720) (NAME 653 . 669) (COLON 669 . 670) (NAME 608 . 620) (COLON 620 . 621) (NAME 566 . 575) (COLON 575 . 576))))
  :file "!home!xli4217!Dropbox!docker!docker_home!rlfps!examples!postdoc!traj_prediction!iclr2021!external_libs!nuscenes!prediction!input_representation!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
