;; Object misc/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "misc/"
  :tables
  (list
    (semanticdb-table "instrument.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("re" include nil nil [11 20])
            ("subprocess" include nil nil [21 38])
            ("base64" include nil nil [39 52])
            ("os.path" include nil nil [53 74])
            ("cPickle" include nil nil [75 99])
            ("inspect" include nil nil [100 114])
            ("sys" include nil nil [115 125])
            ("contextlib" include nil nil [126 163])
            ("errno" include nil nil [165 177])
            ("rllab.core.serializable" include nil nil [179 227])
            ("rllab" include nil nil [228 252])
            ("rllab.misc.console" include nil nil [253 291])
            ("rllab.misc" include nil nil [292 318])
            ("StringIO" include nil nil [319 348])
            ("datetime" include nil nil [349 364])
            ("dateutil.tz" include nil nil [365 383])
            ("json" include nil nil [384 395])
            ("numpy" include nil nil [396 414])
            ("rllab.misc.ext" include nil nil [416 451])
            ("rllab.viskit.core" include nil nil [452 489])
            ("StubBase" type
               (:superclasses ("object")
                :members 
                  ( ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [536 540])
                            ("item" variable nil (reparse-symbol function_parameters) [542 546]))                          )
                        (reparse-symbol indented_block_body) [520 628])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [649 653])
                            ("item" variable nil (reparse-symbol function_parameters) [655 659]))                          )
                        (reparse-symbol indented_block_body) [633 900])
                    ("__pow__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [917 921])
                            ("power" variable nil (reparse-symbol function_parameters) [923 928])
                            ("modulo" variable nil (reparse-symbol function_parameters) [930 936]))                          )
                        (reparse-symbol indented_block_body) [905 1016])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1034 1038])
                            ("args" variable nil (reparse-symbol function_parameters) [1040 1045])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1047 1055]))                          )
                        (reparse-symbol indented_block_body) [1021 1128])
                    ("__add__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1145 1149])
                            ("other" variable nil (reparse-symbol function_parameters) [1151 1156]))                          )
                        (reparse-symbol indented_block_body) [1133 1223])
                    ("__rmul__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1241 1245])
                            ("other" variable nil (reparse-symbol function_parameters) [1247 1252]))                          )
                        (reparse-symbol indented_block_body) [1228 1320])
                    ("__div__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1337 1341])
                            ("other" variable nil (reparse-symbol function_parameters) [1343 1348]))                          )
                        (reparse-symbol indented_block_body) [1325 1415])
                    ("__rdiv__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1433 1437])
                            ("other" variable nil (reparse-symbol function_parameters) [1439 1444]))                          )
                        (reparse-symbol indented_block_body) [1420 1558])
                    ("__rpow__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1576 1580])
                            ("power" variable nil (reparse-symbol function_parameters) [1582 1587])
                            ("modulo" variable nil (reparse-symbol function_parameters) [1589 1595]))                          )
                        (reparse-symbol indented_block_body) [1563 1676]))                  
                :type "class")
                nil [492 1676])
            ("BinaryOp" type
               (:superclasses ("Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("Serializable" code nil (reparse-symbol indented_block_body) [1740 1779]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1725 1729]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1712 1780])
                    ("rdiv" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1794 1798])
                            ("a" variable nil (reparse-symbol function_parameters) [1800 1801])
                            ("b" variable nil (reparse-symbol function_parameters) [1803 1804]))                          )
                        (reparse-symbol indented_block_body) [1785 1828]))                  
                :type "class")
                nil [1678 1828])
            ("StubAttr" type
               (:superclasses ("StubBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2033 2060])
                            ("self" variable nil (reparse-symbol indented_block_body) [2069 2108]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2002 2006])
                            ("obj" variable nil (reparse-symbol function_parameters) [2008 2011])
                            ("attr_name" variable nil (reparse-symbol function_parameters) [2013 2022]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1989 2109])
                    ("obj" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2136 2140]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2114 2180])
                    ("attr_name" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2213 2217]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2185 2263])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2280 2284]))                          )
                        (reparse-symbol indented_block_body) [2268 2360]))                  
                :type "class")
                nil [1959 2360])
            ("StubMethodCall" type
               (:superclasses ("StubBase" "Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2472 2510])
                            ("Serializable" code nil (reparse-symbol indented_block_body) [2519 2558])
                            ("self" variable nil (reparse-symbol indented_block_body) [2567 2581])
                            ("self" variable nil (reparse-symbol indented_block_body) [2590 2620])
                            ("self" variable nil (reparse-symbol indented_block_body) [2629 2645])
                            ("self" variable nil (reparse-symbol indented_block_body) [2654 2674]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2425 2429])
                            ("obj" variable nil (reparse-symbol function_parameters) [2431 2434])
                            ("method_name" variable nil (reparse-symbol function_parameters) [2436 2447])
                            ("args" variable nil (reparse-symbol function_parameters) [2449 2453])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2455 2461]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2412 2675])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2692 2696]))                          )
                        (reparse-symbol indented_block_body) [2680 2835]))                  
                :type "class")
                nil [2362 2835])
            ("StubClass" type
               (:superclasses ("StubBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2909 2939]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2881 2885])
                            ("proxy_class" variable nil (reparse-symbol function_parameters) [2887 2898]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2868 2940])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2958 2962])
                            ("args" variable nil (reparse-symbol function_parameters) [2964 2969])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2971 2979]))                          )
                        (reparse-symbol indented_block_body) [2945 3291])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3313 3317]))                          )
                        (reparse-symbol indented_block_body) [3296 3370])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3392 3396])
                            ("dict" variable nil (reparse-symbol function_parameters) [3398 3402]))                          )
                        (reparse-symbol indented_block_body) [3375 3452])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3473 3477])
                            ("item" variable nil (reparse-symbol function_parameters) [3479 3483]))                          )
                        (reparse-symbol indented_block_body) [3457 3599])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3616 3620]))                          )
                        (reparse-symbol indented_block_body) [3604 3673]))                  
                :type "class")
                nil [2837 3673])
            ("StubObject" type
               (:superclasses ("StubBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [3767 3936])
                            ("self" variable nil (reparse-symbol indented_block_body) [3944 3976])
                            ("self" variable nil (reparse-symbol indented_block_body) [3985 4001])
                            ("self" variable nil (reparse-symbol indented_block_body) [4010 4030]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3720 3724])
                            ("__proxy_class" variable nil (reparse-symbol function_parameters) [3726 3739])
                            ("args" variable nil (reparse-symbol function_parameters) [3741 3746])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3748 3756]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3707 4031])
                    ("__getstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4053 4057]))                          )
                        (reparse-symbol indented_block_body) [4036 4146])
                    ("__setstate__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4168 4172])
                            ("dict" variable nil (reparse-symbol function_parameters) [4174 4178]))                          )
                        (reparse-symbol indented_block_body) [4151 4298])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4319 4323])
                            ("item" variable nil (reparse-symbol function_parameters) [4325 4329]))                          )
                        (reparse-symbol indented_block_body) [4303 4655])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4672 4676]))                          )
                        (reparse-symbol indented_block_body) [4660 4782]))                  
                :type "class")
                nil [3675 4782])
            ("VariantDict" type
               (:superclasses ("AttrDict")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [4861 4897])
                            ("self" variable nil (reparse-symbol indented_block_body) [4906 4937]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4830 4834])
                            ("d" variable nil (reparse-symbol function_parameters) [4836 4837])
                            ("hidden_keys" variable nil (reparse-symbol function_parameters) [4839 4850]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4817 4938])
                    ("dump" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4952 4956]))                          )
                        (reparse-symbol indented_block_body) [4943 5040]))                  
                :type "class")
                nil [4784 5040])
            ("VariantGenerator" type
               (:documentation "
    Usage:

    vg = VariantGenerator()
    vg.add(\"param1\", [1, 2, 3])
    vg.add(\"param2\", ['x', 'y'])
    vg.variants() => # all combinations of [1,2,3] x ['x','y']

    Supports noncyclic dependency among parameters:
    vg = VariantGenerator()
    vg.add(\"param1\", [1, 2, 3])
    vg.add(\"param2\", lambda param1: [param1+1, param1+2])
    vg.variants() => # ..
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [5488 5507])
                            ("self" code nil (reparse-symbol indented_block_body) [5516 5541])
                            ("self" variable nil (reparse-symbol indented_block_body) [5550 5572])
                            ("for" code nil (reparse-symbol indented_block_body) [5581 5698]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5473 5477]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5460 5698])
                    ("add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5711 5715])
                            ("key" variable nil (reparse-symbol function_parameters) [5717 5720])
                            ("vals" variable nil (reparse-symbol function_parameters) [5722 5726])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5728 5736]))                          )
                        (reparse-symbol indented_block_body) [5703 5790])
                    ("_populate_variants" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5818 5822]))                          )
                        (reparse-symbol indented_block_body) [5795 6154])
                    ("variants" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6172 6176])
                            ("randomized" variable nil (reparse-symbol function_parameters) [6178 6188]))                          )
                        (reparse-symbol indented_block_body) [6159 6335])
                    ("variant_dict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6357 6361])
                            ("variant" variable nil (reparse-symbol function_parameters) [6363 6370]))                          )
                        (reparse-symbol indented_block_body) [6340 6428])
                    ("to_name_suffix" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6452 6456])
                            ("variant" variable nil (reparse-symbol function_parameters) [6458 6465]))                          )
                        (reparse-symbol indented_block_body) [6433 6662])
                    ("ivariants" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6681 6685]))                          )
                        (reparse-symbol indented_block_body) [6667 7997])
                    ("_ivariants_sorted" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8024 8028])
                            ("sorted_keys" variable nil (reparse-symbol function_parameters) [8030 8041]))                          )
                        (reparse-symbol indented_block_body) [8002 9096]))                  
                :type "class")
                nil [5042 9096])
            ("variant" function (:arguments 
              ( ("args" variable nil (reparse-symbol function_parameters) [9110 9115])
                ("kwargs" variable nil (reparse-symbol function_parameters) [9117 9125]))              ) nil [9098 9335])
            ("stub" function (:arguments 
              ( ("glbs" variable nil (reparse-symbol function_parameters) [9346 9350]))              ) nil [9337 9654])
            ("query_yes_no" function
               (:documentation "Ask a yes/no question via raw_input() and return their answer.

    \"question\" is a string that is presented to the user.
    \"default\" is the presumed answer if the user just hits <Enter>.
        It must be \"yes\" (the default), \"no\" or None (meaning
        an answer is required of the user).

    The \"answer\" return value is True for \"yes\" or False for \"no\".
    "
                :arguments 
                  ( ("question" variable nil (reparse-symbol function_parameters) [9672 9680])
                    ("default" variable nil (reparse-symbol function_parameters) [9682 9689]))                  )
                nil [9655 10774])
            ("exp_count" variable nil nil [10776 10789])
            ("now" variable nil nil [10790 10840])
            ("timestamp" variable nil nil [10841 10886])
            ("remote_confirmed" variable nil nil [10887 10911])
            ("run_experiment_lite" function
               (:documentation "
    Serialize the stubbed method call and run the experiment using the specified mode.
    :param stub_method_call: A stubbed method call.
    :param script: The name of the entrance point python script
    :param mode: Where & how to run the experiment. Should be one of \"local\", \"local_docker\", \"ec2\",
    and \"lab_kube\".
    :param dry: Whether to do a dry-run, which only prints the commands without executing them.
    :param exp_prefix: Name prefix for the experiments
    :param docker_image: name of the docker image. Ignored if using local mode.
    :param aws_config: configuration for AWS. Only used under EC2 mode
    :param env: extra environment variables
    :param kwargs: All other parameters will be passed directly to the entrance python script.
    :param variant: If provided, should be a dictionary of parameters
    "
                :arguments 
                  ( ("stub_method_call" variable nil (reparse-symbol function_parameters) [10947 10963])
                    ("batch_tasks" variable nil (reparse-symbol function_parameters) [10978 10989])
                    ("exp_prefix" variable nil (reparse-symbol function_parameters) [11004 11014])
                    ("exp_name" variable nil (reparse-symbol function_parameters) [11037 11045])
                    ("log_dir" variable nil (reparse-symbol function_parameters) [11060 11067])
                    ("script" variable nil (reparse-symbol function_parameters) [11082 11088])
                    ("mode" variable nil (reparse-symbol function_parameters) [11131 11135])
                    ("dry" variable nil (reparse-symbol function_parameters) [11153 11156])
                    ("docker_image" variable nil (reparse-symbol function_parameters) [11172 11184])
                    ("aws_config" variable nil (reparse-symbol function_parameters) [11199 11209])
                    ("env" variable nil (reparse-symbol function_parameters) [11224 11227])
                    ("variant" variable nil (reparse-symbol function_parameters) [11242 11249])
                    ("use_gpu" variable nil (reparse-symbol function_parameters) [11264 11271])
                    ("sync_s3_pkl" variable nil (reparse-symbol function_parameters) [11287 11298])
                    ("confirm_remote" variable nil (reparse-symbol function_parameters) [11314 11328])
                    ("terminate_machine" variable nil (reparse-symbol function_parameters) [11343 11360])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [11375 11383]))                  )
                nil [10914 17499])
            ("_find_unsafe" variable nil nil [17501 17560])
            ("ensure_dir" function
               (:documentation "
    Ensure that a named directory exists; if it does not, attempt to create it.
    "
                :arguments 
                  ( ("dirname" variable nil (reparse-symbol function_parameters) [17578 17585]))                  )
                nil [17563 17799])
            ("_shellquote" function
               (:documentation "Return a shell-escaped version of the string *s*."
                :arguments 
                  ( ("s" variable nil (reparse-symbol function_parameters) [17817 17818]))                  )
                nil [17801 18131])
            ("_to_param_val" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [18151 18152]))              ) nil [18133 18321])
            ("to_local_command" function (:arguments 
              ( ("params" variable nil (reparse-symbol function_parameters) [18344 18350])
                ("script" variable nil (reparse-symbol function_parameters) [18352 18358])
                ("use_gpu" variable nil (reparse-symbol function_parameters) [18419 18426]))              ) nil [18323 19011])
            ("to_docker_command" function
               (:documentation "
    :param params: The parameters for the experiment. If logging directory parameters are provided, we will create
    docker volume mapping to make sure that the logging files are created at the correct locations
    :param docker_image: docker image to run the command on
    :param script: script command for running experiment
    :return:
    "
                :arguments 
                  ( ("params" variable nil (reparse-symbol function_parameters) [19035 19041])
                    ("docker_image" variable nil (reparse-symbol function_parameters) [19043 19055])
                    ("script" variable nil (reparse-symbol function_parameters) [19057 19063])
                    ("pre_commands" variable nil (reparse-symbol function_parameters) [19093 19105])
                    ("post_commands" variable nil (reparse-symbol function_parameters) [19134 19147])
                    ("dry" variable nil (reparse-symbol function_parameters) [19154 19157])
                    ("use_gpu" variable nil (reparse-symbol function_parameters) [19165 19172])
                    ("env" variable nil (reparse-symbol function_parameters) [19180 19183])
                    ("local_code_dir" variable nil (reparse-symbol function_parameters) [19190 19204]))                  )
                nil [19013 21189])
            ("dedent" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [21202 21203]))              ) nil [21191 21281])
            ("launch_ec2" function (:arguments 
              ( ("params_list" variable nil (reparse-symbol function_parameters) [21298 21309])
                ("exp_prefix" variable nil (reparse-symbol function_parameters) [21311 21321])
                ("docker_image" variable nil (reparse-symbol function_parameters) [21323 21335])
                ("code_full_path" variable nil (reparse-symbol function_parameters) [21337 21351])
                ("script" variable nil (reparse-symbol function_parameters) [21368 21374])
                ("aws_config" variable nil (reparse-symbol function_parameters) [21419 21429])
                ("dry" variable nil (reparse-symbol function_parameters) [21436 21439])
                ("terminate_machine" variable nil (reparse-symbol function_parameters) [21447 21464])
                ("use_gpu" variable nil (reparse-symbol function_parameters) [21471 21478])
                ("sync_s3_pkl" variable nil (reparse-symbol function_parameters) [21486 21497])
                ("periodic_sync" variable nil (reparse-symbol function_parameters) [21520 21533])
                ("periodic_sync_interval" variable nil (reparse-symbol function_parameters) [21540 21562]))              ) nil [21283 29277])
            ("S3_CODE_PATH" variable nil nil [29279 29298])
            ("s3_sync_code" function (:arguments 
              ( ("config" variable nil (reparse-symbol function_parameters) [29318 29324])
                ("dry" variable nil (reparse-symbol function_parameters) [29326 29329]))              ) nil [29301 30968])
            ("upload_file_to_s3" function (:arguments 
              ( ("script_content" variable nil (reparse-symbol function_parameters) [30992 31006]))              ) nil [30970 31364])
            ("to_lab_kube_pod" function
               (:documentation "
    :param params: The parameters for the experiment. If logging directory parameters are provided, we will create
    docker volume mapping to make sure that the logging files are created at the correct locations
    :param docker_image: docker image to run the command on
    :param script: script command for running experiment
    :return:
    "
                :arguments 
                  ( ("params" variable nil (reparse-symbol function_parameters) [31395 31401])
                    ("docker_image" variable nil (reparse-symbol function_parameters) [31403 31415])
                    ("code_full_path" variable nil (reparse-symbol function_parameters) [31417 31431])
                    ("script" variable nil (reparse-symbol function_parameters) [31441 31447])
                    ("is_gpu" variable nil (reparse-symbol function_parameters) [31477 31483]))                  )
                nil [31366 37049])
            ("concretize" function (:arguments 
              ( ("maybe_stub" variable nil (reparse-symbol function_parameters) [37066 37076]))              ) nil [37051 38610]))          
      :file "instrument.py"
      :pointmax 38610
      :fsize 38609
      :lastmodtime '(22684 62569 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "console.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [1 11])
            ("time" include nil nil [12 23])
            ("os" include nil nil [24 33])
            ("errno" include nil nil [34 46])
            ("shlex" include nil nil [47 59])
            ("pydoc" include nil nil [60 72])
            ("inspect" include nil nil [73 87])
            ("color2num" variable nil nil [89 233])
            ("colorize" function (:arguments 
              ( ("string" variable nil (reparse-symbol function_parameters) [249 255])
                ("color" variable nil (reparse-symbol function_parameters) [257 262])
                ("bold" variable nil (reparse-symbol function_parameters) [264 268])
                ("highlight" variable nil (reparse-symbol function_parameters) [276 285]))              ) nil [236 493])
            ("mkdir_p" function (:arguments 
              ( ("path" variable nil (reparse-symbol function_parameters) [507 511]))              ) nil [495 702])
            ("log" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [712 713]))              ) nil [704 778])
            ("SimpleMessage" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [859 873])
                            ("self" variable nil (reparse-symbol indented_block_body) [882 902]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [827 831])
                            ("msg" variable nil (reparse-symbol function_parameters) [833 836])
                            ("logger" variable nil (reparse-symbol function_parameters) [838 844]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [814 903])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [922 926]))                          )
                        (reparse-symbol indented_block_body) [908 986])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1004 1008])
                            ("etype" variable nil (reparse-symbol function_parameters) [1010 1015])
                            ("args" variable nil (reparse-symbol function_parameters) [1017 1022]))                          )
                        (reparse-symbol indented_block_body) [991 1197]))                  
                :type "class")
                nil [780 1197])
            ("MESSAGE_DEPTH" variable nil nil [1199 1216])
            ("Message" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1280 1294]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1260 1264])
                            ("msg" variable nil (reparse-symbol function_parameters) [1266 1269]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1247 1295])
                    ("__enter__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1314 1318]))                          )
                        (reparse-symbol indented_block_body) [1300 1511])
                    ("__exit__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1529 1533])
                            ("etype" variable nil (reparse-symbol function_parameters) [1535 1540])
                            ("args" variable nil (reparse-symbol function_parameters) [1542 1547]))                          )
                        (reparse-symbol indented_block_body) [1516 1820]))                  
                :type "class")
                nil [1219 1820])
            ("prefix_log" function (:arguments 
              ( ("prefix" variable nil (reparse-symbol function_parameters) [1837 1843])
                ("logger" variable nil (reparse-symbol function_parameters) [1845 1851]))              ) nil [1822 1898])
            ("tee_log" function (:arguments 
              ( ("file_name" variable nil (reparse-symbol function_parameters) [1912 1921]))              ) nil [1900 2066])
            ("collect_args" function nil nil [2068 2246])
            ("type_hint" function (:arguments 
              ( ("arg_name" variable nil (reparse-symbol function_parameters) [2262 2270])
                ("arg_type" variable nil (reparse-symbol function_parameters) [2272 2280]))              ) nil [2248 2503])
            ("tweak" function (:arguments 
              ( ("fun_or_val" variable nil (reparse-symbol function_parameters) [2515 2525])
                ("identifier" variable nil (reparse-symbol function_parameters) [2527 2537]))              ) nil [2505 2666])
            ("tweakval" function (:arguments 
              ( ("val" variable nil (reparse-symbol function_parameters) [2681 2684])
                ("identifier" variable nil (reparse-symbol function_parameters) [2686 2696]))              ) nil [2668 3056])
            ("tweakfun" function
               (:documentation "Make the arguments (or the function itself) tweakable from command line.
    See tests/test_misc_console.py for examples.

    NOTE: this only works for the initial launched process, since other processes
    will get different argv. What this means is that tweak() calls wrapped in a function
    to be invoked in a child process might not behave properly.
    "
                :arguments 
                  ( ("fun" variable nil (reparse-symbol function_parameters) [3071 3074])
                    ("alt" variable nil (reparse-symbol function_parameters) [3076 3079]))                  )
                nil [3058 5513]))          
      :file "console.py"
      :pointmax 5515
      :fsize 5514
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax '((NAME 1639 . 1648) (IF 1654 . 1656) (ELSE 1671 . 1675) (NAME 1033 . 1042) (IF 1048 . 1050) (ELSE 1065 . 1069) (INDENT_BLOCK 591 . 702) (NEWLINE 590 . 591) (COLON 574 . 575) (TRY 518 . 521) (AS 568 . 570)))
    (semanticdb-table "ext.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("path" include nil nil [40 61])
            ("sys" include nil nil [62 72])
            ("cPickle" include nil nil [73 97])
            ("random" include nil nil [98 111])
            ("rllab.misc.console" include nil nil [112 160])
            ("collections" include nil nil [161 196])
            ("numpy" include nil nil [197 215])
            ("operator" include nil nil [216 231])
            ("sys" code nil nil [233 261])
            ("extract" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [276 277])
                ("keys" variable nil (reparse-symbol function_parameters) [279 284]))              ) nil [264 498])
            ("extract_dict" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [517 518])
                ("keys" variable nil (reparse-symbol function_parameters) [520 525]))              ) nil [500 573])
            ("flatten" function (:arguments 
              ( ("xs" variable nil (reparse-symbol function_parameters) [587 589]))              ) nil [575 630])
            ("compact" function
               (:documentation "
    For a dictionary this removes all None values, and for a list this removes
    all None elements; otherwise it returns the input itself.
    "
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [644 645]))                  )
                nil [632 1003])
            ("cached_function" function (:arguments 
              ( ("inputs" variable nil (reparse-symbol function_parameters) [1025 1031])
                ("outputs" variable nil (reparse-symbol function_parameters) [1033 1040]))              ) nil [1005 1939])
            ("lazydict" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2042 2066])
                            ("self" variable nil (reparse-symbol indented_block_body) [2075 2090]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2017 2021])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [2023 2031]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2004 2091])
                    ("__getitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2112 2116])
                            ("key" variable nil (reparse-symbol function_parameters) [2118 2121]))                          )
                        (reparse-symbol indented_block_body) [2096 2242])
                    ("__setitem__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2263 2267])
                            ("i" variable nil (reparse-symbol function_parameters) [2269 2270])
                            ("y" variable nil (reparse-symbol function_parameters) [2272 2273]))                          )
                        (reparse-symbol indented_block_body) [2247 2299])
                    ("get" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2312 2316])
                            ("key" variable nil (reparse-symbol function_parameters) [2318 2321])
                            ("default" variable nil (reparse-symbol function_parameters) [2323 2330]))                          )
                        (reparse-symbol indented_block_body) [2304 2425])
                    ("set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2438 2442])
                            ("key" variable nil (reparse-symbol function_parameters) [2444 2447])
                            ("value" variable nil (reparse-symbol function_parameters) [2449 2454]))                          )
                        (reparse-symbol indented_block_body) [2430 2494]))                  
                :type "class")
                nil [1976 2494])
            ("iscanl" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [2507 2508])
                ("l" variable nil (reparse-symbol function_parameters) [2510 2511])
                ("base" variable nil (reparse-symbol function_parameters) [2513 2517]))              ) nil [2496 2696])
            ("iscanr" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [2709 2710])
                ("l" variable nil (reparse-symbol function_parameters) [2712 2713])
                ("base" variable nil (reparse-symbol function_parameters) [2715 2719]))              ) nil [2698 2910])
            ("scanl" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [2922 2923])
                ("l" variable nil (reparse-symbol function_parameters) [2925 2926])
                ("base" variable nil (reparse-symbol function_parameters) [2928 2932]))              ) nil [2912 2976])
            ("scanr" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [2988 2989])
                ("l" variable nil (reparse-symbol function_parameters) [2991 2992])
                ("base" variable nil (reparse-symbol function_parameters) [2994 2998]))              ) nil [2978 3042])
            ("compile_function" function (:arguments 
              ( ("inputs" variable nil (reparse-symbol function_parameters) [3065 3071])
                ("outputs" variable nil (reparse-symbol function_parameters) [3078 3085])
                ("updates" variable nil (reparse-symbol function_parameters) [3092 3099])
                ("givens" variable nil (reparse-symbol function_parameters) [3106 3112])
                ("log_name" variable nil (reparse-symbol function_parameters) [3119 3127])
                ("kwargs" variable nil (reparse-symbol function_parameters) [3134 3142]))              ) nil [3044 3548])
            ("new_tensor" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [3565 3569])
                ("ndim" variable nil (reparse-symbol function_parameters) [3571 3575])
                ("dtype" variable nil (reparse-symbol function_parameters) [3577 3582]))              ) nil [3550 3671])
            ("new_tensor_like" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [3693 3697])
                ("arr_like" variable nil (reparse-symbol function_parameters) [3699 3707]))              ) nil [3673 3769])
            ("AttrDict" type
               (:superclasses ("dict")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3842 3889])
                            ("self" variable nil (reparse-symbol indented_block_body) [3898 3918]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3810 3814])
                            ("args" variable nil (reparse-symbol function_parameters) [3816 3821])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3823 3831]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3797 3919]))                  
                :type "class")
                nil [3771 3919])
            ("is_iterable" function (:arguments 
              ( ("obj" variable nil (reparse-symbol function_parameters) [3937 3940]))              ) nil [3921 4017])
            ("truncate_path" function (:arguments 
              ( ("p" variable nil (reparse-symbol function_parameters) [4070 4071])
                ("t" variable nil (reparse-symbol function_parameters) [4073 4074]))              ) nil [4052 4119])
            ("concat_paths" function (:arguments 
              ( ("p1" variable nil (reparse-symbol function_parameters) [4138 4140])
                ("p2" variable nil (reparse-symbol function_parameters) [4142 4144]))              ) nil [4121 4258])
            ("path_len" function (:arguments 
              ( ("p" variable nil (reparse-symbol function_parameters) [4273 4274]))              ) nil [4260 4305])
            ("shuffled" function (:arguments 
              ( ("sequence" variable nil (reparse-symbol function_parameters) [4320 4328]))              ) nil [4307 4598])
            ("seed_" variable nil nil [4600 4612])
            ("set_seed" function (:arguments 
              ( ("seed" variable nil (reparse-symbol function_parameters) [4627 4631]))              ) nil [4614 4898])
            ("get_seed" function nil nil [4900 4933])
            ("flatten_hessian" function
               (:documentation "
    :type cost: Scalar (0-dimensional) Variable.
    :type wrt: Vector (1-dimensional tensor) 'Variable' or list of
               vectors (1-dimensional tensors) Variables

    :param consider_constant: a list of expressions not to backpropagate
        through

    :type disconnected_inputs: string
    :param disconnected_inputs: Defines the behaviour if some of the variables
        in ``wrt`` are not part of the computational graph computing ``cost``
        (or if all links are non-differentiable). The possible values are:
        - 'ignore': considers that the gradient on these parameters is zero.
        - 'warn': consider the gradient zero, and print a warning.
        - 'raise': raise an exception.

    :return: either a instance of Variable or list/tuple of Variables
            (depending upon `wrt`) repressenting the Hessian of the `cost`
            with respect to (elements of) `wrt`. If an element of `wrt` is not
            differentiable with respect to the output, then a zero
            variable is returned. The return value is of same type
            as `wrt`: a list/tuple or TensorVariable in all cases.
    "
                :arguments 
                  ( ("cost" variable nil (reparse-symbol function_parameters) [4955 4959])
                    ("wrt" variable nil (reparse-symbol function_parameters) [4961 4964])
                    ("consider_constant" variable nil (reparse-symbol function_parameters) [4966 4983])
                    ("disconnected_inputs" variable nil (reparse-symbol function_parameters) [5010 5029])
                    ("block_diagonal" variable nil (reparse-symbol function_parameters) [5039 5053]))                  )
                nil [4935 8486])
            ("flatten_tensor_variables" function (:arguments 
              ( ("ts" variable nil (reparse-symbol function_parameters) [8517 8519]))              ) nil [8488 8600])
            ("flatten_shape_dim" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [8624 8629]))              ) nil [8602 8674])
            ("print_lasagne_layer" function (:arguments 
              ( ("layer" variable nil (reparse-symbol function_parameters) [8700 8705])
                ("prefix" variable nil (reparse-symbol function_parameters) [8707 8713]))              ) nil [8676 9281])
            ("unflatten_tensor_variables" function (:arguments 
              ( ("flatarr" variable nil (reparse-symbol function_parameters) [9314 9321])
                ("shapes" variable nil (reparse-symbol function_parameters) [9323 9329])
                ("symb_arrs" variable nil (reparse-symbol function_parameters) [9331 9340]))              ) nil [9283 9756])
            ("sliced_fun" function (:arguments 
              ( ("f" variable nil (reparse-symbol function_parameters) [9818 9819])
                ("n_slices" variable nil (reparse-symbol function_parameters) [9821 9829]))              ) nil [9803 11017])
            ("stdize" function (:arguments 
              ( ("data" variable nil (reparse-symbol function_parameters) [11030 11034])
                ("eps" variable nil (reparse-symbol function_parameters) [11036 11039]))              ) nil [11019 11120]))          
      :file "ext.py"
      :pointmax 11120
      :fsize 11119
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "random.py"
      :major-mode 'python-mode
      :tags 
        '( ("theano.tensor.shared_randomstreams" include nil nil [1 61])
            ("_srng" variable nil nil [62 93])
            ("uniform" function (:arguments 
              ( ("size" variable nil (reparse-symbol function_parameters) [107 111])
                ("low" variable nil (reparse-symbol function_parameters) [116 119])
                ("high" variable nil (reparse-symbol function_parameters) [125 129])
                ("ndim" variable nil (reparse-symbol function_parameters) [135 139]))              ) nil [95 214]))          
      :file "random.py"
      :pointmax 214
      :fsize 213
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "special.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("scipy" include nil nil [20 32])
            ("scipy.signal" include nil nil [33 52])
            ("theano.tensor.nnet" include nil nil [53 78])
            ("theano.tensor" include nil nil [79 105])
            ("theano.tensor.extra_ops" include nil nil [106 136])
            ("collections" include nil nil [137 172])
            ("weighted_sample" function
               (:documentation "
    Return a random item from objects, with the weighting defined by weights
    (which must sum to 1).
    "
                :arguments 
                  ( ("weights" variable nil (reparse-symbol function_parameters) [195 202])
                    ("objects" variable nil (reparse-symbol function_parameters) [204 211]))                  )
                nil [175 537])
            ("softmax" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [582 583]))              ) nil [570 718])
            ("softmax_sym" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [736 737]))              ) nil [720 781])
            ("cat_entropy" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [830 831]))              ) nil [814 876])
            ("cat_perplexity" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [931 932]))              ) nil [912 969])
            ("explained_variance_1d" function (:arguments 
              ( ("ypred" variable nil (reparse-symbol function_parameters) [997 1002])
                ("y" variable nil (reparse-symbol function_parameters) [1004 1005]))              ) nil [971 1330])
            ("to_onehot" function (:arguments 
              ( ("ind" variable nil (reparse-symbol function_parameters) [1346 1349])
                ("dim" variable nil (reparse-symbol function_parameters) [1351 1354]))              ) nil [1332 1413])
            ("to_onehot_n" function (:arguments 
              ( ("inds" variable nil (reparse-symbol function_parameters) [1431 1435])
                ("dim" variable nil (reparse-symbol function_parameters) [1437 1440]))              ) nil [1415 1535])
            ("to_onehot_sym" function (:arguments 
              ( ("ind" variable nil (reparse-symbol function_parameters) [1555 1558])
                ("dim" variable nil (reparse-symbol function_parameters) [1560 1563]))              ) nil [1537 1647])
            ("from_onehot" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [1665 1666]))              ) nil [1649 1700])
            ("from_onehot_n" function (:arguments 
              ( ("v" variable nil (reparse-symbol function_parameters) [1720 1721]))              ) nil [1702 1752])
            ("normalize_updates" function
               (:documentation "
    Compute the updates for normalizing the last (linear) layer of a neural
    network
    "
                :arguments 
                  ( ("old_mean" variable nil (reparse-symbol function_parameters) [1776 1784])
                    ("old_std" variable nil (reparse-symbol function_parameters) [1786 1793])
                    ("new_mean" variable nil (reparse-symbol function_parameters) [1795 1803])
                    ("new_std" variable nil (reparse-symbol function_parameters) [1805 1812])
                    ("old_W" variable nil (reparse-symbol function_parameters) [1814 1819])
                    ("old_b" variable nil (reparse-symbol function_parameters) [1821 1826]))                  )
                nil [1754 2396])
            ("discount_cumsum" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [2418 2419])
                ("discount" variable nil (reparse-symbol function_parameters) [2421 2429]))              ) nil [2398 2716])
            ("discount_return" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [2738 2739])
                ("discount" variable nil (reparse-symbol function_parameters) [2741 2749]))              ) nil [2718 2807])
            ("rk4" function
               (:documentation "
    Integrate 1D or ND system of ODEs using 4-th order Runge-Kutta.
    This is a toy implementation which may be useful if you find
    yourself stranded on a system w/o scipy.  Otherwise use
    :func:`scipy.integrate`.

    *y0*
        initial state vector

    *t*
        sample times

    *derivs*
        returns the derivative of the system and has the
        signature ``dy = derivs(yi, ti)``

    *args*
        additional arguments passed to the derivative function

    *kwargs*
        additional keyword arguments passed to the derivative function

    Example 1 ::

        ## 2D system

        def derivs6(x,t):
            d1 =  x[0] + 2*x[1]
            d2 =  -3*x[0] + 4*x[1]
            return (d1, d2)
        dt = 0.0005
        t = arange(0.0, 2.0, dt)
        y0 = (1,2)
        yout = rk4(derivs6, y0, t)

    Example 2::

        ## 1D system
        alpha = 2
        def derivs(x,t):
            return -alpha*x + exp(-t)

        y0 = 1
        yout = rk4(derivs, y0, t)


    If you have access to scipy, you should probably be using the
    scipy.integrate tools rather than this function.
    "
                :arguments 
                  ( ("derivs" variable nil (reparse-symbol function_parameters) [2817 2823])
                    ("y0" variable nil (reparse-symbol function_parameters) [2825 2827])
                    ("t" variable nil (reparse-symbol function_parameters) [2829 2830])
                    ("args" variable nil (reparse-symbol function_parameters) [2832 2837])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2839 2847]))                  )
                nil [2809 4681]))          
      :file "special.py"
      :pointmax 4683
      :fsize 4682
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "tensor_utils.py"
      :major-mode 'python-mode
      :tags 
        '( ("operator" include nil nil [1 16])
            ("numpy" include nil nil [18 36])
            ("flatten_tensors" function (:arguments 
              ( ("tensors" variable nil (reparse-symbol function_parameters) [59 66]))              ) nil [39 209])
            ("unflatten_tensors" function (:arguments 
              ( ("flattened" variable nil (reparse-symbol function_parameters) [233 242])
                ("tensor_shapes" variable nil (reparse-symbol function_parameters) [244 257]))              ) nil [211 458])
            ("pad_tensor" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [475 476])
                ("max_len" variable nil (reparse-symbol function_parameters) [478 485]))              ) nil [460 615])
            ("pad_tensor_dict" function (:arguments 
              ( ("tensor_dict" variable nil (reparse-symbol function_parameters) [637 648])
                ("max_len" variable nil (reparse-symbol function_parameters) [650 657]))              ) nil [617 919])
            ("high_res_normalize" function (:arguments 
              ( ("probs" variable nil (reparse-symbol function_parameters) [944 949]))              ) nil [921 1024])
            ("stack_tensor_list" function (:arguments 
              ( ("tensor_list" variable nil (reparse-symbol function_parameters) [1048 1059]))              ) nil [1026 1095])
            ("stack_tensor_dict_list" function
               (:documentation "
    Stack a list of dictionaries of {tensors or dictionary of tensors}.
    :param tensor_dict_list: a list of dictionaries of {tensors or dictionary of tensors}.
    :return: a dictionary of {stacked tensors or dictionary of stacked tensors}
    "
                :arguments 
                  ( ("tensor_dict_list" variable nil (reparse-symbol function_parameters) [1285 1301]))                  )
                nil [1258 1905])
            ("concat_tensor_list" function (:arguments 
              ( ("tensor_list" variable nil (reparse-symbol function_parameters) [1930 1941]))              ) nil [1907 1991])
            ("concat_tensor_dict_list" function (:arguments 
              ( ("tensor_dict_list" variable nil (reparse-symbol function_parameters) [2021 2037]))              ) nil [1993 2384])
            ("split_tensor_dict_list" function (:arguments 
              ( ("tensor_dict" variable nil (reparse-symbol function_parameters) [2413 2424]))              ) nil [2386 2777])
            ("truncate_tensor_list" function (:arguments 
              ( ("tensor_list" variable nil (reparse-symbol function_parameters) [2804 2815])
                ("truncated_len" variable nil (reparse-symbol function_parameters) [2817 2830]))              ) nil [2779 2872])
            ("truncate_tensor_dict" function (:arguments 
              ( ("tensor_dict" variable nil (reparse-symbol function_parameters) [2899 2910])
                ("truncated_len" variable nil (reparse-symbol function_parameters) [2912 2925]))              ) nil [2874 3167]))          
      :file "tensor_utils.py"
      :pointmax 3167
      :fsize 3166
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "overrides.py"
      :major-mode 'python-mode
      :tags 
        '( ("sys" include nil nil [593 603])
            ("dis" include nil nil [604 614])
            ("__VERSION__" variable nil nil [615 634])
            ("if" code nil nil [637 674])
            ("overrides" function
               (:documentation "Decorator to indicate that the decorated method overrides a method in superclass.
    The decorator code is executed while loading class. Using this method should have minimal runtime performance
    implications.

    This is based on my idea about how to do this and fwc:s highly improved algorithm for the implementation
    fwc:s algorithm : http://stackoverflow.com/a/14631397/308189
    my answer : http://stackoverflow.com/a/8313042/308189

    How to use:
    from overrides import overrides

    class SuperClass(object):

        def method(self):
            return 2

    class SubClass(SuperClass):

        @overrides
        def method(self):
            return 1

    :raises  AssertionError if no match in super classes for the method name
    :return  method with possibly added (if the method doesn't have one) docstring from super class
    "
                :arguments 
                  ( ("method" variable nil (reparse-symbol function_parameters) [689 695]))                  )
                nil [675 1923])
            ("_get_base_classes" function (:arguments 
              ( ("frame" variable nil (reparse-symbol function_parameters) [1946 1951])
                ("namespace" variable nil (reparse-symbol function_parameters) [1953 1962]))              ) nil [1924 2086])
            ("_get_base_class_names" function
               (:documentation "Get baseclass names from the code object"
                :arguments 
                  ( ("frame" variable nil (reparse-symbol function_parameters) [2113 2118]))                  )
                nil [2087 3306])
            ("_get_base_class" function (:arguments 
              ( ("components" variable nil (reparse-symbol function_parameters) [3327 3337])
                ("namespace" variable nil (reparse-symbol function_parameters) [3339 3348]))              ) nil [3307 3476]))          
      :file "overrides.py"
      :pointmax 3476
      :fsize 3475
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "krylov.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("EPS" variable nil nil [21 51])
            ("cg" function
               (:documentation "
    Demmel p 312
    "
                :arguments 
                  ( ("f_Ax" variable nil (reparse-symbol function_parameters) [61 65])
                    ("b" variable nil (reparse-symbol function_parameters) [67 68])
                    ("cg_iters" variable nil (reparse-symbol function_parameters) [70 78])
                    ("callback" variable nil (reparse-symbol function_parameters) [83 91])
                    ("verbose" variable nil (reparse-symbol function_parameters) [98 105])
                    ("residual_tol" variable nil (reparse-symbol function_parameters) [113 125]))                  )
                nil [54 956])
            ("preconditioned_cg" function
               (:documentation "
    Demmel p 318
    "
                :arguments 
                  ( ("f_Ax" variable nil (reparse-symbol function_parameters) [980 984])
                    ("f_Minvx" variable nil (reparse-symbol function_parameters) [986 993])
                    ("b" variable nil (reparse-symbol function_parameters) [995 996])
                    ("cg_iters" variable nil (reparse-symbol function_parameters) [998 1006])
                    ("callback" variable nil (reparse-symbol function_parameters) [1011 1019])
                    ("verbose" variable nil (reparse-symbol function_parameters) [1026 1033])
                    ("residual_tol" variable nil (reparse-symbol function_parameters) [1041 1053]))                  )
                nil [958 1838])
            ("test_cg" function nil nil [1840 2437])
            ("lanczos" function
               (:documentation "
    Runs Lanczos algorithm to generate a orthogonal basis for the Krylov subspace
    b, Ab, A^2b, ...
    as well as the upper hessenberg matrix T = Q^T A Q

    from Demmel ch 6
    "
                :arguments 
                  ( ("f_Ax" variable nil (reparse-symbol function_parameters) [2451 2455])
                    ("b" variable nil (reparse-symbol function_parameters) [2457 2458])
                    ("k" variable nil (reparse-symbol function_parameters) [2460 2461]))                  )
                nil [2439 3308])
            ("lanczos2" function
               (:documentation "
    Runs Lanczos algorithm to generate a orthogonal basis for the Krylov subspace
    b, Ab, A^2b, ...
    as well as the upper hessenberg matrix T = Q^T A Q
    from Demmel ch 6
    "
                :arguments 
                  ( ("f_Ax" variable nil (reparse-symbol function_parameters) [3323 3327])
                    ("b" variable nil (reparse-symbol function_parameters) [3329 3330])
                    ("k" variable nil (reparse-symbol function_parameters) [3332 3333])
                    ("residual_thresh" variable nil (reparse-symbol function_parameters) [3335 3350]))                  )
                nil [3310 4184])
            ("make_tridiagonal" function (:arguments 
              ( ("alphas" variable nil (reparse-symbol function_parameters) [4207 4213])
                ("betas" variable nil (reparse-symbol function_parameters) [4215 4220]))              ) nil [4186 4457])
            ("tridiagonal_eigenvalues" function (:arguments 
              ( ("alphas" variable nil (reparse-symbol function_parameters) [4487 4493])
                ("betas" variable nil (reparse-symbol function_parameters) [4495 4500]))              ) nil [4459 4576])
            ("test_lanczos" function nil nil [4578 5667])
            ("if" code nil nil [5669 5729]))          
      :file "krylov.py"
      :pointmax 5729
      :fsize 5728
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "meta.py"
      :major-mode 'python-mode
      :tags nil
      :file "meta.py"
      :pointmax 1
      :fsize 0
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "mako_utils.py"
      :major-mode 'python-mode
      :tags 
        '( ("compute_rect_vertices" function (:arguments 
              ( ("fromp" variable nil (reparse-symbol function_parameters) [28 33])
                ("to" variable nil (reparse-symbol function_parameters) [35 37])
                ("radius" variable nil (reparse-symbol function_parameters) [39 45]))              ) nil [2 574]))          
      :file "mako_utils.py"
      :pointmax 575
      :fsize 574
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax '((NAME 357 . 359) (IF 366 . 368) (ELSE 395 . 399)))
    (semanticdb-table "autoargs.py"
      :major-mode 'python-mode
      :tags 
        '( ("rllab.misc.console" include nil nil [1 40])
            ("inspect" include nil nil [41 55])
            ("arg" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [137 141])
                ("type" variable nil (reparse-symbol function_parameters) [143 147])
                ("help" variable nil (reparse-symbol function_parameters) [154 158])
                ("nargs" variable nil (reparse-symbol function_parameters) [165 170])
                ("mapper" variable nil (reparse-symbol function_parameters) [177 183])
                ("choices" variable nil (reparse-symbol function_parameters) [190 197])
                ("prefix" variable nil (reparse-symbol function_parameters) [212 218]))              ) nil [129 581])
            ("prefix" function (:arguments 
              ( ("prefix_" variable nil (reparse-symbol function_parameters) [594 601]))              ) nil [583 735])
            ("_get_prefix" function (:arguments 
              ( ("cls" variable nil (reparse-symbol function_parameters) [753 756]))              ) nil [737 1285])
            ("_get_info" function (:arguments 
              ( ("cls_or_fn" variable nil (reparse-symbol function_parameters) [1301 1310]))              ) nil [1287 1599])
            ("_t_or_f" function (:arguments 
              ( ("s" variable nil (reparse-symbol function_parameters) [1613 1614]))              ) nil [1601 1820])
            ("add_args" function (:arguments 
              ( ("_" variable nil (reparse-symbol function_parameters) [1835 1836]))              ) nil [1822 2397])
            ("new_from_args" function (:arguments 
              ( ("_" variable nil (reparse-symbol function_parameters) [2417 2418]))              ) nil [2399 3327])
            ("inherit" function (:arguments 
              ( ("base_func" variable nil (reparse-symbol function_parameters) [3341 3350]))              ) nil [3329 3607])
            ("get_all_parameters" function (:arguments 
              ( ("cls" variable nil (reparse-symbol function_parameters) [3632 3635])
                ("parsed_args" variable nil (reparse-symbol function_parameters) [3637 3648]))              ) nil [3609 4546]))          
      :file "autoargs.py"
      :pointmax 4546
      :fsize 4545
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!Dropbox!PHD_research!projects!RLFPS!rllab!rllab!misc!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
