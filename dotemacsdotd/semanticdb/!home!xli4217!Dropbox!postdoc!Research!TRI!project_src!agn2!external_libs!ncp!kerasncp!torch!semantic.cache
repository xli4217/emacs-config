;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("torch" include nil nil [587 599])
            ("torch.nn" include nil nil [600 621])
            ("numpy" include nil nil [622 640])
            ("LTCCell" type
               (:superclasses ("nn.Module")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [868 899])
                            ("if" code nil (reparse-symbol indented_block_body) [908 982])
                            ("if" code nil (reparse-symbol indented_block_body) [990 1196])
                            ("self" variable nil (reparse-symbol indented_block_body) [1204 1538])
                            ("self" variable nil (reparse-symbol indented_block_body) [1547 1568])
                            ("self" variable nil (reparse-symbol indented_block_body) [1577 1612])
                            ("self" variable nil (reparse-symbol indented_block_body) [1621 1658])
                            ("self" variable nil (reparse-symbol indented_block_body) [1667 1698])
                            ("self" variable nil (reparse-symbol indented_block_body) [1707 1730])
                            ("self" code nil (reparse-symbol indented_block_body) [1739 1766]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [695 699])
                            ("wiring" variable nil (reparse-symbol function_parameters) [709 715])
                            ("in_features" variable nil (reparse-symbol function_parameters) [725 736])
                            ("input_mapping" variable nil (reparse-symbol function_parameters) [751 764])
                            ("output_mapping" variable nil (reparse-symbol function_parameters) [783 797])
                            ("ode_unfolds" variable nil (reparse-symbol function_parameters) [816 827])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [839 846]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [673 1767])
                    ("state_size" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1801 1805]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1772 1842])
                    ("sensory_size" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1878 1882]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1847 1923])
                    ("motor_size" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1957 1961]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1928 2003])
                    ("output_size" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2038 2042]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2008 2076])
                    ("synapse_count" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2113 2117]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2081 2181])
                    ("sensory_synapse_count" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2226 2230]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2186 2294])
                    ("add_weight" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2314 2318])
                            ("name" variable nil (reparse-symbol function_parameters) [2320 2324])
                            ("init_value" variable nil (reparse-symbol function_parameters) [2326 2336]))                          )
                        (reparse-symbol indented_block_body) [2299 2452])
                    ("_get_init_value" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2477 2481])
                            ("shape" variable nil (reparse-symbol function_parameters) [2483 2488])
                            ("param_name" variable nil (reparse-symbol function_parameters) [2490 2500]))                          )
                        (reparse-symbol indented_block_body) [2457 2714])
                    ("_allocate_parameters" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2744 2748]))                          )
                        (reparse-symbol indented_block_body) [2719 5865])
                    ("_sigmoid" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5883 5887])
                            ("v_pre" variable nil (reparse-symbol function_parameters) [5889 5894])
                            ("mu" variable nil (reparse-symbol function_parameters) [5896 5898])
                            ("sigma" variable nil (reparse-symbol function_parameters) [5900 5905]))                          )
                        (reparse-symbol indented_block_body) [5870 6054])
                    ("_ode_solver" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6075 6079])
                            ("inputs" variable nil (reparse-symbol function_parameters) [6081 6087])
                            ("state" variable nil (reparse-symbol function_parameters) [6089 6094])
                            ("elapsed_time" variable nil (reparse-symbol function_parameters) [6096 6108]))                          )
                        (reparse-symbol indented_block_body) [6059 7859])
                    ("_map_inputs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7880 7884])
                            ("inputs" variable nil (reparse-symbol function_parameters) [7886 7892]))                          )
                        (reparse-symbol indented_block_body) [7864 8125])
                    ("_map_outputs" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8147 8151])
                            ("state" variable nil (reparse-symbol function_parameters) [8153 8158]))                          )
                        (reparse-symbol indented_block_body) [8130 8526])
                    ("_clip" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8541 8545])
                            ("w" variable nil (reparse-symbol function_parameters) [8547 8548]))                          )
                        (reparse-symbol indented_block_body) [8531 8585])
                    ("apply_weight_constraints" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8619 8623]))                          )
                        (reparse-symbol indented_block_body) [8590 8924])
                    ("forward" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8941 8945])
                            ("inputs" variable nil (reparse-symbol function_parameters) [8947 8953])
                            ("states" variable nil (reparse-symbol function_parameters) [8955 8961]))                          )
                        (reparse-symbol indented_block_body) [8929 9245]))                  
                :type "class")
                nil [643 9245]))          
      :file "ltc_cell.py"
      :pointmax 9245
      :fsize 9244
      :lastmodtime '(24677 2588 404086 19000)
      :unmatched-syntax nil))
  :file "!home!xli4217!Dropbox!postdoc!Research!TRI!project_src!agn2!external_libs!ncp!kerasncp!torch!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
