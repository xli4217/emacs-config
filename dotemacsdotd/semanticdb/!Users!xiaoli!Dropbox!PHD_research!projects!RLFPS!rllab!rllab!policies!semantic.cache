;; Object policies/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "policies/"
  :tables
  (list
    (semanticdb-table "categorical_gru_policy.py"
      :major-mode 'python-mode
      :tags 
        '( ("lasagne.layers" include nil nil [1 27])
            ("lasagne.nonlinearities" include nil nil [28 63])
            ("numpy" include nil nil [64 82])
            ("theano.tensor" include nil nil [83 109])
            ("rllab.core.lasagne_powered" include nil nil [111 164])
            ("rllab.core.network" include nil nil [165 206])
            ("rllab.core.serializable" include nil nil [207 255])
            ("rllab.distributions.recurrent_categorical" include nil nil [256 330])
            ("rllab.misc" include nil nil [331 357])
            ("rllab.spaces" include nil nil [358 391])
            ("rllab.misc" include nil nil [392 422])
            ("rllab.misc.overrides" include nil nil [423 465])
            ("rllab.policies.base" include nil nil [466 514])
            ("CategoricalGRUPolicy" type
               (:superclasses ("StochasticPolicy" "LasagnePowered" "Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        :param env_spec: A spec for the env.
        :param hidden_sizes: list of sizes for the fully connected hidden layers
        :param hidden_nonlinearity: nonlinearity used for each hidden layer
        :return:
        \"\"\"" code nil (reparse-symbol indented_block_body) [772 1006])
                            ("assert" code nil (reparse-symbol indented_block_body) [1015 1065])
                            ("Serializable" code nil (reparse-symbol indented_block_body) [1074 1113])
                            ("super" code nil (reparse-symbol indented_block_body) [1122 1174])
                            ("assert" code nil (reparse-symbol indented_block_body) [1184 1213])
                            ("if" code nil (reparse-symbol indented_block_body) [1223 1425])
                            ("prob_network" variable nil (reparse-symbol indented_block_body) [1434 1692])
                            ("self" variable nil (reparse-symbol indented_block_body) [1702 1735])
                            ("self" variable nil (reparse-symbol indented_block_body) [1744 1793])
                            ("self" variable nil (reparse-symbol indented_block_body) [1803 2139])
                            ("self" variable nil (reparse-symbol indented_block_body) [2149 2173])
                            ("self" variable nil (reparse-symbol indented_block_body) [2182 2206])
                            ("self" variable nil (reparse-symbol indented_block_body) [2215 2248])
                            ("self" variable nil (reparse-symbol indented_block_body) [2257 2315])
                            ("self" code nil (reparse-symbol indented_block_body) [2325 2337])
                            ("LasagnePowered" code nil (reparse-symbol indented_block_body) [2347 2405]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [623 627])
                            ("env_spec" variable nil (reparse-symbol function_parameters) [641 649])
                            ("hidden_sizes" variable nil (reparse-symbol function_parameters) [663 675])
                            ("state_include_action" variable nil (reparse-symbol function_parameters) [695 715])
                            ("hidden_nonlinearity" variable nil (reparse-symbol function_parameters) [734 753]))                          
                        :documentation "
        :param env_spec: A spec for the env.
        :param hidden_sizes: list of sizes for the fully connected hidden layers
        :param hidden_nonlinearity: nonlinearity used for each hidden layer
        :return:
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [597 2406])
                    ("dist_info_sym" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2444 2448])
                            ("obs_var" variable nil (reparse-symbol function_parameters) [2450 2457])
                            ("state_info_vars" variable nil (reparse-symbol function_parameters) [2459 2474]))                          
                        :decorators 
                          ( ("overrides" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2411 3048])
                    ("reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3063 3067]))                          )
                        (reparse-symbol indented_block_body) [3053 3177])
                    ("get_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3476 3480])
                            ("observation" variable nil (reparse-symbol function_parameters) [3482 3493]))                          
                        :decorators 
                          ( ("overrides" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3446 4443])
                    ("recurrent" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4491 4495]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil)
                            ("overrides" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4448 4518])
                    ("distribution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4554 4558]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4523 4587])
                    ("state_info_keys" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4626 4630]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4592 4743]))                  
                :type "class")
                nil [517 4743]))          
      :file "categorical_gru_policy.py"
      :pointmax 4743
      :fsize 4742
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "base.py"
      :major-mode 'python-mode
      :tags 
        '( ("rllab.core.parameterized" include nil nil [1 51])
            ("Policy" type
               (:superclasses ("Parameterized")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [125 150]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [100 104])
                            ("env_spec" variable nil (reparse-symbol function_parameters) [106 114]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [87 151])
                    ("get_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [216 220])
                            ("observation" variable nil (reparse-symbol function_parameters) [222 233]))                          )
                        (reparse-symbol indented_block_body) [201 270])
                    ("reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [285 289]))                          )
                        (reparse-symbol indented_block_body) [275 305])
                    ("observation_space" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [346 350]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [310 401])
                    ("action_space" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [437 441]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [406 487])
                    ("recurrent" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [520 524]))                          
                        :documentation "
        Indicates whether the policy is recurrent.
        :return:
        ")
                        (reparse-symbol indented_block_body) [492 640])
                    ("log_diagnostics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [665 669])
                            ("paths" variable nil (reparse-symbol function_parameters) [671 676]))                          
                        :documentation "
        Log extra information per iteration based on the collected paths
        ")
                        (reparse-symbol indented_block_body) [645 789])
                    ("state_info_keys" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [828 832]))                          
                        :documentation "
        Return keys for the information related to the policy's state when taking an action.
        :return:
        ")
                        (reparse-symbol indented_block_body) [794 991])
                    ("terminate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1010 1014]))                          
                        :documentation "
        Clean up operation
        ")
                        (reparse-symbol indented_block_body) [996 1081]))                  
                :type "class")
                nil [54 1081])
            ("StochasticPolicy" type
               (:superclasses ("Policy")
                :members 
                  ( ("distribution" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1611 1615]))                          
                        :documentation "
        :rtype Distribution
        ")
                        (reparse-symbol indented_block_body) [1580 1704])
                    ("dist_info_sym" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1981 1985])
                            ("obs_var" variable nil (reparse-symbol function_parameters) [1987 1994])
                            ("state_info_vars" variable nil (reparse-symbol function_parameters) [1996 2011]))                          
                        :documentation "
        Return the symbolic distribution information about the actions.
        :param obs_var: symbolic variable for observations
        :param state_info_vars: a dictionary whose values should contain information about the state of the policy at
        the time it received the observation
        :return:
        ")
                        (reparse-symbol indented_block_body) [1963 2383])
                    ("dist_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2402 2406])
                            ("obs" variable nil (reparse-symbol function_parameters) [2408 2411])
                            ("state_infos" variable nil (reparse-symbol function_parameters) [2413 2424]))                          
                        :documentation "
        Return the distribution information about the actions.
        :param obs_var: observation values
        :param state_info_vars: a dictionary whose values should contain information about the state of the policy at
        the time it received the observation
        :return:
        ")
                        (reparse-symbol indented_block_body) [2388 2771]))                  
                :type "class")
                nil [1083 2771]))          
      :file "base.py"
      :pointmax 2771
      :fsize 2770
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "uniform_control_policy.py"
      :major-mode 'python-mode
      :tags 
        '( ("rllab.core.parameterized" include nil nil [1 51])
            ("rllab.core.serializable" include nil nil [52 100])
            ("rllab.policies.base" include nil nil [101 139])
            ("rllab.misc.overrides" include nil nil [140 182])
            ("UniformControlPolicy" type
               (:superclasses ("Policy" "Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("Serializable" code nil (reparse-symbol indented_block_body) [308 347])
                            ("super" code nil (reparse-symbol indented_block_body) [356 417]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [265 269])
                            ("env_spec" variable nil (reparse-symbol function_parameters) [283 291]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [239 418])
                    ("get_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [453 457])
                            ("observation" variable nil (reparse-symbol function_parameters) [459 470]))                          
                        :decorators 
                          ( ("overrides" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [423 523]))                  
                :type "class")
                nil [185 523]))          
      :file "uniform_control_policy.py"
      :pointmax 524
      :fsize 523
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "gaussian_mlp_policy.py"
      :major-mode 'python-mode
      :tags 
        '( ("lasagne" include nil nil [1 15])
            ("lasagne.layers" include nil nil [16 42])
            ("lasagne.nonlinearities" include nil nil [43 78])
            ("numpy" include nil nil [79 97])
            ("rllab.core.lasagne_layers" include nil nil [99 147])
            ("rllab.core.lasagne_powered" include nil nil [148 201])
            ("rllab.core.network" include nil nil [202 236])
            ("rllab.spaces" include nil nil [237 265])
            ("rllab.core.serializable" include nil nil [267 315])
            ("rllab.policies.base" include nil nil [316 364])
            ("rllab.misc.overrides" include nil nil [365 407])
            ("rllab.misc" include nil nil [408 437])
            ("rllab.misc" include nil nil [438 464])
            ("rllab.distributions.diagonal_gaussian" include nil nil [465 531])
            ("theano.tensor" include nil nil [532 558])
            ("GaussianMLPPolicy" type
               (:superclasses ("StochasticPolicy" "LasagnePowered" "Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        :param env_spec:
        :param hidden_sizes: list of sizes for the fully-connected hidden layers
        :param learn_std: Is std trainable
        :param init_std: Initial std
        :param adaptive_std:
        :param std_share_network:
        :param std_hidden_sizes: list of sizes for the fully-connected layers for std
        :param min_std: whether to make sure that the std is at least some threshold value, to avoid numerical issues
        :param std_hidden_nonlinearity:
        :param hidden_nonlinearity: nonlinearity used for each hidden layer
        :param output_nonlinearity: nonlinearity for the output layer
        :param mean_network: custom network for the output mean
        :param std_network: custom network for the output log std
        :return:
        \"\"\"" code nil (reparse-symbol indented_block_body) [1115 1916])
                            ("Serializable" code nil (reparse-symbol indented_block_body) [1925 1964])
                            ("assert" code nil (reparse-symbol indented_block_body) [1973 2018])
                            ("obs_dim" variable nil (reparse-symbol indented_block_body) [2028 2073])
                            ("action_dim" variable nil (reparse-symbol indented_block_body) [2082 2125])
                            ("if" code nil (reparse-symbol indented_block_body) [2160 2467])
                            ("self" variable nil (reparse-symbol indented_block_body) [2475 2508])
                            ("l_mean" variable nil (reparse-symbol indented_block_body) [2518 2552])
                            ("obs_var" variable nil (reparse-symbol indented_block_body) [2561 2593])
                            ("if" code nil (reparse-symbol indented_block_body) [2603 3451])
                            ("self" variable nil (reparse-symbol indented_block_body) [3460 3482])
                            ("mean_var, log_std_var" code nil (reparse-symbol indented_block_body) [3492 3549])
                            ("if" code nil (reparse-symbol indented_block_body) [3559 3655])
                            ("self, self" code nil (reparse-symbol indented_block_body) [3664 3721])
                            ("self" variable nil (reparse-symbol indented_block_body) [3731 3752])
                            ("self" variable nil (reparse-symbol indented_block_body) [3761 3788])
                            ("self" variable nil (reparse-symbol indented_block_body) [3798 3839])
                            ("LasagnePowered" code nil (reparse-symbol indented_block_body) [3849 3899])
                            ("super" code nil (reparse-symbol indented_block_body) [3908 3957])
                            ("self" variable nil (reparse-symbol indented_block_body) [3967 4088]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [664 668])
                            ("env_spec" variable nil (reparse-symbol function_parameters) [682 690])
                            ("hidden_sizes" variable nil (reparse-symbol function_parameters) [704 716])
                            ("learn_std" variable nil (reparse-symbol function_parameters) [739 748])
                            ("init_std" variable nil (reparse-symbol function_parameters) [767 775])
                            ("adaptive_std" variable nil (reparse-symbol function_parameters) [793 805])
                            ("std_share_network" variable nil (reparse-symbol function_parameters) [825 842])
                            ("std_hidden_sizes" variable nil (reparse-symbol function_parameters) [862 878])
                            ("min_std" variable nil (reparse-symbol function_parameters) [901 908])
                            ("std_hidden_nonlinearity" variable nil (reparse-symbol function_parameters) [927 950])
                            ("hidden_nonlinearity" variable nil (reparse-symbol function_parameters) [972 991])
                            ("output_nonlinearity" variable nil (reparse-symbol function_parameters) [1013 1032])
                            ("mean_network" variable nil (reparse-symbol function_parameters) [1051 1063])
                            ("std_network" variable nil (reparse-symbol function_parameters) [1082 1093]))                          
                        :documentation "
        :param env_spec:
        :param hidden_sizes: list of sizes for the fully-connected hidden layers
        :param learn_std: Is std trainable
        :param init_std: Initial std
        :param adaptive_std:
        :param std_share_network:
        :param std_hidden_sizes: list of sizes for the fully-connected layers for std
        :param min_std: whether to make sure that the std is at least some threshold value, to avoid numerical issues
        :param std_hidden_nonlinearity:
        :param hidden_nonlinearity: nonlinearity used for each hidden layer
        :param output_nonlinearity: nonlinearity for the output layer
        :param mean_network: custom network for the output mean
        :param std_network: custom network for the output log std
        :return:
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [638 4089])
                    ("dist_info_sym" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4112 4116])
                            ("obs_var" variable nil (reparse-symbol function_parameters) [4118 4125])
                            ("state_info_vars" variable nil (reparse-symbol function_parameters) [4127 4142]))                          )
                        (reparse-symbol indented_block_body) [4094 4402])
                    ("get_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4437 4441])
                            ("observation" variable nil (reparse-symbol function_parameters) [4443 4454]))                          
                        :decorators 
                          ( ("overrides" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4407 4735])
                    ("get_actions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4756 4760])
                            ("observations" variable nil (reparse-symbol function_parameters) [4762 4774]))                          )
                        (reparse-symbol indented_block_body) [4740 5049])
                    ("get_reparam_action_sym" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5081 5085])
                            ("obs_var" variable nil (reparse-symbol function_parameters) [5087 5094])
                            ("action_var" variable nil (reparse-symbol function_parameters) [5096 5106])
                            ("old_dist_info_vars" variable nil (reparse-symbol function_parameters) [5108 5126]))                          
                        :documentation "
        Given observations, old actions, and distribution of old actions, return a symbolically reparameterized
        representation of the actions in terms of the policy parameters
        :param obs_var:
        :param action_var:
        :param old_dist_info_vars:
        :return:
        ")
                        (reparse-symbol indented_block_body) [5054 5898])
                    ("log_diagnostics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5923 5927])
                            ("paths" variable nil (reparse-symbol function_parameters) [5929 5934]))                          )
                        (reparse-symbol indented_block_body) [5903 6095])
                    ("distribution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6131 6135]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [6100 6164]))                  
                :type "class")
                nil [561 6164]))          
      :file "gaussian_mlp_policy.py"
      :pointmax 6164
      :fsize 6163
      :lastmodtime '(22555 31253 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "lin_gauss_init.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\" Initializations for linear Gaussian controllers. \"\"\"" code nil nil [1 57])
            ("copy" include nil nil [58 69])
            ("numpy" include nil nil [70 88])
            ("scipy" include nil nil [89 107])
            ("gps.algorithm.dynamics.dynamics_utils" include nil nil [109 173])
            ("init_lqr" function
               (:documentation "
    Return initial gains for a time-varying linear Gaussian controller
    that tries to hold the initial position.
    "
                :arguments 
                  ( ("INIT_LG_LQR" variable nil (reparse-symbol function_parameters) [239 250])
                    ("env_spec" variable nil (reparse-symbol function_parameters) [252 260]))                  )
                nil [226 3956])
            ("init_pd" function
               (:documentation "
    This function initializes the linear-Gaussian controller as a
    proportional-derivative (PD) controller with Gaussian noise. The
    position gains are controlled by the variable pos_gains, velocity
    gains are controlled by pos_gains*vel_gans_mult.
    "
                :arguments 
                  ( ("hyperparams" variable nil (reparse-symbol function_parameters) [3991 4002]))                  )
                nil [3979 5255]))          
      :file "lin_gauss_init.py"
      :pointmax 5255
      :fsize 5254
      :lastmodtime '(22646 47127 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "lin_gauss_policy.py"
      :major-mode 'python-mode
      :tags 
        '( ("\"\"\" This file defines the linear Gaussian policy class. \"\"\"" code nil nil [1 60])
            ("numpy" include nil nil [61 79])
            ("gps.utility.general_utils" include nil nil [81 130])
            ("rllab.policies.base" include nil nil [132 180])
            ("rllab.core.serializable" include nil nil [181 229])
            ("rllab.misc.overrides" include nil nil [230 272])
            ("LinearGaussianPolicy" type
               (:documentation "
    Time-varying linear Gaussian policy.
    U = K*x + k + noise, where noise ~ N(0, chol_pol_covar)

    adapt gps LinearGaussianPolicy to rllab
    "
                :superclasses ("StochasticPolicy" "Serializable")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("Serializable" code nil (reparse-symbol indented_block_body) [702 741])
                            ("super" code nil (reparse-symbol indented_block_body) [750 802])
                            ("self" variable nil (reparse-symbol indented_block_body) [890 909])
                            ("self" variable nil (reparse-symbol indented_block_body) [918 938])
                            ("self" variable nil (reparse-symbol indented_block_body) [947 967])
                            ("check_shape" code nil (reparse-symbol indented_block_body) [977 1010])
                            ("check_shape" code nil (reparse-symbol indented_block_body) [1019 1069])
                            ("check_shape" code nil (reparse-symbol indented_block_body) [1078 1133])
                            ("check_shape" code nil (reparse-symbol indented_block_body) [1142 1196])
                            ("self" variable nil (reparse-symbol indented_block_body) [1206 1216])
                            ("self" variable nil (reparse-symbol indented_block_body) [1225 1235])
                            ("self" variable nil (reparse-symbol indented_block_body) [1244 1270])
                            ("self" variable nil (reparse-symbol indented_block_body) [1279 1315])
                            ("self" variable nil (reparse-symbol indented_block_body) [1324 1358]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [526 530])
                            ("env_spec" variable nil (reparse-symbol function_parameters) [544 552])
                            ("K" variable nil (reparse-symbol function_parameters) [566 567])
                            ("k" variable nil (reparse-symbol function_parameters) [581 582])
                            ("pol_covar" variable nil (reparse-symbol function_parameters) [596 605])
                            ("chol_pol_covar" variable nil (reparse-symbol function_parameters) [619 633])
                            ("inv_pol_covar" variable nil (reparse-symbol function_parameters) [647 660]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [500 1359])
                    ("get_action" function
                       (:parent "dummy"
                        :decorators 
                          ( ("overrides" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1394 1398])
                            ("x" variable nil (reparse-symbol function_parameters) [1400 1401])
                            ("t" variable nil (reparse-symbol function_parameters) [1403 1404])
                            ("noise" variable nil (reparse-symbol function_parameters) [1406 1411]))                          
                        :documentation "
        Return an action for a state.
        Args:
            x: State vector.
            obs: Observation vector.
            t: Time step.
            noise: Action noise. This will be scaled by the variance.
        ")
                        (reparse-symbol indented_block_body) [1364 1795])
                    ("fold_k" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1811 1815])
                            ("noise" variable nil (reparse-symbol function_parameters) [1817 1822]))                          
                        :documentation "
        Fold noise into k.
        Args:
            noise: A T x Du noise vector with mean 0 and variance 1.
        Returns:
            k: A T x dU bias vector.
        ")
                        (reparse-symbol indented_block_body) [1800 2206])
                    ("nans_like" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2225 2229]))                          
                        :documentation "
        Returns:
            A new linear Gaussian policy object with the same dimensions
            but all values filled with NaNs.
        ")
                        (reparse-symbol indented_block_body) [2211 2828])
                    ("get_param_values" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2854 2858]))                          )
                        (reparse-symbol indented_block_body) [2833 3111])
                    ("set_param_values" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3145 3149])
                            ("params_dict" variable nil (reparse-symbol function_parameters) [3151 3162]))                          )
                        (reparse-symbol indented_block_body) [3124 3401])
                    ("distribution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3449 3453]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3418 3476])
                    ("dist_info_sym" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3499 3503])
                            ("obs_var" variable nil (reparse-symbol function_parameters) [3505 3512])
                            ("state_info_vars" variable nil (reparse-symbol function_parameters) [3514 3529]))                          )
                        (reparse-symbol indented_block_body) [3481 3557])
                    ("dist_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3576 3580])
                            ("obs" variable nil (reparse-symbol function_parameters) [3582 3585])
                            ("state_infos" variable nil (reparse-symbol function_parameters) [3587 3598]))                          )
                        (reparse-symbol indented_block_body) [3562 3620]))                  
                :type "class")
                nil [274 3620]))          
      :file "lin_gauss_policy.py"
      :pointmax 3620
      :fsize 3619
      :lastmodtime '(22646 47107 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!Dropbox!PHD_research!projects!RLFPS!rllab!rllab!policies!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
