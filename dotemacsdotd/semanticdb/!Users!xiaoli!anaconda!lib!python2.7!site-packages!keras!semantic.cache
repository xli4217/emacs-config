;; Object keras/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "keras/"
  :tables
  (list
    (semanticdb-table "models.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 38])
            ("warnings" include nil nil [39 54])
            ("copy" include nil nil [55 66])
            ("backend" include nil nil [75 94])
            ("Model" include nil nil [117 129])
            ("Node" include nil nil [152 182])
            ("get_source_inputs" include nil nil [152 182])
            ("Graph" include nil nil [203 215])
            ("model_from_yaml" function (:arguments 
              ( ("yaml_string" variable nil (reparse-symbol function_parameters) [238 249])
                ("custom_objects" variable nil (reparse-symbol function_parameters) [251 265]))              ) nil [218 565])
            ("model_from_json" function (:arguments 
              ( ("json_string" variable nil (reparse-symbol function_parameters) [587 598])
                ("custom_objects" variable nil (reparse-symbol function_parameters) [600 614]))              ) nil [567 915])
            ("Sequential" type
               (:superclasses ("Model")
                :members 
                  ( ("'''Linear stack of layers.

    # Arguments
        layers: list of layers to add to the model.

    # Note
        The first layer passed to a Sequential model
        should have a defined input shape. What that
        means is that it should have received an `input_shape`
        or `batch_input_shape` argument,
        or for some type of layers (recurrent, Dense...)
        an `input_dim` argument.

    # Example

        ```python
            model = Sequential()
            # first layer must have a defined input shape
            model.add(Dense(32, input_dim=500))
            # afterwards, Keras does automatic shape inference
            model.add(Dense(32))

            # also possible (equivalent to the above):
            model = Sequential()
            model.add(Dense(32, input_shape=(500,)))
            model.add(Dense(32))

            # also possible (equivalent to the above):
            model = Sequential()
            # here the batch dimension is None,
            # which means any batch size will be accepted by the model.
            model.add(Dense(32, batch_input_shape=(None, 500)))
            model.add(Dense(32))
        ```
    '''" code nil (reparse-symbol indented_block_body) [946 2123])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [2178 2194])
                            ("self" variable nil (reparse-symbol indented_block_body) [2222 2239])
                            ("self" variable nil (reparse-symbol indented_block_body) [2275 2291])
                            ("self" variable nil (reparse-symbol indented_block_body) [2311 2328])
                            ("self" variable nil (reparse-symbol indented_block_body) [2387 2410])
                            ("self" variable nil (reparse-symbol indented_block_body) [2419 2443])
                            ("self" variable nil (reparse-symbol indented_block_body) [2452 2470])
                            ("if" code nil (reparse-symbol indented_block_body) [2480 2579])
                            ("self" variable nil (reparse-symbol indented_block_body) [2587 2603])
                            ("for" code nil (reparse-symbol indented_block_body) [2613 2662]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2141 2145])
                            ("layers" variable nil (reparse-symbol function_parameters) [2147 2153])
                            ("name" variable nil (reparse-symbol function_parameters) [2158 2162]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [2128 2662])
                    ("add" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2675 2679])
                            ("layer" variable nil (reparse-symbol function_parameters) [2681 2686]))                          )
                        (reparse-symbol indented_block_body) [2667 5716])
                    ("call" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5730 5734])
                            ("x" variable nil (reparse-symbol function_parameters) [5736 5737])
                            ("mask" variable nil (reparse-symbol function_parameters) [5739 5743]))                          )
                        (reparse-symbol indented_block_body) [5721 5843])
                    ("build" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5858 5862])
                            ("input_shape" variable nil (reparse-symbol function_parameters) [5864 5875]))                          )
                        (reparse-symbol indented_block_body) [5848 7152])
                    ("uses_learning_phase" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7195 7199]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7157 7300])
                    ("flattened_layers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7340 7344]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7305 8265])
                    ("_gather_list_attr" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8292 8296])
                            ("attr" variable nil (reparse-symbol function_parameters) [8298 8302]))                          )
                        (reparse-symbol indented_block_body) [8270 8447])
                    ("_gather_dict_attr" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8474 8478])
                            ("attr" variable nil (reparse-symbol function_parameters) [8480 8484]))                          )
                        (reparse-symbol indented_block_body) [8452 8739])
                    ("trainable_weights" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8780 8784]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [8744 8884])
                    ("non_trainable_weights" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8929 8933]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [8889 9037])
                    ("updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9068 9072]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9042 9162])
                    ("state_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9199 9203]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9167 9299])
                    ("regularizers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9335 9339]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9304 9434])
                    ("constraints" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9469 9473]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9439 9567])
                    ("get_weights" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9588 9592]))                          )
                        (reparse-symbol indented_block_body) [9572 9861])
                    ("set_weights" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9882 9886])
                            ("weights" variable nil (reparse-symbol function_parameters) [9888 9895]))                          )
                        (reparse-symbol indented_block_body) [9866 10321])
                    ("validation_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10360 10364]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10326 10409])
                    ("training_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10446 10450]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10414 10493])
                    ("compile" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10510 10514])
                            ("optimizer" variable nil (reparse-symbol function_parameters) [10516 10525])
                            ("loss" variable nil (reparse-symbol function_parameters) [10527 10531])
                            ("metrics" variable nil (reparse-symbol function_parameters) [10549 10556])
                            ("sample_weight_mode" variable nil (reparse-symbol function_parameters) [10577 10595])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10618 10626]))                          )
                        (reparse-symbol indented_block_body) [10498 12531])
                    ("fit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12544 12548])
                            ("x" variable nil (reparse-symbol function_parameters) [12550 12551])
                            ("y" variable nil (reparse-symbol function_parameters) [12553 12554])
                            ("batch_size" variable nil (reparse-symbol function_parameters) [12556 12566])
                            ("nb_epoch" variable nil (reparse-symbol function_parameters) [12571 12579])
                            ("verbose" variable nil (reparse-symbol function_parameters) [12584 12591])
                            ("callbacks" variable nil (reparse-symbol function_parameters) [12595 12604])
                            ("validation_split" variable nil (reparse-symbol function_parameters) [12621 12637])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [12642 12657])
                            ("shuffle" variable nil (reparse-symbol function_parameters) [12664 12671])
                            ("class_weight" variable nil (reparse-symbol function_parameters) [12690 12702])
                            ("sample_weight" variable nil (reparse-symbol function_parameters) [12709 12722])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12729 12737]))                          )
                        (reparse-symbol indented_block_body) [12536 16076])
                    ("evaluate" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [16259 16263])
                            ("x" variable nil (reparse-symbol function_parameters) [16265 16266])
                            ("y" variable nil (reparse-symbol function_parameters) [16268 16269])
                            ("batch_size" variable nil (reparse-symbol function_parameters) [16271 16281])
                            ("verbose" variable nil (reparse-symbol function_parameters) [16286 16293])
                            ("sample_weight" variable nil (reparse-symbol function_parameters) [16314 16327])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [16334 16342]))                          )
                        (reparse-symbol indented_block_body) [16246 17790])
                    ("predict" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17807 17811])
                            ("x" variable nil (reparse-symbol function_parameters) [17813 17814])
                            ("batch_size" variable nil (reparse-symbol function_parameters) [17816 17826])
                            ("verbose" variable nil (reparse-symbol function_parameters) [17831 17838]))                          )
                        (reparse-symbol indented_block_body) [17795 18253])
                    ("predict_on_batch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18279 18283])
                            ("x" variable nil (reparse-symbol function_parameters) [18285 18286]))                          )
                        (reparse-symbol indented_block_body) [18258 18409])
                    ("train_on_batch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [18433 18437])
                            ("x" variable nil (reparse-symbol function_parameters) [18439 18440])
                            ("y" variable nil (reparse-symbol function_parameters) [18442 18443])
                            ("class_weight" variable nil (reparse-symbol function_parameters) [18445 18457])
                            ("sample_weight" variable nil (reparse-symbol function_parameters) [18487 18500])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [18507 18515]))                          )
                        (reparse-symbol indented_block_body) [18414 19948])
                    ("test_on_batch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [19971 19975])
                            ("x" variable nil (reparse-symbol function_parameters) [19977 19978])
                            ("y" variable nil (reparse-symbol function_parameters) [19980 19981])
                            ("sample_weight" variable nil (reparse-symbol function_parameters) [20005 20018])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [20025 20033]))                          )
                        (reparse-symbol indented_block_body) [19953 21247])
                    ("predict_proba" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [21270 21274])
                            ("x" variable nil (reparse-symbol function_parameters) [21276 21277])
                            ("batch_size" variable nil (reparse-symbol function_parameters) [21279 21289])
                            ("verbose" variable nil (reparse-symbol function_parameters) [21294 21301]))                          )
                        (reparse-symbol indented_block_body) [21252 22091])
                    ("predict_classes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22116 22120])
                            ("x" variable nil (reparse-symbol function_parameters) [22122 22123])
                            ("batch_size" variable nil (reparse-symbol function_parameters) [22125 22135])
                            ("verbose" variable nil (reparse-symbol function_parameters) [22140 22147]))                          )
                        (reparse-symbol indented_block_body) [22096 22742])
                    ("fit_generator" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [22765 22769])
                            ("generator" variable nil (reparse-symbol function_parameters) [22771 22780])
                            ("samples_per_epoch" variable nil (reparse-symbol function_parameters) [22782 22799])
                            ("nb_epoch" variable nil (reparse-symbol function_parameters) [22801 22809])
                            ("verbose" variable nil (reparse-symbol function_parameters) [22833 22840])
                            ("callbacks" variable nil (reparse-symbol function_parameters) [22844 22853])
                            ("validation_data" variable nil (reparse-symbol function_parameters) [22880 22895])
                            ("nb_val_samples" variable nil (reparse-symbol function_parameters) [22902 22916])
                            ("class_weight" variable nil (reparse-symbol function_parameters) [22945 22957])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [22986 22994]))                          )
                        (reparse-symbol indented_block_body) [22747 26661])
                    ("evaluate_generator" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [26689 26693])
                            ("generator" variable nil (reparse-symbol function_parameters) [26695 26704])
                            ("val_samples" variable nil (reparse-symbol function_parameters) [26706 26717])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [26746 26754]))                          )
                        (reparse-symbol indented_block_body) [26666 27970])
                    ("predict_generator" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [27997 28001])
                            ("generator" variable nil (reparse-symbol function_parameters) [28003 28012])
                            ("val_samples" variable nil (reparse-symbol function_parameters) [28014 28025]))                          )
                        (reparse-symbol indented_block_body) [27975 28550])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [28570 28574]))                          )
                        (reparse-symbol indented_block_body) [28555 29575])
                    ("from_config" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [29613 29616])
                            ("config" variable nil (reparse-symbol function_parameters) [29618 29624]))                          )
                        (reparse-symbol indented_block_body) [29580 31061]))                  
                :type "class")
                nil [917 31061]))          
      :file "models.py"
      :pointmax 31061
      :fsize 31060
      :lastmodtime '(22301 12189 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "activations.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("backend" include nil nil [47 66])
            ("softmax" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [81 82]))              ) nil [69 439])
            ("softplus" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [454 455]))              ) nil [441 483])
            ("relu" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [494 495])
                ("alpha" variable nil (reparse-symbol function_parameters) [497 502])
                ("max_value" variable nil (reparse-symbol function_parameters) [507 516]))              ) nil [485 579])
            ("tanh" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [590 591]))              ) nil [581 615])
            ("sigmoid" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [629 630]))              ) nil [617 657])
            ("hard_sigmoid" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [676 677]))              ) nil [659 709])
            ("linear" function (:arguments 
              ( ("x" variable nil (reparse-symbol function_parameters) [722 723]))              ) nil [711 831])
            ("get_from_module" include nil nil [859 881])
            ("get" function (:arguments 
              ( ("identifier" variable nil (reparse-symbol function_parameters) [890 900]))              ) nil [882 976]))          
      :file "activations.py"
      :pointmax 976
      :fsize 975
      :lastmodtime '(22285 16886 0 0)
      :unmatched-syntax '((FROM 833 . 837) (PERIOD 838 . 839) (FROM 40 . 44) (PERIOD 45 . 46)))
    (semanticdb-table "optimizers.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("backend" include nil nil [47 66])
            ("numpy" include nil nil [67 85])
            ("get_from_module" include nil nil [112 134])
            ("six.moves" include nil nil [135 160])
            ("clip_norm" function (:arguments 
              ( ("g" variable nil (reparse-symbol function_parameters) [177 178])
                ("c" variable nil (reparse-symbol function_parameters) [180 181])
                ("n" variable nil (reparse-symbol function_parameters) [183 184]))              ) nil [163 257])
            ("kl_divergence" function (:arguments 
              ( ("p" variable nil (reparse-symbol function_parameters) [277 278])
                ("p_hat" variable nil (reparse-symbol function_parameters) [280 285]))              ) nil [259 332])
            ("Optimizer" type
               (:superclasses ("object")
                :members 
                  ( ("'''Abstract optimizer base class.

    Note: this is the parent class of all optimizers, not an actual optimizer
    that can be used for training models.

    All Keras optimizers support the following keyword arguments:

        clipnorm: float >= 0. Gradients will be clipped
            when their L2 norm exceeds this value.
        clipvalue: float >= 0. Gradients will be clipped
            when their absolute value exceeds this value.
    '''" code nil (reparse-symbol indented_block_body) [363 815])
                    ("__init__" function
                       (:suite 
                          ( ("self" code nil (reparse-symbol indented_block_body) [858 886])
                            ("self" variable nil (reparse-symbol indented_block_body) [895 912])
                            ("self" variable nil (reparse-symbol indented_block_body) [921 938]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [833 837])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [839 847]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [820 939])
                    ("get_state" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [958 962]))                          )
                        (reparse-symbol indented_block_body) [944 1022])
                    ("set_state" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1041 1045])
                            ("value_list" variable nil (reparse-symbol function_parameters) [1047 1057]))                          )
                        (reparse-symbol indented_block_body) [1027 1196])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1217 1221])
                            ("params" variable nil (reparse-symbol function_parameters) [1223 1229])
                            ("constraints" variable nil (reparse-symbol function_parameters) [1231 1242])
                            ("loss" variable nil (reparse-symbol function_parameters) [1244 1248]))                          )
                        (reparse-symbol indented_block_body) [1201 1285])
                    ("get_gradients" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1316 1320])
                            ("loss" variable nil (reparse-symbol function_parameters) [1322 1326])
                            ("params" variable nil (reparse-symbol function_parameters) [1328 1334]))                          )
                        (reparse-symbol indented_block_body) [1298 1741])
                    ("set_weights" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1762 1766])
                            ("weights" variable nil (reparse-symbol function_parameters) [1768 1775]))                          )
                        (reparse-symbol indented_block_body) [1746 2916])
                    ("get_weights" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2937 2941]))                          )
                        (reparse-symbol indented_block_body) [2921 3166])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3186 3190]))                          )
                        (reparse-symbol indented_block_body) [3171 3242]))                  
                :type "class")
                nil [334 3242])
            ("SGD" type
               (:superclasses ("Optimizer")
                :members 
                  ( ("'''Stochastic gradient descent, with support for momentum,
    learning rate decay, and Nesterov momentum.

    # Arguments
        lr: float >= 0. Learning rate.
        momentum: float >= 0. Parameter updates momentum.
        decay: float >= 0. Learning rate decay over each update.
        nesterov: boolean. Whether to apply Nesterov momentum.
    '''" code nil (reparse-symbol indented_block_body) [3270 3626])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [3733 3768])
                            ("self" code nil (reparse-symbol indented_block_body) [3777 3807])
                            ("self" variable nil (reparse-symbol indented_block_body) [3816 3848])
                            ("self" variable nil (reparse-symbol indented_block_body) [3857 3881])
                            ("self" variable nil (reparse-symbol indented_block_body) [3890 3926])
                            ("self" variable nil (reparse-symbol indented_block_body) [3935 3965]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3644 3648])
                            ("lr" variable nil (reparse-symbol function_parameters) [3650 3652])
                            ("momentum" variable nil (reparse-symbol function_parameters) [3659 3667])
                            ("decay" variable nil (reparse-symbol function_parameters) [3672 3677])
                            ("nesterov" variable nil (reparse-symbol function_parameters) [3682 3690])
                            ("args" variable nil (reparse-symbol function_parameters) [3715 3720])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [3722 3730]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3631 3974])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3995 3999])
                            ("params" variable nil (reparse-symbol function_parameters) [4001 4007])
                            ("constraints" variable nil (reparse-symbol function_parameters) [4009 4020])
                            ("loss" variable nil (reparse-symbol function_parameters) [4022 4026]))                          )
                        (reparse-symbol indented_block_body) [3979 4768])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4788 4792]))                          )
                        (reparse-symbol indented_block_body) [4773 5059]))                  
                :type "class")
                nil [3244 5059])
            ("RMSprop" type
               (:superclasses ("Optimizer")
                :members 
                  ( ("'''RMSProp optimizer.

    It is recommended to leave the parameters of this optimizer
    at their default values
    (except the learning rate, which can be freely tuned).

    This optimizer is usually a good choice for recurrent
    neural networks.

    # Arguments
        lr: float >= 0. Learning rate.
        rho: float >= 0.
        epsilon: float >= 0. Fuzz factor.
    '''" code nil (reparse-symbol indented_block_body) [5091 5475])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [5537 5576])
                            ("self" code nil (reparse-symbol indented_block_body) [5585 5615])
                            ("self" variable nil (reparse-symbol indented_block_body) [5624 5648])
                            ("self" variable nil (reparse-symbol indented_block_body) [5657 5683]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5493 5497])
                            ("lr" variable nil (reparse-symbol function_parameters) [5499 5501])
                            ("rho" variable nil (reparse-symbol function_parameters) [5509 5512])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [5518 5525])
                            ("args" variable nil (reparse-symbol function_parameters) [5532 5537])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [5539 5547]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [5480 5705])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5726 5730])
                            ("params" variable nil (reparse-symbol function_parameters) [5732 5738])
                            ("constraints" variable nil (reparse-symbol function_parameters) [5740 5751])
                            ("loss" variable nil (reparse-symbol function_parameters) [5753 5757]))                          )
                        (reparse-symbol indented_block_body) [5710 6415])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6435 6439]))                          )
                        (reparse-symbol indented_block_body) [6420 6636]))                  
                :type "class")
                nil [5061 6636])
            ("Adagrad" type
               (:superclasses ("Optimizer")
                :members 
                  ( ("'''Adagrad optimizer.

    It is recommended to leave the parameters of this optimizer
    at their default values.

    # Arguments
        lr: float >= 0. Learning rate.
        epsilon: float >= 0.
    '''" code nil (reparse-symbol indented_block_body) [6668 6876])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [6928 6967])
                            ("self" code nil (reparse-symbol indented_block_body) [6976 7006])
                            ("self" variable nil (reparse-symbol indented_block_body) [7015 7039]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6894 6898])
                            ("lr" variable nil (reparse-symbol function_parameters) [6900 6902])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [6909 6916])
                            ("args" variable nil (reparse-symbol function_parameters) [6923 6928])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6930 6938]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [6881 7061])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7082 7086])
                            ("params" variable nil (reparse-symbol function_parameters) [7088 7094])
                            ("constraints" variable nil (reparse-symbol function_parameters) [7096 7107])
                            ("loss" variable nil (reparse-symbol function_parameters) [7109 7113]))                          )
                        (reparse-symbol indented_block_body) [7066 7730])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7750 7754]))                          )
                        (reparse-symbol indented_block_body) [7735 7898]))                  
                :type "class")
                nil [6638 7898])
            ("Adadelta" type
               (:superclasses ("Optimizer")
                :members 
                  ( ("'''Adadelta optimizer.

    It is recommended to leave the parameters of this optimizer
    at their default values.

    # Arguments
        lr: float >= 0. Learning rate.
            It is recommended to leave it at the default value.
        rho: float >= 0.
        epsilon: float >= 0. Fuzz factor.

    # References
        - [Adadelta - an adaptive learning rate method](http://arxiv.org/abs/1212.5701)
    '''" code nil (reparse-symbol indented_block_body) [7931 8348])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [8409 8449])
                            ("self" code nil (reparse-symbol indented_block_body) [8458 8488])
                            ("self" variable nil (reparse-symbol indented_block_body) [8497 8521]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8366 8370])
                            ("lr" variable nil (reparse-symbol function_parameters) [8372 8374])
                            ("rho" variable nil (reparse-symbol function_parameters) [8380 8383])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [8390 8397])
                            ("args" variable nil (reparse-symbol function_parameters) [8404 8409])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [8411 8419]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [8353 8543])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8564 8568])
                            ("params" variable nil (reparse-symbol function_parameters) [8570 8576])
                            ("constraints" variable nil (reparse-symbol function_parameters) [8578 8589])
                            ("loss" variable nil (reparse-symbol function_parameters) [8591 8595]))                          )
                        (reparse-symbol indented_block_body) [8548 9691])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9711 9715]))                          )
                        (reparse-symbol indented_block_body) [9696 9892]))                  
                :type "class")
                nil [7900 9892])
            ("Adam" type
               (:superclasses ("Optimizer")
                :members 
                  ( ("'''Adam optimizer.

    Default parameters follow those provided in the original paper.

    # Arguments
        lr: float >= 0. Learning rate.
        beta_1/beta_2: floats, 0 < beta < 1. Generally close to 1.
        epsilon: float >= 0. Fuzz factor.

    # References
        - [Adam - A Method for Stochastic Optimization](http://arxiv.org/abs/1412.6980v8)
    '''" code nil (reparse-symbol indented_block_body) [9921 10289])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [10385 10421])
                            ("self" code nil (reparse-symbol indented_block_body) [10430 10460])
                            ("self" variable nil (reparse-symbol indented_block_body) [10469 10500])
                            ("self" variable nil (reparse-symbol indented_block_body) [10509 10533])
                            ("self" variable nil (reparse-symbol indented_block_body) [10542 10574])
                            ("self" variable nil (reparse-symbol indented_block_body) [10583 10615]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10307 10311])
                            ("lr" variable nil (reparse-symbol function_parameters) [10313 10315])
                            ("beta_1" variable nil (reparse-symbol function_parameters) [10323 10329])
                            ("beta_2" variable nil (reparse-symbol function_parameters) [10335 10341])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [10349 10356])
                            ("args" variable nil (reparse-symbol function_parameters) [10380 10385])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10387 10395]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [10294 10637])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10658 10662])
                            ("params" variable nil (reparse-symbol function_parameters) [10664 10670])
                            ("constraints" variable nil (reparse-symbol function_parameters) [10672 10683])
                            ("loss" variable nil (reparse-symbol function_parameters) [10685 10689]))                          )
                        (reparse-symbol indented_block_body) [10642 11675])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11695 11699]))                          )
                        (reparse-symbol indented_block_body) [11680 11961]))                  
                :type "class")
                nil [9894 11961])
            ("Adamax" type
               (:superclasses ("Optimizer")
                :members 
                  ( ("'''Adamax optimizer from Adam paper's Section 7. It is a variant
     of Adam based on the infinity norm.

    Default parameters follow those provided in the paper.

    # Arguments
        lr: float >= 0. Learning rate.
        beta_1/beta_2: floats, 0 < beta < 1. Generally close to 1.
        epsilon: float >= 0. Fuzz factor.

    # References
        - [Adam - A Method for Stochastic Optimization](http://arxiv.org/abs/1412.6980v8)
    '''" code nil (reparse-symbol indented_block_body) [11992 12438])
                    ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [12534 12572])
                            ("self" code nil (reparse-symbol indented_block_body) [12581 12611])
                            ("self" variable nil (reparse-symbol indented_block_body) [12620 12652])
                            ("self" variable nil (reparse-symbol indented_block_body) [12661 12685])
                            ("self" variable nil (reparse-symbol indented_block_body) [12694 12726])
                            ("self" variable nil (reparse-symbol indented_block_body) [12735 12767]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12456 12460])
                            ("lr" variable nil (reparse-symbol function_parameters) [12462 12464])
                            ("beta_1" variable nil (reparse-symbol function_parameters) [12472 12478])
                            ("beta_2" variable nil (reparse-symbol function_parameters) [12484 12490])
                            ("epsilon" variable nil (reparse-symbol function_parameters) [12498 12505])
                            ("args" variable nil (reparse-symbol function_parameters) [12529 12534])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [12536 12544]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [12443 12789])
                    ("get_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12810 12814])
                            ("params" variable nil (reparse-symbol function_parameters) [12816 12822])
                            ("constraints" variable nil (reparse-symbol function_parameters) [12824 12835])
                            ("loss" variable nil (reparse-symbol function_parameters) [12837 12841]))                          )
                        (reparse-symbol indented_block_body) [12794 13861])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13881 13885]))                          )
                        (reparse-symbol indented_block_body) [13866 14147]))                  
                :type "class")
                nil [11963 14147])
            ("sgd" variable nil nil [14159 14168])
            ("rmsprop" variable nil nil [14169 14186])
            ("adagrad" variable nil nil [14187 14204])
            ("adadelta" variable nil nil [14205 14224])
            ("adam" variable nil nil [14225 14236])
            ("adamax" variable nil nil [14237 14252])
            ("get" function (:arguments 
              ( ("identifier" variable nil (reparse-symbol function_parameters) [14263 14273])
                ("kwargs" variable nil (reparse-symbol function_parameters) [14275 14281]))              ) nil [14255 14412]))          
      :file "optimizers.py"
      :pointmax 14412
      :fsize 14411
      :lastmodtime '(22298 18839 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "constraints.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("backend" include nil nil [47 66])
            ("Constraint" type
               (:superclasses ("object")
                :members 
                  ( ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [112 116])
                            ("p" variable nil (reparse-symbol function_parameters) [118 119]))                          )
                        (reparse-symbol indented_block_body) [99 139])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [159 163]))                          )
                        (reparse-symbol indented_block_body) [144 215]))                  
                :type "class")
                nil [69 215])
            ("MaxNorm" type
               (:superclasses ("Constraint")
                :members 
                  ( ("'''Constrain the weights incident to each hidden unit to have a norm less than or equal to a desired value.

    # Arguments
        m: the maximum norm for the incoming weights.
        axis: integer, axis along which to calculate weight norms. For instance,
            in a `Dense` layer the weight matrix has shape (input_dim, output_dim),
            set `axis` to `0` to constrain each weight vector of length (input_dim).
            In a `MaxoutDense` layer the weight tensor has shape (nb_feature, input_dim, output_dim),
            set `axis` to `1` to constrain each weight vector of length (input_dim),
            i.e. constrain the filters incident to the `max` operation.
            In a `Convolution2D` layer with the Theano backend, the weight tensor
            has shape (nb_filter, stack_size, nb_row, nb_col), set `axis` to `[1,2,3]`
            to constrain the weights of each filter tensor of size (stack_size, nb_row, nb_col).
            In a `Convolution2D` layer with the TensorFlow backend, the weight tensor
            has shape (nb_row, nb_col, stack_size, nb_filter), set `axis` to `[0,1,2]`
            to constrain the weights of each filter tensor of size (nb_row, nb_col, stack_size).

    # References
        - [Dropout: A Simple Way to Prevent Neural Networks from Overfitting Srivastava, Hinton, et al. 2014](http://www.cs.toronto.edu/~rsalakhu/papers/srivastava14a.pdf)
    '''" code nil (reparse-symbol indented_block_body) [248 1669])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1715 1725])
                            ("self" variable nil (reparse-symbol indented_block_body) [1734 1750]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1687 1691])
                            ("m" variable nil (reparse-symbol function_parameters) [1693 1694])
                            ("axis" variable nil (reparse-symbol function_parameters) [1698 1702]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1674 1751])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1769 1773])
                            ("p" variable nil (reparse-symbol function_parameters) [1775 1776]))                          )
                        (reparse-symbol indented_block_body) [1756 1963])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1983 1987]))                          )
                        (reparse-symbol indented_block_body) [1968 2103]))                  
                :type "class")
                nil [217 2103])
            ("NonNeg" type
               (:superclasses ("Constraint")
                :members 
                  ( ("'''Constrain the weights to be non-negative.
    '''" code nil (reparse-symbol indented_block_body) [2135 2187])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2205 2209])
                            ("p" variable nil (reparse-symbol function_parameters) [2211 2212]))                          )
                        (reparse-symbol indented_block_body) [2192 2273]))                  
                :type "class")
                nil [2105 2273])
            ("UnitNorm" type
               (:superclasses ("Constraint")
                :members 
                  ( ("'''Constrain the weights incident to each hidden unit to have unit norm.

    # Arguments
        axis: integer, axis along which to calculate weight norms. For instance,
            in a `Dense` layer the weight matrix has shape (input_dim, output_dim),
            set `axis` to `0` to constrain each weight vector of length (input_dim).
            In a `MaxoutDense` layer the weight tensor has shape (nb_feature, input_dim, output_dim),
            set `axis` to `1` to constrain each weight vector of length (input_dim),
            i.e. constrain the filters incident to the `max` operation.
            In a `Convolution2D` layer with the Theano backend, the weight tensor
            has shape (nb_filter, stack_size, nb_row, nb_col), set `axis` to `[1,2,3]`
            to constrain the weights of each filter tensor of size (stack_size, nb_row, nb_col).
            In a `Convolution2D` layer with the TensorFlow backend, the weight tensor
            has shape (nb_row, nb_col, stack_size, nb_filter), set `axis` to `[0,1,2]`
            to constrain the weights of each filter tensor of size (nb_row, nb_col, stack_size).
    '''" code nil (reparse-symbol indented_block_body) [2307 3449])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3490 3506]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3467 3471])
                            ("axis" variable nil (reparse-symbol function_parameters) [3473 3477]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3454 3507])
                    ("__call__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3525 3529])
                            ("p" variable nil (reparse-symbol function_parameters) [3531 3532]))                          )
                        (reparse-symbol indented_block_body) [3512 3628])
                    ("get_config" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3648 3652]))                          )
                        (reparse-symbol indented_block_body) [3633 3739]))                  
                :type "class")
                nil [2275 3739])
            ("maxnorm" variable nil nil [3741 3758])
            ("nonneg" variable nil nil [3759 3774])
            ("unitnorm" variable nil nil [3775 3794])
            ("get_from_module" include nil nil [3822 3844])
            ("get" function (:arguments 
              ( ("identifier" variable nil (reparse-symbol function_parameters) [3853 3863])
                ("kwargs" variable nil (reparse-symbol function_parameters) [3865 3871]))              ) nil [3845 4003]))          
      :file "constraints.py"
      :pointmax 4003
      :fsize 4002
      :lastmodtime '(22285 16886 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "objectives.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("numpy" include nil nil [40 58])
            ("backend" include nil nil [66 85])
            ("mean_squared_error" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [111 117])
                ("y_pred" variable nil (reparse-symbol function_parameters) [119 125]))              ) nil [88 182])
            ("mean_absolute_error" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [208 214])
                ("y_pred" variable nil (reparse-symbol function_parameters) [216 222]))              ) nil [184 276])
            ("mean_absolute_percentage_error" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [313 319])
                ("y_pred" variable nil (reparse-symbol function_parameters) [321 327]))              ) nil [278 451])
            ("mean_squared_logarithmic_error" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [488 494])
                ("y_pred" variable nil (reparse-symbol function_parameters) [496 502]))              ) nil [453 695])
            ("squared_hinge" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [715 721])
                ("y_pred" variable nil (reparse-symbol function_parameters) [723 729]))              ) nil [697 806])
            ("hinge" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [818 824])
                ("y_pred" variable nil (reparse-symbol function_parameters) [826 832]))              ) nil [808 899])
            ("categorical_crossentropy" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [930 936])
                ("y_pred" variable nil (reparse-symbol function_parameters) [938 944]))              ) nil [901 1085])
            ("sparse_categorical_crossentropy" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [1123 1129])
                ("y_pred" variable nil (reparse-symbol function_parameters) [1131 1137]))              ) nil [1087 1263])
            ("binary_crossentropy" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [1289 1295])
                ("y_pred" variable nil (reparse-symbol function_parameters) [1297 1303]))              ) nil [1265 1372])
            ("poisson" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [1386 1392])
                ("y_pred" variable nil (reparse-symbol function_parameters) [1394 1400]))              ) nil [1374 1477])
            ("cosine_proximity" function (:arguments 
              ( ("y_true" variable nil (reparse-symbol function_parameters) [1500 1506])
                ("y_pred" variable nil (reparse-symbol function_parameters) [1508 1514]))              ) nil [1479 1652])
            ("mse" variable nil nil [1664 1694])
            ("mae" variable nil nil [1695 1726])
            ("mape" variable nil nil [1727 1771])
            ("msle" variable nil nil [1772 1816])
            ("cosine" variable nil nil [1817 1842])
            ("get_from_module" include nil nil [1870 1892])
            ("get" function (:arguments 
              ( ("identifier" variable nil (reparse-symbol function_parameters) [1901 1911]))              ) nil [1893 1977]))          
      :file "objectives.py"
      :pointmax 1977
      :fsize 1976
      :lastmodtime '(22285 16886 0 0)
      :unmatched-syntax '((FROM 1844 . 1848) (PERIOD 1849 . 1850) (FROM 59 . 63) (PERIOD 64 . 65)))
    (semanticdb-table "initializations.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("numpy" include nil nil [40 58])
            ("backend" include nil nil [66 85])
            ("get_fans" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [101 106])
                ("dim_ordering" variable nil (reparse-symbol function_parameters) [108 120]))              ) nil [88 856])
            ("uniform" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [870 875])
                ("scale" variable nil (reparse-symbol function_parameters) [877 882])
                ("name" variable nil (reparse-symbol function_parameters) [888 892]))              ) nil [858 1010])
            ("normal" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [1023 1028])
                ("scale" variable nil (reparse-symbol function_parameters) [1030 1035])
                ("name" variable nil (reparse-symbol function_parameters) [1041 1045]))              ) nil [1012 1160])
            ("lecun_uniform" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [1180 1185])
                ("name" variable nil (reparse-symbol function_parameters) [1187 1191])
                ("dim_ordering" variable nil (reparse-symbol function_parameters) [1198 1210]))              ) nil [1162 1476])
            ("glorot_normal" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [1496 1501])
                ("name" variable nil (reparse-symbol function_parameters) [1503 1507])
                ("dim_ordering" variable nil (reparse-symbol function_parameters) [1514 1526]))              ) nil [1478 1736])
            ("glorot_uniform" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [1757 1762])
                ("name" variable nil (reparse-symbol function_parameters) [1764 1768])
                ("dim_ordering" variable nil (reparse-symbol function_parameters) [1775 1787]))              ) nil [1738 1941])
            ("he_normal" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [1957 1962])
                ("name" variable nil (reparse-symbol function_parameters) [1964 1968])
                ("dim_ordering" variable nil (reparse-symbol function_parameters) [1975 1987]))              ) nil [1943 2199])
            ("he_uniform" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [2216 2221])
                ("name" variable nil (reparse-symbol function_parameters) [2223 2227])
                ("dim_ordering" variable nil (reparse-symbol function_parameters) [2234 2246]))              ) nil [2201 2388])
            ("orthogonal" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [2405 2410])
                ("scale" variable nil (reparse-symbol function_parameters) [2412 2417])
                ("name" variable nil (reparse-symbol function_parameters) [2423 2427]))              ) nil [2390 2842])
            ("identity" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [2857 2862])
                ("scale" variable nil (reparse-symbol function_parameters) [2864 2869])
                ("name" variable nil (reparse-symbol function_parameters) [2873 2877]))              ) nil [2844 3137])
            ("zero" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [3148 3153])
                ("name" variable nil (reparse-symbol function_parameters) [3155 3159]))              ) nil [3139 3204])
            ("one" function (:arguments 
              ( ("shape" variable nil (reparse-symbol function_parameters) [3214 3219])
                ("name" variable nil (reparse-symbol function_parameters) [3221 3225]))              ) nil [3206 3269])
            ("get_from_module" include nil nil [3297 3319])
            ("get" function (:arguments 
              ( ("identifier" variable nil (reparse-symbol function_parameters) [3328 3338])
                ("kwargs" variable nil (reparse-symbol function_parameters) [3340 3348]))              ) nil [3320 3461]))          
      :file "initializations.py"
      :pointmax 3461
      :fsize 3460
      :lastmodtime '(22333 4238 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("__version__" variable nil nil [1 22]))          
      :file "__init__.py"
      :pointmax 23
      :fsize 23
      :lastmodtime '(22285 16886 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!anaconda!lib!python2.7!site-packages!keras!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
