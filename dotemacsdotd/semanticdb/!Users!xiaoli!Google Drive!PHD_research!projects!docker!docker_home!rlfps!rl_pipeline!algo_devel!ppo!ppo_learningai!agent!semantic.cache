;; Object agent/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "agent/"
  :tables
  (list
    (semanticdb-table "PPOAgent.py"
      :major-mode 'python-mode
      :tags 
        '( ("rl_pipeline.agent.batch_agent_base" include nil nil [1 62])
            ("scipy.signal" include nil nil [63 82])
            ("numpy" include nil nil [83 101])
            ("tensorflow" include nil nil [103 126])
            ("os" include nil nil [127 136])
            ("PPOAgent" type
               (:superclasses ("BatchAgentBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [372 604])
                            ("tf" code nil (reparse-symbol indented_block_body) [614 659]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [188 192])
                            ("agent_params" variable nil (reparse-symbol function_parameters) [211 223])
                            ("sampler" variable nil (reparse-symbol function_parameters) [242 249])
                            ("policy" variable nil (reparse-symbol function_parameters) [268 274])
                            ("value" variable nil (reparse-symbol function_parameters) [293 298])
                            ("logger" variable nil (reparse-symbol function_parameters) [322 328])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [352 360]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [175 660])
                    ("discount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [686 690])
                            ("x" variable nil (reparse-symbol function_parameters) [692 693])
                            ("gamma" variable nil (reparse-symbol function_parameters) [695 700]))                          
                        :documentation " Calculate discounted forward sum of a sequence at each point ")
                        (reparse-symbol indented_block_body) [673 853])
                    ("add_disc_sum_rew" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [879 883])
                            ("batch" variable nil (reparse-symbol function_parameters) [885 890])
                            ("gamma" variable nil (reparse-symbol function_parameters) [892 897]))                          
                        :documentation " Adds discounted sum of rewards to all time steps of all trajectories
        Args:
        batch: as returned by sampler.get_batch()
        gamma: discount

        Returns:
        updated batch (mutates the batch dictionary to add 'Disc_sum_rewards')
        ")
                        (reparse-symbol indented_block_body) [858 1715])
                    ("add_value" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1746 1750])
                            ("batch" variable nil (reparse-symbol function_parameters) [1752 1757]))                          
                        :documentation " Adds estimated value to all time steps of all trajectories
        Args:
        batch: as returned by sampler.get_batch()
 
        
        Returns:
        updated batch (mutates batch dictionary to add 'Values')
        ")
                        (reparse-symbol indented_block_body) [1732 2169])
                    ("add_gae" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2186 2190])
                            ("batch" variable nil (reparse-symbol function_parameters) [2192 2197])
                            ("gamma" variable nil (reparse-symbol function_parameters) [2199 2204])
                            ("lam" variable nil (reparse-symbol function_parameters) [2206 2209]))                          
                        :documentation " Add generalized advantage estimator.
        https://arxiv.org/pdf/1506.02438.pdf
        Args:
        batch: as returned by sampler.get_batch(), must include 'Values' key from add_value().
        gamma: reward discount
        lam: lambda (see paper).
        lam=0 : use TD residuals
        lam=1 : A =  Sum Discounted Rewards - V_hat(s)
        
        Returns:
        updated batch (mutates batch dictionary to add 'Advantages')
        ")
                        (reparse-symbol indented_block_body) [2174 3330])
                    ("build_training_set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3367 3371])
                            ("batch" variable nil (reparse-symbol function_parameters) [3373 3378]))                          
                        :documentation "
        Args:
        batch: batch after processing by add_disc_sum_rew(),
        add_value(), and add_gae()
        
        Returns: dictionary with keys \"Observations\", \"Actions\", \"Advantages\", \"Disc_sum_rew\"
        ")
                        (reparse-symbol indented_block_body) [3344 4646])
                    ("build_logging_set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4673 4677])
                            ("batch" variable nil (reparse-symbol function_parameters) [4679 4684]))                          )
                        (reparse-symbol indented_block_body) [4651 5005])
                    ("log_batch_stats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5042 5046])
                            ("Observations" variable nil (reparse-symbol function_parameters) [5048 5060])
                            ("Actions" variable nil (reparse-symbol function_parameters) [5062 5069])
                            ("Advantages" variable nil (reparse-symbol function_parameters) [5071 5081])
                            ("Sum_rew" variable nil (reparse-symbol function_parameters) [5083 5090])
                            ("Disc_sum_rew" variable nil (reparse-symbol function_parameters) [5092 5104])
                            ("iteration" variable nil (reparse-symbol function_parameters) [5106 5115]))                          
                        :documentation " Log various batch statistics ")
                        (reparse-symbol indented_block_body) [5022 6201])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6230 6234])
                            ("scaled_batch" variable nil (reparse-symbol function_parameters) [6236 6248])
                            ("unscaled_batch" variable nil (reparse-symbol function_parameters) [6250 6264])
                            ("itr" variable nil (reparse-symbol function_parameters) [6266 6269]))                          )
                        (reparse-symbol indented_block_body) [6219 7617])
                    ("train" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7647 7651]))                          )
                        (reparse-symbol indented_block_body) [7637 8493])
                    ("exit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9277 9281]))                          )
                        (reparse-symbol indented_block_body) [9268 9441]))                  
                :type "class")
                nil [138 9441]))          
      :file "PPOAgent.py"
      :pointmax 9441
      :fsize 9440
      :lastmodtime '(23179 45098 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!Google Drive!PHD_research!projects!docker!docker_home!rlfps!rl_pipeline!algo_devel!ppo!ppo_learningai!agent!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
