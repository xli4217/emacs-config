;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("typing" include nil nil [20 53])
            ("pyrep.backend" include nil nil [55 91])
            ("pyrep.objects.object" include nil nil [92 131])
            ("pyrep.objects.vision_sensor" include nil nil [132 184])
            ("pyrep.const" include nil nil [185 250])
            ("MIN_DIVISOR" variable nil nil [252 271])
            ("SphericalVisionSensor" type
               (:documentation "An object able capture 360 degree omni-directional images.
    "
                :superclasses ("Object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [424 446])
                            ("self" variable nil (reparse-symbol indented_block_body) [497 568])
                            ("self" variable nil (reparse-symbol indented_block_body) [577 644])
                            ("names" variable nil (reparse-symbol indented_block_body) [685 744])
                            ("self" variable nil (reparse-symbol indented_block_body) [753 834])
                            ("self" variable nil (reparse-symbol indented_block_body) [843 877])
                            ("self" variable nil (reparse-symbol indented_block_body) [930 1002])
                            ("self" code nil (reparse-symbol indented_block_body) [1051 1087])
                            ("self" code nil (reparse-symbol indented_block_body) [1145 1180])
                            ("self" code nil (reparse-symbol indented_block_body) [1189 1225])
                            ("self" code nil (reparse-symbol indented_block_body) [1234 1276])
                            ("self" code nil (reparse-symbol indented_block_body) [1285 1321])
                            ("self" code nil (reparse-symbol indented_block_body) [1330 1374])
                            ("self" code nil (reparse-symbol indented_block_body) [1383 1426])
                            ("self" variable nil (reparse-symbol indented_block_body) [1462 1519])
                            ("self" variable nil (reparse-symbol indented_block_body) [1567 1625])
                            ("self" variable nil (reparse-symbol indented_block_body) [1634 1690])
                            ("self" code nil (reparse-symbol indented_block_body) [1699 1779])
                            ("self" variable nil (reparse-symbol indented_block_body) [1827 1908]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [403 407])
                            ("name" variable nil (reparse-symbol function_parameters) [409 413]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [390 1909])
                    ("_set_all_to_explicit_handling" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1981 1985]))                          )
                        (reparse-symbol indented_block_body) [1947 2175])
                    ("_assert_matching_resolutions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2213 2217]))                          )
                        (reparse-symbol indented_block_body) [2180 2472])
                    ("_assert_matching_render_modes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2511 2515]))                          )
                        (reparse-symbol indented_block_body) [2477 2790])
                    ("_assert_matching_entities_to_render" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2835 2839]))                          )
                        (reparse-symbol indented_block_body) [2795 3144])
                    ("_assert_matching_window_sizes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3183 3187]))                          )
                        (reparse-symbol indented_block_body) [3149 3284])
                    ("_assert_matching_near_clipping_planes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3331 3335]))                          )
                        (reparse-symbol indented_block_body) [3289 3522])
                    ("_assert_matching_far_clipping_planes" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3568 3572]))                          )
                        (reparse-symbol indented_block_body) [3527 3755])
                    ("_create_uniform_pixel_coords_image" function
                       (:typemodifiers ("static")
                        :arguments 
                          ( ("image_dims" variable nil (reparse-symbol function_parameters) [3934 3944]))                          
                        :decorators 
                          ( ("staticmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3877 4439])
                    ("_get_planar_to_radial_depth_scalars" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4484 4488]))                          )
                        (reparse-symbol indented_block_body) [4444 6927]))                  
                :type "class")
                nil [274 12770]))          
      :file "spherical_vision_sensor.py"
      :pointmax 12770
      :fsize 12769
      :lastmodtime '(24574 23022 298885 175000)
      :unmatched-syntax '((INDENT_BLOCK 12481 . 12770) (NEWLINE 12480 . 12481) (COLON 12479 . 12480) (MINUS 12472 . 12473) (GT 12473 . 12474) (INDENT_BLOCK 12064 . 12436) (NEWLINE 12063 . 12064) (COLON 12062 . 12063) (MINUS 12055 . 12056) (GT 12056 . 12057) (NAME 12032 . 12048) (COLON 12048 . 12049) (INDENT_BLOCK 11632 . 11996) (NEWLINE 11631 . 11632) (COLON 11630 . 11631) (MINUS 11623 . 11624) (GT 11624 . 11625) (NAME 11602 . 11614) (COLON 11614 . 11615) (INDENT_BLOCK 11404 . 11564) (NEWLINE 11403 . 11404) (COLON 11402 . 11403) (MINUS 11394 . 11395) (GT 11395 . 11396) (INDENT_BLOCK 10985 . 11356) (NEWLINE 10984 . 10985) (COLON 10983 . 10984) (MINUS 10976 . 10977) (GT 10977 . 10978) (NAME 10954 . 10967) (COLON 10967 . 10968) (INDENT_BLOCK 10737 . 10915) (NEWLINE 10736 . 10737) (COLON 10735 . 10736) (MINUS 10727 . 10728) (GT 10728 . 10729) (INDENT_BLOCK 10390 . 10688) (NEWLINE 10389 . 10390) (COLON 10388 . 10389) (MINUS 10381 . 10382) (GT 10382 . 10383) (PAREN_BLOCK 10373 . 10379) (ASSIGN 10371 . 10372) (BRACK_BLOCK 10365 . 10370) (NAME 10345 . 10355) (COLON 10355 . 10356) (INDENT_BLOCK 10094 . 10312) (NEWLINE 10093 . 10094) (COLON 10092 . 10093) (MINUS 10076 . 10077) (GT 10077 . 10078) (INDENT_BLOCK 9416 . 10043) (NEWLINE 9415 . 9416) (COLON 9414 . 9415) (MINUS 9407 . 9408) (GT 9408 . 9409) (NAME 9382 . 9393) (COLON 9393 . 9394) (INDENT_BLOCK 9159 . 9351) (NEWLINE 9158 . 9159) (COLON 9157 . 9158) (MINUS 9144 . 9145) (GT 9145 . 9146) (INDENT_BLOCK 8443 . 9113) (NEWLINE 8442 . 8443) (COLON 8441 . 8442) (MINUS 8434 . 8435) (GT 8435 . 8436) (BRACK_BLOCK 8427 . 8432) (NAME 8411 . 8421) (COLON 8421 . 8422) (INDENT_BLOCK 8221 . 8381) (NEWLINE 8220 . 8221) (COLON 8219 . 8220) (MINUS 8207 . 8208) (GT 8208 . 8209) (INDENT_BLOCK 7636 . 8177) (NEWLINE 7635 . 7636) (COLON 7634 . 7635) (MINUS 7621 . 7622) (GT 7622 . 7623) (INDENT_BLOCK 7393 . 7575) (NEWLINE 7392 . 7393) (COLON 7391 . 7392) (MINUS 7378 . 7379) (GT 7379 . 7380) (INDENT_BLOCK 7000 . 7351) (NEWLINE 6999 . 7000) (COLON 6998 . 6999) (DEF 6963 . 6966) (MINUS 6991 . 6992) (GT 6992 . 6993) (INDENT_BLOCK 3805 . 3872) (NEWLINE 3804 . 3805) (COLON 3803 . 3804) (DEF 3760 . 3763) (MINUS 3790 . 3791) (GT 3791 . 3792))))
  :file "!home!xli4217!Dropbox!docker!docker_home!lof_robot_learning!libs!PyRep!pyrep!sensors!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
