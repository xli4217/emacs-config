;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("pathlib" include nil nil [11 35])
            ("paths" include nil nil [36 74])
            ("RawData_NuScenesAgent_config" variable nil nil [76 348])
            ("RawDataProcessorConfig" variable nil nil [350 666])
            ("TrainingDataProcessorConfig" variable nil nil [669 1194]))          
      :file "data_processor_config.py"
      :pointmax 1195
      :fsize 1808
      :lastmodtime '(24645 31463 342176 63000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("paths" include nil nil [11 47])
            ("DataLoaderConfig" variable nil nil [49 956]))          
      :file "data_loader_config.py"
      :pointmax 957
      :fsize 956
      :lastmodtime '(24645 31463 342176 63000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("RuleBookConfig" variable nil nil [12 1978])
            ("ModelConfig" variable nil nil [1982 3635]))          
      :file "model_config.py"
      :pointmax 3636
      :fsize 3635
      :lastmodtime '(24645 31463 342176 63000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("TrainerConfig" variable nil nil [12 835]))          
      :file "trainer_config.py"
      :pointmax 836
      :fsize 835
      :lastmodtime '(24645 31463 342176 63000)
      :unmatched-syntax nil))
  :file "!home!xli4217!Dropbox!docker!docker_home!agnn!experiment_configs!nuscenes!agnn!py_configs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
