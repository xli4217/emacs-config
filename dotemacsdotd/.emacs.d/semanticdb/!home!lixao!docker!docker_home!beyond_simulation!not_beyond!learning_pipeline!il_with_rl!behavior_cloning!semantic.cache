;; Object behavior_cloning/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "behavior_cloning/"
  :tables
  (list
    (semanticdb-table "behavior_cloning.py"
      :major-mode 'python-mode
      :tags 
        '( ("configuration.configuration" include nil nil [1 54])
            ("il_with_rl.policy.mlp_policy" include nil nil [55 105])
            ("numpy" include nil nil [106 124])
            ("torch" include nil nil [126 138])
            ("torch.nn" include nil nil [139 160])
            ("torch.nn.functional" include nil nil [161 192])
            ("tensorboardX" include nil nil [194 232])
            ("ray" include nil nil [233 243])
            ("cloudpickle" include nil nil [244 262])
            ("future.utils" include nil nil [263 297])
            ("torch.optim" include nil nil [298 325])
            ("utils" include nil nil [327 377])
            ("tqdm" include nil nil [378 401])
            ("BehaviorCloner" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1275 1318])
                            ("self" code nil (reparse-symbol indented_block_body) [1327 1353])
                            ("self" variable nil (reparse-symbol indented_block_body) [1363 1394])
                            ("self" variable nil (reparse-symbol indented_block_body) [1403 1436])
                            ("self" variable nil (reparse-symbol indented_block_body) [1445 1473])
                            ("self" variable nil (reparse-symbol indented_block_body) [1482 1511])
                            ("self" variable nil (reparse-symbol indented_block_body) [1520 1546])
                            ("self" variable nil (reparse-symbol indented_block_body) [1555 1582])
                            ("self" code nil (reparse-symbol indented_block_body) [1591 1645])
                            ("policy_type" variable nil (reparse-symbol indented_block_body) [1655 1703])
                            ("policy_config" variable nil (reparse-symbol indented_block_body) [1712 1764])
                            ("policy_config" variable nil (reparse-symbol indented_block_body) [1774 1829])
                            ("policy_config" variable nil (reparse-symbol indented_block_body) [1838 1896])
                            ("self" variable nil (reparse-symbol indented_block_body) [1905 1945])
                            ("self" variable nil (reparse-symbol indented_block_body) [1955 1974])
                            ("if" code nil (reparse-symbol indented_block_body) [1983 2058])
                            ("if" code nil (reparse-symbol indented_block_body) [2079 2220])
                            ("self" variable nil (reparse-symbol indented_block_body) [2229 2258])
                            ("if" code nil (reparse-symbol indented_block_body) [2267 2328])
                            ("self" code nil (reparse-symbol indented_block_body) [2336 2360]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1228 1232])
                            ("config" variable nil (reparse-symbol function_parameters) [1234 1240])
                            ("seed" variable nil (reparse-symbol function_parameters) [1245 1249]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1215 2351])
                    ("set_seed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2526 2530])
                            ("seed" variable nil (reparse-symbol function_parameters) [2532 2536]))                          )
                        (reparse-symbol indented_block_body) [2513 2650])
                    ("load_demo_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2682 2686])
                            ("demo_data_path" variable nil (reparse-symbol function_parameters) [2688 2702]))                          )
                        (reparse-symbol indented_block_body) [2663 3821])
                    ("construct_negative_log_likelihood_loss" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3877 3881]))                          )
                        (reparse-symbol indented_block_body) [3834 3897])
                    ("construct_KL_loss" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3924 3928]))                          )
                        (reparse-symbol indented_block_body) [3902 3944])
                    ("construct_mse_loss" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3972 3976]))                          )
                        (reparse-symbol indented_block_body) [3949 4015])
                    ("save_policy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4044 4048])
                            ("save_path" variable nil (reparse-symbol function_parameters) [4050 4059]))                          )
                        (reparse-symbol indented_block_body) [4028 4075])
                    ("get_batch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4094 4098])
                            ("batch_size" variable nil (reparse-symbol function_parameters) [4100 4110])
                            ("mode" variable nil (reparse-symbol function_parameters) [4117 4121]))                          )
                        (reparse-symbol indented_block_body) [4080 4886])
                    ("shuffle_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4916 4920]))                          )
                        (reparse-symbol indented_block_body) [4899 5134])
                    ("get_metrics" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5172 5176])
                            ("out" variable nil (reparse-symbol function_parameters) [5178 5181])
                            ("labels" variable nil (reparse-symbol function_parameters) [5183 5189]))                          )
                        (reparse-symbol indented_block_body) [5156 5492])
                    ("train_one_epoch" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5529 5533])
                            ("epoch" variable nil (reparse-symbol function_parameters) [5535 5540])
                            ("num_steps" variable nil (reparse-symbol function_parameters) [5542 5551]))                          )
                        (reparse-symbol indented_block_body) [5509 6796])
                    ("train" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6852 6856]))                          )
                        (reparse-symbol indented_block_body) [6842 7756]))                  
                :type "class")
                nil [1181 7756])
            ("if" code nil nil [7770 7864]))          
      :file "behavior_cloning.py"
      :pointmax 7893
      :fsize 7892
      :lastmodtime '(23387 24067 350458 972000)
      :unmatched-syntax nil)
    (semanticdb-table "utils.py"
      :major-mode 'python-mode
      :tags 
        '( ("torch" include nil nil [1 13])
            ("json" include nil nil [14 25])
            ("os" include nil nil [26 35])
            ("shutil" include nil nil [36 49])
            ("Params" type
               (:documentation "Class that loads hyperparameters from a json file.
            Example:
            ```
            params = Params(json_path)
            print(params.learning_rate)
            params.learning_rate = 0.5  # change the value of learning_rate in params
            ```
        "
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("with" code nil (reparse-symbol indented_block_body) [411 521]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [381 385])
                            ("json_path" variable nil (reparse-symbol function_parameters) [387 396]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [368 521])
                    ("save" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [539 543])
                            ("json_path" variable nil (reparse-symbol function_parameters) [545 554]))                          )
                        (reparse-symbol indented_block_body) [530 655])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [675 679])
                            ("json_path" variable nil (reparse-symbol function_parameters) [681 690]))                          
                        :documentation "Loads parameters from json file")
                        (reparse-symbol indented_block_body) [664 865])
                    ("dict" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [901 905]))                          
                        :documentation "Gives dict-like access to Params instance by `params.dict['learning_rate']")
                        (reparse-symbol indented_block_body) [874 1034]))                  
                :type "class")
                nil [51 1034])
            ("save_dict_to_json" function
               (:documentation "Saves dict of floats in json file
    Args:
    d: (dict) of float-castable values (np.float, int, float, etc.)
    json_path: (string) path to json file
                    "
                :arguments 
                  ( ("d" variable nil (reparse-symbol function_parameters) [1101 1102])
                    ("json_path" variable nil (reparse-symbol function_parameters) [1104 1113]))                  )
                nil [1079 1518])
            ("save_checkpoint" function
               (:documentation "Saves model and training parameters at checkpoint + 'last.pth.tar'. If is_best==True, also saves
    checkpoint + 'best.pth.tar'
    
    Args:
    state: (dict) contains model's state_dict, may contain other keys such as epoch, optimizer state_dict
    is_best: (bool) True if it is the best model seen till now
    checkpoint: (string) folder where parameters are to be saved
    "
                :arguments 
                  ( ("state" variable nil (reparse-symbol function_parameters) [1552 1557])
                    ("is_best" variable nil (reparse-symbol function_parameters) [1559 1566])
                    ("checkpoint" variable nil (reparse-symbol function_parameters) [1568 1578]))                  )
                nil [1532 2372])
            ("load_checkpoint" function
               (:documentation "Loads model parameters (state_dict) from file_path. If optimizer is provided, loads state_dict of
    optimizer assuming it is present in checkpoint.
    
    Args:
    checkpoint: (string) filename which needs to be loaded
    model: (torch.nn.Module) model for which the parameters are loaded
    optimizer: (torch.optim) optional: resume optimizer from checkpoint
    "
                :arguments 
                  ( ("checkpoint" variable nil (reparse-symbol function_parameters) [2418 2428])
                    ("model" variable nil (reparse-symbol function_parameters) [2430 2435])
                    ("optimizer" variable nil (reparse-symbol function_parameters) [2437 2446]))                  )
                nil [2398 3155]))          
      :file "utils.py"
      :pointmax 3155
      :fsize 3154
      :lastmodtime '(23387 22939 992563 453000)
      :unmatched-syntax nil))
  :file "!home!lixao!docker!docker_home!beyond_simulation!not_beyond!learning_pipeline!il_with_rl!behavior_cloning!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
