;; Object envs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "envs/"
  :tables
  (list
    (semanticdb-table "registration.py"
      :major-mode 'python-mode
      :tags 
        '( ("logging" include nil nil [1 15])
            ("pkg_resources" include nil nil [16 36])
            ("re" include nil nil [37 46])
            ("sys" include nil nil [47 57])
            ("gym" include nil nil [59 80])
            ("logger" variable nil nil [82 118])
            ("env_id_re" variable nil nil [181 226])
            ("load" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [237 241]))              ) nil [228 369])
            ("EnvSpec" type
               (:documentation "A specification for a particular instance of the environment. Used
    to register the parameters for official evaluations.

    Args:
        id (str): The official environment ID
        entry_point (Optional[str]): The Python entrypoint of the environment class (e.g. module.name:Class)
        timestep_limit (int): The max number of timesteps per episode during training
        trials (int): The number of trials to average reward over
        reward_threshold (Optional[int]): The reward threshold before the task is considered solved
        local_only: True iff the environment is to be used only on the local machine (e.g. debugging envs)
        kwargs (dict): The kwargs to pass to the environment class
        nondeterministic (bool): Whether this environment is non-deterministic even after seeding
        tags (dict[str:any]): A set of arbitrary key-value tags on this environment, including simple property=True tags

    Attributes:
        id (str): The official environment ID
        timestep_limit (int): The max number of timesteps per episode in official evaluation
        trials (int): The number of trials run in official evaluation
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1746 1758])
                            ("self" variable nil (reparse-symbol indented_block_body) [1799 1835])
                            ("self" variable nil (reparse-symbol indented_block_body) [1844 1864])
                            ("self" variable nil (reparse-symbol indented_block_body) [1873 1913])
                            ("self" variable nil (reparse-symbol indented_block_body) [1955 1995])
                            ("if" code nil (reparse-symbol indented_block_body) [2013 2052])
                            ("self" variable nil (reparse-symbol indented_block_body) [2060 2076])
                            ("match" variable nil (reparse-symbol indented_block_body) [2175 2203])
                            ("if" code nil (reparse-symbol indented_block_body) [2212 2385])
                            ("self" variable nil (reparse-symbol indented_block_body) [2393 2424])
                            ("self" variable nil (reparse-symbol indented_block_body) [2433 2464])
                            ("self" variable nil (reparse-symbol indented_block_body) [2473 2502])
                            ("kwargs" code nil (reparse-symbol indented_block_body) [2552 2558]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1587 1591])
                            ("id" variable nil (reparse-symbol function_parameters) [1593 1595])
                            ("entry_point" variable nil (reparse-symbol function_parameters) [1597 1608])
                            ("timestep_limit" variable nil (reparse-symbol function_parameters) [1615 1629])
                            ("trials" variable nil (reparse-symbol function_parameters) [1636 1642])
                            ("reward_threshold" variable nil (reparse-symbol function_parameters) [1648 1664])
                            ("local_only" variable nil (reparse-symbol function_parameters) [1671 1681])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1689 1695])
                            ("nondeterministic" variable nil (reparse-symbol function_parameters) [1702 1718])
                            ("tags" variable nil (reparse-symbol function_parameters) [1726 1730]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1574 2559])
                    ("make" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2573 2577]))                          
                        :documentation "Instantiates an instance of the environment with appropriate kwargs")
                        (reparse-symbol indented_block_body) [2564 3025])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3043 3047]))                          )
                        (reparse-symbol indented_block_body) [3030 3095]))                  
                :type "class")
                nil [370 3095])
            ("EnvRegistry" type
               (:documentation "Register an env by ID. IDs remain stable over time and are
    guaranteed to resolve to the same environment dynamics (or be
    desupported). The goal is that results on a particular environment
    should always be comparable, and not depend on the version of the
    code that was running.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [3465 3484]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3450 3454]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [3437 3485])
                    ("make" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3499 3503])
                            ("id" variable nil (reparse-symbol function_parameters) [3505 3507]))                          )
                        (reparse-symbol indented_block_body) [3490 3612])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3625 3629]))                          )
                        (reparse-symbol indented_block_body) [3617 3671])
                    ("spec" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3685 3689])
                            ("id" variable nil (reparse-symbol function_parameters) [3691 3693]))                          )
                        (reparse-symbol indented_block_body) [3676 4626])
                    ("register" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4644 4648])
                            ("id" variable nil (reparse-symbol function_parameters) [4650 4652])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [4654 4662]))                          )
                        (reparse-symbol indented_block_body) [4631 4819]))                  
                :type "class")
                nil [3097 4819])
            ("registry" variable nil nil [4845 4869])
            ("register" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [4884 4886])
                ("kwargs" variable nil (reparse-symbol function_parameters) [4888 4896]))              ) nil [4871 4942])
            ("make" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [4952 4954]))              ) nil [4943 4986])
            ("spec" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [4996 4998]))              ) nil [4987 5030]))          
      :file "registration.py"
      :pointmax 5030
      :fsize 5029
      :lastmodtime '(22509 46152 0 0)
      :unmatched-syntax '((NAME 2511 . 2515) (IF 2529 . 2531) (ELSE 2547 . 2551)))
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("gym.envs.registration" include nil nil [1 65])
            ("register" code nil nil [125 253])
            ("register" code nil nil [255 395])
            ("register" code nil nil [397 574])
            ("register" code nil nil [576 754])
            ("register" code nil nil [756 905])
            ("register" code nil nil [907 1041])
            ("register" code nil nil [1097 1238])
            ("register" code nil nil [1240 1381])
            ("register" code nil nil [1383 1531])
            ("register" code nil nil [1533 1700])
            ("register" code nil nil [1702 1815])
            ("register" code nil nil [1817 1928])
            ("register" code nil nil [1982 2115])
            ("register" code nil nil [2117 2270])
            ("register" code nil nil [2272 2409])
            ("register" code nil nil [2411 2564])
            ("register" code nil nil [2566 2695])
            ("register" code nil nil [2894 2978])
            ("register" code nil nil [2980 3168])
            ("register" code nil nil [3170 3357])
            ("register" code nil nil [3359 3462])
            ("register" code nil nil [3464 3570])
            ("register" code nil nil [3572 3718])
            ("register" code nil nil [3720 3845])
            ("register" code nil nil [3847 3972])
            ("register" code nil nil [4033 4162])
            ("register" code nil nil [4164 4288])
            ("register" code nil nil [4290 4427])
            ("register" code nil nil [4429 4544])
            ("register" code nil nil [4546 4651])
            ("register" code nil nil [4653 4759])
            ("register" code nil nil [4761 4841])
            ("register" code nil nil [4843 4942])
            ("register" code nil nil [4944 5024])
            ("register" code nil nil [5025 5119])
            ("for" code nil nil [5264 8915])
            ("register" code nil nil [8974 9541])
            ("register" code nil nil [9543 9841])
            ("register" code nil nil [9843 10104])
            ("register" code nil nil [10162 10303])
            ("register" code nil nil [10305 10446])
            ("register" code nil nil [10448 10595])
            ("register" code nil nil [10597 10745])
            ("register" code nil nil [10809 10916])
            ("register" code nil nil [10918 11031])
            ("register" code nil nil [11110 11242])
            ("register" code nil nil [11244 11368])
            ("register" code nil nil [11421 11553])
            ("register" code nil nil [11604 11738])
            ("register" code nil nil [11826 11958])
            ("register" code nil nil [11978 12100])
            ("register" code nil nil [12102 12232]))          
      :file "__init__.py"
      :pointmax 12233
      :fsize 12232
      :lastmodtime '(22578 11362 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!anaconda!envs!rllab!lib!python2.7!site-packages!gym!envs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
