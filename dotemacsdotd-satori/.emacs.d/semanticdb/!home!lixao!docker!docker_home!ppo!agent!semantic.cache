;; Object agent/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "agent/"
  :tables
  (list
    (semanticdb-table "PPOAgent.py"
      :major-mode 'python-mode
      :tags 
        '( ("rl_pipeline.agent.agent_base" include nil nil [1 51])
            ("scipy.signal" include nil nil [52 71])
            ("numpy" include nil nil [72 90])
            ("tensorflow" include nil nil [92 115])
            ("os" include nil nil [116 125])
            ("PPOAgent" type
               (:superclasses ("AgentBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [356 588]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [172 176])
                            ("agent_params" variable nil (reparse-symbol function_parameters) [195 207])
                            ("sampler" variable nil (reparse-symbol function_parameters) [226 233])
                            ("policy" variable nil (reparse-symbol function_parameters) [252 258])
                            ("value" variable nil (reparse-symbol function_parameters) [277 282])
                            ("logger" variable nil (reparse-symbol function_parameters) [306 312])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [336 344]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [159 589])
                    ("discount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [607 611])
                            ("x" variable nil (reparse-symbol function_parameters) [613 614])
                            ("gamma" variable nil (reparse-symbol function_parameters) [616 621]))                          
                        :documentation " Calculate discounted forward sum of a sequence at each point ")
                        (reparse-symbol indented_block_body) [594 774])
                    ("add_disc_sum_rew" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [800 804])
                            ("batch" variable nil (reparse-symbol function_parameters) [806 811])
                            ("gamma" variable nil (reparse-symbol function_parameters) [813 818]))                          
                        :documentation " Adds discounted sum of rewards to all time steps of all trajectories
        Args:
        batch: as returned by sampler.get_batch()
        gamma: discount

        Returns:
        updated batch (mutates the batch dictionary to add 'Disc_sum_rewards')
        ")
                        (reparse-symbol indented_block_body) [779 1291])
                    ("add_value" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1322 1326])
                            ("batch" variable nil (reparse-symbol function_parameters) [1328 1333]))                          
                        :documentation " Adds estimated value to all time steps of all trajectories
        Args:
        batch: as returned by sampler.get_batch()
 
        
        Returns:
        updated batch (mutates batch dictionary to add 'Values')
        ")
                        (reparse-symbol indented_block_body) [1308 1745])
                    ("add_gae" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1762 1766])
                            ("batch" variable nil (reparse-symbol function_parameters) [1768 1773])
                            ("gamma" variable nil (reparse-symbol function_parameters) [1775 1780])
                            ("lam" variable nil (reparse-symbol function_parameters) [1782 1785]))                          
                        :documentation " Add generalized advantage estimator.
        https://arxiv.org/pdf/1506.02438.pdf
        Args:
        batch: as returned by sampler.get_batch(), must include 'Values' key from add_value().
        gamma: reward discount
        lam: lambda (see paper).
        lam=0 : use TD residuals
        lam=1 : A =  Sum Discounted Rewards - V_hat(s)
        
        Returns:
        updated batch (mutates batch dictionary to add 'Advantages')
        ")
                        (reparse-symbol indented_block_body) [1750 2657])
                    ("build_train_set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2694 2698])
                            ("batch" variable nil (reparse-symbol function_parameters) [2700 2705]))                          
                        :documentation "
        Args:
        batch: batch after processing by add_disc_sum_rew(),
        add_value(), and add_gae()
        
        Returns: dictionary with keys \"Observations\", \"Actions\", \"Advantages\", \"Disc_sum_rew\"
        ")
                        (reparse-symbol indented_block_body) [2674 3642])
                    ("log_batch_stats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3680 3684])
                            ("Observations" variable nil (reparse-symbol function_parameters) [3686 3698])
                            ("Actions" variable nil (reparse-symbol function_parameters) [3700 3707])
                            ("Advantages" variable nil (reparse-symbol function_parameters) [3709 3719])
                            ("Disc_sum_rew" variable nil (reparse-symbol function_parameters) [3721 3733])
                            ("iteration" variable nil (reparse-symbol function_parameters) [3735 3744]))                          
                        :documentation " Log various batch statistics ")
                        (reparse-symbol indented_block_body) [3660 4488])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4517 4521])
                            ("batch" variable nil (reparse-symbol function_parameters) [4523 4528])
                            ("itr" variable nil (reparse-symbol function_parameters) [4530 4533]))                          )
                        (reparse-symbol indented_block_body) [4506 5801])
                    ("train" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5824 5828]))                          )
                        (reparse-symbol indented_block_body) [5814 6800])
                    ("exit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6826 6830]))                          )
                        (reparse-symbol indented_block_body) [6817 6990]))                  
                :type "class")
                nil [127 6990]))          
      :file "PPOAgent.py"
      :pointmax 6990
      :fsize 6989
      :lastmodtime '(23154 21616 991962 294000)
      :unmatched-syntax nil))
  :file "!home!lixao!docker!docker_home!ppo!agent!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
