;; Object sumo_env/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "sumo_env/"
  :tables
  (list
    (semanticdb-table "sumo_env.py"
      :major-mode 'python-mode
      :tags 
        '( ("__future__" include nil nil [1 39])
            ("__future__" include nil nil [40 77])
            ("os" include nil nil [79 88])
            ("sys" include nil nil [89 99])
            ("optparse" include nil nil [100 115])
            ("subprocess" include nil nil [116 133])
            ("random" include nil nil [134 147])
            ("pprint" include nil nil [148 161])
            ("numpy" include nil nil [162 180])
            ("future.utils" include nil nil [181 215])
            ("try" code nil nil [218 660])
            ("SumoEnv" type
               (:superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("'''
        Required args for config
        'gui': whether to invoke sumo-gui
        'sumocfg_path': path where the desired sumocfg resides
        'scope': this is for invoking multiple simulations
        '''" code nil (reparse-symbol indented_block_body) [755 967])
                            ("self" variable nil (reparse-symbol indented_block_body) [981 1001])
                            ("if" code nil (reparse-symbol indented_block_body) [1010 1143])
                            ("self" variable nil (reparse-symbol indented_block_body) [1152 1236])
                            ("traci" code nil (reparse-symbol indented_block_body) [1266 1332])
                            ("self" variable nil (reparse-symbol indented_block_body) [1342 1377])
                            ("traci" code nil (reparse-symbol indented_block_body) [1387 1436])
                            ("traci" code nil (reparse-symbol indented_block_body) [1493 1643])
                            ("self" variable nil (reparse-symbol indented_block_body) [1653 1704])
                            ("self" variable nil (reparse-symbol indented_block_body) [1713 1762])
                            ("self" variable nil (reparse-symbol indented_block_body) [1772 1789])
                            ("self" variable nil (reparse-symbol indented_block_body) [1798 1815]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [703 707])
                            ("config" variable nil (reparse-symbol function_parameters) [709 715])
                            ("seed" variable nil (reparse-symbol function_parameters) [722 726])
                            ("logger" variable nil (reparse-symbol function_parameters) [733 739]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [690 1816])
                    ("get_reward" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1868 1872])
                            ("state" variable nil (reparse-symbol function_parameters) [1874 1879])
                            ("action" variable nil (reparse-symbol function_parameters) [1886 1892])
                            ("next_state" variable nil (reparse-symbol function_parameters) [1899 1909]))                          )
                        (reparse-symbol indented_block_body) [1853 2024])
                    ("get_info" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2050 2054]))                          )
                        (reparse-symbol indented_block_body) [2037 2075])
                    ("get_done" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2093 2097])
                            ("state" variable nil (reparse-symbol function_parameters) [2099 2104])
                            ("action" variable nil (reparse-symbol function_parameters) [2111 2117])
                            ("next_state" variable nil (reparse-symbol function_parameters) [2124 2134]))                          )
                        (reparse-symbol indented_block_body) [2080 2287])
                    ("get_state" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2306 2310]))                          )
                        (reparse-symbol indented_block_body) [2292 5729])
                    ("get_lane_gap_and_speed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5773 5777])
                            ("lane_veh_pos" variable nil (reparse-symbol function_parameters) [5779 5791])
                            ("lane_veh_speed" variable nil (reparse-symbol function_parameters) [5793 5807])
                            ("ego_pos" variable nil (reparse-symbol function_parameters) [5809 5816]))                          )
                        (reparse-symbol indented_block_body) [5746 7071])
                    ("reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7094 7098]))                          )
                        (reparse-symbol indented_block_body) [7084 7248])
                    ("step" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8500 8504])
                            ("action" variable nil (reparse-symbol function_parameters) [8506 8512]))                          )
                        (reparse-symbol indented_block_body) [8491 9027])
                    ("seed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9062 9066])
                            ("seed" variable nil (reparse-symbol function_parameters) [9068 9072]))                          )
                        (reparse-symbol indented_block_body) [9053 9134])
                    ("save" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9148 9152])
                            ("save_dir" variable nil (reparse-symbol function_parameters) [9154 9162]))                          )
                        (reparse-symbol indented_block_body) [9139 9178])
                    ("restore" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9195 9199])
                            ("restore_dir" variable nil (reparse-symbol function_parameters) [9201 9212]))                          )
                        (reparse-symbol indented_block_body) [9183 9228])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9243 9247]))                          )
                        (reparse-symbol indented_block_body) [9233 9299])
                    ("state_space" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9357 9361]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9327 9474])
                    ("action_space" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9510 9514]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [9479 9603]))                  
                :type "class")
                nil [662 9603])
            ("if" code nil nil [9614 10019]))          
      :file "sumo_env.py"
      :pointmax 10019
      :fsize 10018
      :lastmodtime '(23255 38708 127960 67000)
      :unmatched-syntax nil)
    (semanticdb-table "rlfps_gym_env_wrapper.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("gym" include nil nil [21 31])
            ("gym" include nil nil [32 54])
            ("gym.utils" include nil nil [55 84])
            ("RlfpsGymEnvWrapper" type
               (:superclasses ("gym.Env")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [166 186])
                            ("self" variable nil (reparse-symbol indented_block_body) [266 448])
                            ("self" variable nil (reparse-symbol indented_block_body) [492 568]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [140 144])
                            ("rlfps_env" variable nil (reparse-symbol function_parameters) [146 155]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [127 569])
                    ("step" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [591 595])
                            ("action" variable nil (reparse-symbol function_parameters) [597 603]))                          )
                        (reparse-symbol indented_block_body) [582 645])
                    ("reset" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [660 664]))                          )
                        (reparse-symbol indented_block_body) [650 699])
                    ("render" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [715 719]))                          )
                        (reparse-symbol indented_block_body) [704 735])
                    ("close" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [750 754]))                          )
                        (reparse-symbol indented_block_body) [740 770])
                    ("seed" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [784 788])
                            ("seed" variable nil (reparse-symbol function_parameters) [790 794]))                          )
                        (reparse-symbol indented_block_body) [775 814]))                  
                :type "class")
                nil [87 814]))          
      :file "rlfps_gym_env_wrapper.py"
      :pointmax 814
      :fsize 813
      :lastmodtime '(23246 35866 27161 746000)
      :unmatched-syntax nil))
  :file "!home!lixao!docker!docker_home!beyond_simulation!not_beyond!learning_pipeline!env!sumo_env!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
