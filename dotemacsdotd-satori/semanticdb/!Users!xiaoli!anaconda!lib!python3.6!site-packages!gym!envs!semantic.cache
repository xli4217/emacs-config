;; Object envs/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "envs/"
  :tables
  (list
    (semanticdb-table "registration.py"
      :major-mode 'python-mode
      :tags 
        '( ("pkg_resources" include nil nil [1 21])
            ("re" include nil nil [22 31])
            ("gym" include nil nil [32 61])
            ("env_id_re" variable nil nil [311 371])
            ("load" function (:arguments 
              ( ("name" variable nil (reparse-symbol function_parameters) [382 386]))              ) nil [373 514])
            ("EnvSpec" type
               (:documentation "A specification for a particular instance of the environment. Used
    to register the parameters for official evaluations.

    Args:
        id (str): The official environment ID
        entry_point (Optional[str]): The Python entrypoint of the environment class (e.g. module.name:Class)
        trials (int): The number of trials to average reward over
        reward_threshold (Optional[int]): The reward threshold before the task is considered solved
        local_only: True iff the environment is to be used only on the local machine (e.g. debugging envs)
        kwargs (dict): The kwargs to pass to the environment class
        nondeterministic (bool): Whether this environment is non-deterministic even after seeding
        tags (dict[str:any]): A set of arbitrary key-value tags on this environment, including simple property=True tags

    Attributes:
        id (str): The official environment ID
        trials (int): The number of trials run in official evaluation
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1762 1774])
                            ("self" variable nil (reparse-symbol indented_block_body) [1815 1835])
                            ("self" variable nil (reparse-symbol indented_block_body) [1844 1884])
                            ("self" variable nil (reparse-symbol indented_block_body) [1926 1966])
                            ("if" code nil (reparse-symbol indented_block_body) [1976 2015])
                            ("self" variable nil (reparse-symbol indented_block_body) [2023 2039])
                            ("if" code nil (reparse-symbol indented_block_body) [2086 2232])
                            ("tags" variable nil (reparse-symbol indented_block_body) [2707 2777])
                            ("if" code nil (reparse-symbol indented_block_body) [2839 2917])
                            ("self" variable nil (reparse-symbol indented_block_body) [3173 3215])
                            ("self" variable nil (reparse-symbol indented_block_body) [3224 3270])
                            ("match" variable nil (reparse-symbol indented_block_body) [3369 3397])
                            ("if" code nil (reparse-symbol indented_block_body) [3406 3579])
                            ("self" variable nil (reparse-symbol indented_block_body) [3587 3618])
                            ("self" variable nil (reparse-symbol indented_block_body) [3627 3658])
                            ("self" variable nil (reparse-symbol indented_block_body) [3667 3696])
                            ("kwargs" code nil (reparse-symbol indented_block_body) [3746 3752]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1553 1557])
                            ("id" variable nil (reparse-symbol function_parameters) [1559 1561])
                            ("entry_point" variable nil (reparse-symbol function_parameters) [1563 1574])
                            ("trials" variable nil (reparse-symbol function_parameters) [1581 1587])
                            ("reward_threshold" variable nil (reparse-symbol function_parameters) [1593 1609])
                            ("local_only" variable nil (reparse-symbol function_parameters) [1616 1626])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [1634 1640])
                            ("nondeterministic" variable nil (reparse-symbol function_parameters) [1647 1663])
                            ("tags" variable nil (reparse-symbol function_parameters) [1671 1675])
                            ("max_episode_steps" variable nil (reparse-symbol function_parameters) [1682 1699])
                            ("max_episode_seconds" variable nil (reparse-symbol function_parameters) [1706 1725])
                            ("timestep_limit" variable nil (reparse-symbol function_parameters) [1732 1746]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1540 3753])
                    ("make" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3767 3771]))                          
                        :documentation "Instantiates an instance of the environment with appropriate kwargs")
                        (reparse-symbol indented_block_body) [3758 4332])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4350 4354]))                          )
                        (reparse-symbol indented_block_body) [4337 4402])
                    ("timestep_limit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4440 4444]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4407 4485])
                    ("timestep_limit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4536 4540])
                            ("value" variable nil (reparse-symbol function_parameters) [4542 4547]))                          
                        :decorators 
                          ( ("timestep_limit.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4490 4589]))                  
                :type "class")
                nil [515 4589])
            ("EnvRegistry" type
               (:documentation "Register an env by ID. IDs remain stable over time and are
    guaranteed to resolve to the same environment dynamics (or be
    desupported). The goal is that results on a particular environment
    should always be comparable, and not depend on the version of the
    code that was running.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [4959 4978]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4944 4948]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [4931 4979])
                    ("make" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4993 4997])
                            ("id" variable nil (reparse-symbol function_parameters) [4999 5001]))                          )
                        (reparse-symbol indented_block_body) [4984 5549])
                    ("all" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5563 5567]))                          )
                        (reparse-symbol indented_block_body) [5555 5609])
                    ("spec" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5623 5627])
                            ("id" variable nil (reparse-symbol function_parameters) [5629 5631]))                          )
                        (reparse-symbol indented_block_body) [5614 6564])
                    ("register" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6582 6586])
                            ("id" variable nil (reparse-symbol function_parameters) [6588 6590])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [6592 6600]))                          )
                        (reparse-symbol indented_block_body) [6569 6757]))                  
                :type "class")
                nil [4591 6757])
            ("registry" variable nil nil [6783 6807])
            ("register" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [6822 6824])
                ("kwargs" variable nil (reparse-symbol function_parameters) [6826 6834]))              ) nil [6809 6880])
            ("make" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [6890 6892]))              ) nil [6881 6924])
            ("spec" function (:arguments 
              ( ("id" variable nil (reparse-symbol function_parameters) [6934 6936]))              ) nil [6925 6968])
            ("warn_once" variable nil nil [6969 6985])
            ("patch_deprecated_methods" function
               (:documentation "
    Methods renamed from '_method' to 'method', render() no longer has 'close' parameter, close is a separate method.
    For backward compatibility, this makes it possible to work with unmodified environments.
    "
                :arguments 
                  ( ("env" variable nil (reparse-symbol function_parameters) [7016 7019]))                  )
                nil [6987 7674]))          
      :file "registration.py"
      :pointmax 7674
      :fsize 7673
      :lastmodtime '(23164 37229 0 0)
      :unmatched-syntax '((NAME 3705 . 3709) (IF 3723 . 3725) (ELSE 3741 . 3745)))
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("gym.envs.registration" include nil nil [1 65])
            ("register" code nil nil [125 256])
            ("register" code nil nil [258 401])
            ("register" code nil nil [403 583])
            ("register" code nil nil [585 766])
            ("register" code nil nil [768 920])
            ("register" code nil nil [922 1059])
            ("register" code nil nil [1115 1259])
            ("register" code nil nil [1261 1405])
            ("register" code nil nil [1407 1558])
            ("register" code nil nil [1560 1730])
            ("register" code nil nil [1732 1848])
            ("register" code nil nil [1850 1964])
            ("register" code nil nil [2018 2154])
            ("register" code nil nil [2156 2312])
            ("register" code nil nil [2314 2454])
            ("register" code nil nil [2456 2612])
            ("register" code nil nil [2614 2746])
            ("register" code nil nil [2803 2887])
            ("register" code nil nil [2889 3010])
            ("register" code nil nil [3011 3125])
            ("register" code nil nil [3127 3318])
            ("register" code nil nil [3320 3510])
            ("register" code nil nil [3512 3602])
            ("register" code nil nil [3604 3710])
            ("register" code nil nil [3712 3821])
            ("register" code nil nil [3823 3970])
            ("register" code nil nil [3972 4100])
            ("register" code nil nil [4102 4230])
            ("register" code nil nil [4291 4423])
            ("register" code nil nil [4425 4554])
            ("register" code nil nil [4556 4687])
            ("register" code nil nil [4689 4820])
            ("register" code nil nil [4822 4974])
            ("register" code nil nil [4976 5141])
            ("register" code nil nil [5143 5286])
            ("register" code nil nil [5288 5421])
            ("register" code nil nil [5423 5557])
            ("register" code nil nil [5559 5667])
            ("register" code nil nil [5669 5796])
            ("register" code nil nil [5798 5906])
            ("register" code nil nil [5908 6030])
            ("_merge" function (:arguments 
              ( ("a" variable nil (reparse-symbol function_parameters) [6098 6099])
                ("b" variable nil (reparse-symbol function_parameters) [6101 6102]))              ) nil [6087 6134])
            ("for" code nil nil [6135 10020])
            ("for" code nil nil [10164 13841])
            ("register" code nil nil [13868 13979])
            ("register" code nil nil [13980 14103])
            ("register" code nil nil [14104 14251])
            ("register" code nil nil [14253 14373]))          
      :file "__init__.py"
      :pointmax 14375
      :fsize 14374
      :lastmodtime '(23247 47818 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!anaconda!lib!python3.6!site-packages!gym!envs!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
