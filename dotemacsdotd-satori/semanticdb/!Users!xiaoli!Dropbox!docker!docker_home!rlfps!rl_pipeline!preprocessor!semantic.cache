;; Object preprocessor/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "preprocessor/"
  :tables
  (list
    (semanticdb-table "running_average.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("rl_pipeline.preprocessor.preprocessor" include nil nil [20 82])
            ("cloudpickle" include nil nil [83 101])
            ("copy" include nil nil [102 113])
            ("RunningAverage" type
               (:superclasses ("Preprocessor")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [360 416])
                            ("self" variable nil (reparse-symbol indented_block_body) [426 462])
                            ("self" variable nil (reparse-symbol indented_block_body) [471 511])
                            ("self" variable nil (reparse-symbol indented_block_body) [520 560])
                            ("self" variable nil (reparse-symbol indented_block_body) [578 589])
                            ("self" variable nil (reparse-symbol indented_block_body) [598 647])
                            ("self" variable nil (reparse-symbol indented_block_body) [656 705])
                            ("self" variable nil (reparse-symbol indented_block_body) [714 764]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [315 319])
                            ("preprocessor_param" variable nil (reparse-symbol function_parameters) [321 339]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [302 765])
                    ("update_with_sample" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [793 797])
                            ("x" variable nil (reparse-symbol function_parameters) [799 800]))                          )
                        (reparse-symbol indented_block_body) [770 2519])
                    ("update_with_other_distribution" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2596 2600])
                            ("other" variable nil (reparse-symbol function_parameters) [2602 2607]))                          )
                        (reparse-symbol indented_block_body) [2561 2908])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2933 2937])
                            ("X" variable nil (reparse-symbol function_parameters) [2939 2940]))                          )
                        (reparse-symbol indented_block_body) [2922 3176])
                    ("get_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3221 3225]))                          )
                        (reparse-symbol indented_block_body) [3206 3305])
                    ("restore_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3329 3333])
                            ("params" variable nil (reparse-symbol function_parameters) [3335 3341]))                          )
                        (reparse-symbol indented_block_body) [3310 3466])
                    ("save_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3502 3506])
                            ("save_path" variable nil (reparse-symbol function_parameters) [3508 3517]))                          )
                        (reparse-symbol indented_block_body) [3486 3639])
                    ("restore_preprocessor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3669 3673])
                            ("restore_path" variable nil (reparse-symbol function_parameters) [3675 3687]))                          )
                        (reparse-symbol indented_block_body) [3644 3811])
                    ("get_scaled_x" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3845 3849])
                            ("x" variable nil (reparse-symbol function_parameters) [3851 3852]))                          )
                        (reparse-symbol indented_block_body) [3828 4058])
                    ("n" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4084 4088]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4064 4114])
                    ("mean" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4142 4146]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4119 4172])
                    ("var" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4199 4203]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4177 4284])
                    ("std" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4311 4315]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4289 4573])
                    ("shape" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4602 4606]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [4578 4638]))                  
                :type "class")
                nil [249 4638])
            ("if" code nil nil [4640 5214]))          
      :file "running_average.py"
      :pointmax 5214
      :fsize 5213
      :lastmodtime '(23245 26324 0 0)
      :unmatched-syntax '((RETURN 4214 . 4220) (IF 4245 . 4247) (ELSE 4260 . 4264)))
    (semanticdb-table "preprocessor.py"
      :file "preprocessor.py"
      :fsize 926
      :lastmodtime '(23225 30160 0 0))
    (semanticdb-table "running_average_bak.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("rl_pipeline.preprocessor.preprocessor" include nil nil [20 82])
            ("cloudpickle" include nil nil [83 101])
            ("RunningAverage" type
               (:documentation " Generate scale and offset based on running mean and stddev along axis=0

        offset = running mean
        scale = 1 / (stddev + 0.1) / 3 (i.e. 3x stddev = +/- 1.0)
    "
                :superclasses ("Preprocessor")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("\"\"\"
        Args:
            obs_dim: dimension of axis=1
        \"\"\"" code nil (reparse-symbol indented_block_body) [382 452])
                            ("super" code nil (reparse-symbol indented_block_body) [462 523])
                            ("self" variable nil (reparse-symbol indented_block_body) [541 566])
                            ("self" variable nil (reparse-symbol indented_block_body) [575 601])
                            ("self" variable nil (reparse-symbol indented_block_body) [610 620])
                            ("self" variable nil (reparse-symbol indented_block_body) [629 639])
                            ("self" variable nil (reparse-symbol indented_block_body) [648 670]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [342 346])
                            ("dim" variable nil (reparse-symbol function_parameters) [348 351])
                            ("preprocessor_param" variable nil (reparse-symbol function_parameters) [353 371]))                          
                        :documentation "
        Args:
            obs_dim: dimension of axis=1
        "
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [329 671])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [696 700])
                            ("X" variable nil (reparse-symbol function_parameters) [702 703]))                          
                        :documentation " Update running mean and variance (this is an exact method)
        Args:
            X: NumPy array, shape = (N, dim)

        see: https://stats.stackexchange.com/questions/43159/how-to-calculate-pooled-
               variance-of-two-groups-given-known-group-variances-mean
        ")
                        (reparse-symbol indented_block_body) [685 1814])
                    ("get_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1847 1851]))                          )
                        (reparse-symbol indented_block_body) [1832 1925])
                    ("save_params" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1946 1950])
                            ("save_path" variable nil (reparse-symbol function_parameters) [1952 1961]))                          )
                        (reparse-symbol indented_block_body) [1930 2083])
                    ("restore_preprocessor" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2113 2117])
                            ("restore_path" variable nil (reparse-symbol function_parameters) [2119 2131]))                          )
                        (reparse-symbol indented_block_body) [2088 2320])
                    ("get_scaled_x" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2354 2358])
                            ("x" variable nil (reparse-symbol function_parameters) [2360 2361])
                            ("shift_mean" variable nil (reparse-symbol function_parameters) [2363 2373]))                          
                        :documentation " returns 2-tuple: (scale, offset) ")
                        (reparse-symbol indented_block_body) [2337 2656]))                  
                :type "class")
                nil [103 2656])
            ("if" code nil nil [2658 2693]))          
      :file "running_average_bak.py"
      :pointmax 2693
      :fsize 2692
      :lastmodtime '(23225 19284 0 0)
      :unmatched-syntax '((IF 2658 . 2660) ($EOI 2689 . 2689) (IF 2658 . 2660) ($EOI 2677 . 2677))))
  :file "!Users!xiaoli!Dropbox!docker!docker_home!rlfps!rl_pipeline!preprocessor!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
