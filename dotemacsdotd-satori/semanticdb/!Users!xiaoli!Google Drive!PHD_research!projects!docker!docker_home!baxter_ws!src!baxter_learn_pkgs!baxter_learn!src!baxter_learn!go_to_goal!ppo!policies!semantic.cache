;; Object policies/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "policies/"
  :tables
  (list
    (semanticdb-table "mlp_policy.py"
      :major-mode 'python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("tensorflow" include nil nil [20 43])
            ("os" include nil nil [44 53])
            ("MlpPolicy" type
               (:members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [141 161])
                            ("self" variable nil (reparse-symbol indented_block_body) [170 201])
                            ("self" variable nil (reparse-symbol indented_block_body) [210 239])
                            ("self" variable nil (reparse-symbol indented_block_body) [248 285])
                            ("self" variable nil (reparse-symbol indented_block_body) [294 329])
                            ("self" variable nil (reparse-symbol indented_block_body) [338 372])
                            ("self" variable nil (reparse-symbol indented_block_body) [381 430])
                            ("self" variable nil (reparse-symbol indented_block_body) [439 488])
                            ("self" variable nil (reparse-symbol indented_block_body) [506 538])
                            ("self" variable nil (reparse-symbol indented_block_body) [547 588])
                            ("self" variable nil (reparse-symbol indented_block_body) [597 632])
                            ("self" variable nil (reparse-symbol indented_block_body) [641 676])
                            ("self" code nil (reparse-symbol indented_block_body) [699 718])
                            ("if" code nil (reparse-symbol indented_block_body) [727 838])
                            ("if" code nil (reparse-symbol indented_block_body) [848 1005])
                            ("self" code nil (reparse-symbol indented_block_body) [1014 1047]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [91 95])
                            ("config" variable nil (reparse-symbol function_parameters) [97 103])
                            ("logger" variable nil (reparse-symbol function_parameters) [105 111])
                            ("deploy" variable nil (reparse-symbol function_parameters) [118 124]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [78 1048])
                    ("save" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1078 1082])
                            ("model_dir" variable nil (reparse-symbol function_parameters) [1084 1093])
                            ("model_name" variable nil (reparse-symbol function_parameters) [1095 1105]))                          )
                        (reparse-symbol indented_block_body) [1069 1188])
                    ("restore" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1205 1209])
                            ("model_dir" variable nil (reparse-symbol function_parameters) [1211 1220]))                          )
                        (reparse-symbol indented_block_body) [1193 1300])
                    ("_build_graph" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1330 1334]))                          )
                        (reparse-symbol indented_block_body) [1313 1929])
                    ("_build_tensorboard_summary" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1965 1969]))                          )
                        (reparse-symbol indented_block_body) [1934 2252])
                    ("_placeholders" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2292 2296]))                          )
                        (reparse-symbol indented_block_body) [2274 3000])
                    ("_policy_nn" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3020 3024]))                          )
                        (reparse-symbol indented_block_body) [3005 4763])
                    ("_logprob" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4782 4786]))                          
                        :documentation " Calculate log probabilities of a batch of observations & actions
        Calculates log probabilities using previous step's model parameters and
        new parameters being trained.
        ")
                        (reparse-symbol indented_block_body) [4769 5477])
                    ("_kl_entropy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5499 5503]))                          
                        :documentation "
        Add to Graph:
        1. KL divergence between old and new distributions
        2. Entropy of present policy given states and actions
        https://en.wikipedia.org/wiki/Multivariate_normal_distribution#Kullback.E2.80.93Leibler_divergence
        https://en.wikipedia.org/wiki/Multivariate_normal_distribution#Entropy
        ")
                        (reparse-symbol indented_block_body) [5483 6484])
                    ("_sample" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6510 6514]))                          
                        :documentation " Sample from distribution, given observation ")
                        (reparse-symbol indented_block_body) [6498 6745])
                    ("_deterministic_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6776 6780]))                          )
                        (reparse-symbol indented_block_body) [6750 6928])
                    ("_loss_train_op" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6960 6964]))                          
                        :documentation "
        Three loss terms:
        1) standard policy gradient
        2) D_KL(pi_old || pi_new)
        3) Hinge loss on [D_KL - kl_targ]^2
        See: https://arxiv.org/pdf/1707.02286.pdf
        ")
                        (reparse-symbol indented_block_body) [6941 8122])
                    ("_init_session" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8145 8149]))                          
                        :documentation "Launch TensorFlow session and initialize variables")
                        (reparse-symbol indented_block_body) [8127 8325])
                    ("get_action" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8436 8440])
                            ("obs" variable nil (reparse-symbol function_parameters) [8442 8445])
                            ("deterministic" variable nil (reparse-symbol function_parameters) [8447 8460]))                          
                        :documentation "get action from distribution")
                        (reparse-symbol indented_block_body) [8421 8846])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8862 8866])
                            ("observes" variable nil (reparse-symbol function_parameters) [8868 8876])
                            ("actions" variable nil (reparse-symbol function_parameters) [8878 8885])
                            ("advantages" variable nil (reparse-symbol function_parameters) [8887 8897])
                            ("itr" variable nil (reparse-symbol function_parameters) [8899 8902]))                          
                        :documentation " Update policy based on observations, actions and advantages
        Args:
        observes: observations, shape = (N, obs_dim)
        actions: actions, shape = (N, act_dim)
        advantages: advantages, shape = (N,)
        logger: Logger object, see utils.py
        ")
                        (reparse-symbol indented_block_body) [8851 10859])
                    ("close_sess" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10887 10891]))                          
                        :documentation " Close TensorFlow session ")
                        (reparse-symbol indented_block_body) [10872 10960]))                  
                :type "class")
                nil [55 10960]))          
      :file "mlp_policy.py"
      :pointmax 10960
      :fsize 10959
      :lastmodtime '(23155 35566 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!Google Drive!PHD_research!projects!docker!docker_home!baxter_ws!src!baxter_learn_pkgs!baxter_learn!src!baxter_learn!go_to_goal!ppo!policies!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
