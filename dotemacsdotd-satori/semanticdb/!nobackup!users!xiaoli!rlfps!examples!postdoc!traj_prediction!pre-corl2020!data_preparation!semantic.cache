;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("numpy" include nil nil [11 29])
            ("time" include nil nil [30 41])
            ("external_libs.nuscenes" include nil nil [43 86])
            ("external_libs.nuscenes.prediction" include nil nil [87 146])
            ("external_libs.nuscenes.eval.prediction.splits" include nil nil [147 235])
            ("cloudpickle" include nil nil [237 255])
            ("h5py" include nil nil [256 267])
            ("tqdm" include nil nil [268 279])
            ("multiprocessing" include nil nil [281 303])
            ("torch" include nil nil [304 316])
            ("future.utils" include nil nil [320 354])
            ("utils.utils" include nil nil [355 404])
            ("default_config" variable nil nil [406 811])
            ("NuScenesDataPreparation" type
               (:superclasses ("object")
                :members 
                  ( ("'''
    if 'data_format' is 'pickle': Turn raw data in to data file consisting of a dict of {<instance_token>_<sample_token>: (input_representation, target)}

    if 'data_format' is 'hdf5': [(input_rep, target), ...]
    https://www.pythonforthelab.com/blog/how-to-use-hdf5-files-in-python/
    '''" code nil (reparse-symbol indented_block_body) [857 1156])
                    ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1212 1264])
                            ("self" code nil (reparse-symbol indented_block_body) [1273 1323])
                            ("self" variable nil (reparse-symbol indented_block_body) [1332 1369])
                            ("self" variable nil (reparse-symbol indented_block_body) [1379 1496])
                            ("self" variable nil (reparse-symbol indented_block_body) [1506 1544])
                            ("self" variable nil (reparse-symbol indented_block_body) [1554 1708])
                            ("data_from_token_config" variable nil (reparse-symbol indented_block_body) [1718 1805])
                            ("self" variable nil (reparse-symbol indented_block_body) [1814 1941])
                            ("self" variable nil (reparse-symbol indented_block_body) [1951 1965]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1174 1178])
                            ("config" variable nil (reparse-symbol function_parameters) [1180 1186]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1161 1966])
                    ("store_data" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1994 1998])
                            ("int" variable nil (reparse-symbol function_parameters) [2012 2015]))                          )
                        (reparse-symbol indented_block_body) [1979 4970])
                    ("run" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4995 4999]))                          )
                        (reparse-symbol indented_block_body) [4987 6834]))                  
                :type "class")
                nil [814 6834])
            ("if" code nil nil [6849 9721]))          
      :file "nuscenes_data_preparation.py"
      :pointmax 9721
      :fsize 9720
      :lastmodtime '(24350 17495 318574 258000)
      :unmatched-syntax '((NAME 2000 . 2010) (COLON 2010 . 2011))))
  :file "!nobackup!users!xiaoli!rlfps!examples!postdoc!traj_prediction!pre-corl2020!data_preparation!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
