;; Object compose_policy/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "compose_policy/"
  :tables
  (list
    (semanticdb-table "q_table_based_policy_composition.py"
      :major-mode 'python-mode
      :tags 
        '( ("os" include nil nil [1 10])
            ("numpy" include nil nil [11 29])
            ("copy" include nil nil [30 41])
            ("future.utils" include nil nil [42 76])
            ("rl_pipeline.algo_devel.tl_policy_composition.policy_composition_base" include nil nil [78 180])
            ("lomap.algorithms.product" include nil nil [181 231])
            ("lomap.classes" include nil nil [232 261])
            ("tl_tools.fsa_reward" include nil nil [262 303])
            ("QTableBasedPolicyComposer" type
               (:superclasses ("PolicyCompositionBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("'''
        base_policies (list of dictionaries) of form
        [{\"name\": policy1,
          \"fsa_reward\": fsa_reward1,
          \"Q\": Q1},
        {...},
        ...]

        config (dictionary) of form
        { 'agent': {\"type\": QLearningAgent, 'hyperparams': {'max_itr': 1000, 'lr':0.1, 'gamma': 0.99, 'initial_epsilon': 1.0, 'decay_rate':0.999, 'episode_horizon': 1000}}}
        
        TODO: currently only supports conjunction of two policies
        '''" code nil (reparse-symbol indented_block_body) [431 896])
                            ("super" code nil (reparse-symbol indented_block_body) [905 980])
                            ("self" variable nil (reparse-symbol indented_block_body) [1084 1115])
                            ("self" variable nil (reparse-symbol indented_block_body) [1124 1155])
                            ("self" variable nil (reparse-symbol indented_block_body) [1165 1214])
                            ("self" variable nil (reparse-symbol indented_block_body) [1223 1272])
                            ("self" variable nil (reparse-symbol indented_block_body) [1282 1314])
                            ("self" variable nil (reparse-symbol indented_block_body) [1323 1355])
                            ("self" variable nil (reparse-symbol indented_block_body) [1365 1453])
                            ("self" code nil (reparse-symbol indented_block_body) [1462 1541])
                            ("self" variable nil (reparse-symbol indented_block_body) [1551 1581])
                            ("self" variable nil (reparse-symbol indented_block_body) [1661 1685])
                            ("self" variable nil (reparse-symbol indented_block_body) [1703 1716]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [380 384])
                            ("config" variable nil (reparse-symbol function_parameters) [386 392])
                            ("base_policies" variable nil (reparse-symbol function_parameters) [394 407])
                            ("memory_pool" variable nil (reparse-symbol function_parameters) [409 420]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [367 1717])
                    ("get_node_disjuntive_Q" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1756 1760])
                            ("q0" variable nil (reparse-symbol function_parameters) [1762 1764])
                            ("q1" variable nil (reparse-symbol function_parameters) [1766 1768])
                            ("update_agent" variable nil (reparse-symbol function_parameters) [1770 1782]))                          )
                        (reparse-symbol indented_block_body) [1730 2139])
                    ("get_node_conjuntive_Q" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2170 2174])
                            ("q0" variable nil (reparse-symbol function_parameters) [2176 2178])
                            ("q1" variable nil (reparse-symbol function_parameters) [2180 2182])
                            ("update_agent" variable nil (reparse-symbol function_parameters) [2184 2196]))                          )
                        (reparse-symbol indented_block_body) [2144 3105])
                    ("get_node_negation_Q" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3146 3150])
                            ("q0" variable nil (reparse-symbol function_parameters) [3152 3154]))                          )
                        (reparse-symbol indented_block_body) [3122 3220])
                    ("get_fsa_disjunction_policy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3264 3268]))                          )
                        (reparse-symbol indented_block_body) [3233 3284])
                    ("get_fsa_conjunction_policy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3328 3332]))                          )
                        (reparse-symbol indented_block_body) [3297 4386])
                    ("get_fsa_negation_policy" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4431 4435]))                          )
                        (reparse-symbol indented_block_body) [4403 4451]))                  
                :type "class")
                nil [306 4451])
            ("if" code nil nil [4453 7650]))          
      :file "q_table_based_policy_composition.py"
      :pointmax 7650
      :fsize 7649
      :lastmodtime '(23234 54744 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "policy_composition_base.py"
      :file "policy_composition_base.py"
      :fsize 308
      :lastmodtime '(23234 34990 0 0)))
  :file "!Users!xiaoli!Dropbox!docker!docker_home!rlfps!rl_pipeline!algo_devel!tl_policy_composition!compose_policy!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
