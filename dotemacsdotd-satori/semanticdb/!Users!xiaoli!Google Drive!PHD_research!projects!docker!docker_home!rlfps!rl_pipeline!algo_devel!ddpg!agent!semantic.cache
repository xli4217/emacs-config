;; Object agent/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "agent/"
  :tables
  (list
    (semanticdb-table "ddpg_agent.py"
      :major-mode 'python-mode
      :tags 
        '( ("rl_pipeline.agent.memory_agent_base" include nil nil [1 64])
            ("rl_pipeline.logging.logger" include nil nil [65 108])
            ("scipy.signal" include nil nil [110 129])
            ("numpy" include nil nil [130 148])
            ("tensorflow" include nil nil [150 173])
            ("os" include nil nil [174 183])
            ("DDPGAgent" type
               (:superclasses ("AgentBase")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [457 749]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [231 235])
                            ("agent_params" variable nil (reparse-symbol function_parameters) [254 266])
                            ("sampler" variable nil (reparse-symbol function_parameters) [285 292])
                            ("policy" variable nil (reparse-symbol function_parameters) [311 317])
                            ("value" variable nil (reparse-symbol function_parameters) [341 346])
                            ("replay_buffer" variable nil (reparse-symbol function_parameters) [370 383])
                            ("logger" variable nil (reparse-symbol function_parameters) [407 413])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [437 445]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [218 750])
                    ("normalize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [769 773])
                            ("x" variable nil (reparse-symbol function_parameters) [775 776])
                            ("stats" variable nil (reparse-symbol function_parameters) [778 783]))                          )
                        (reparse-symbol indented_block_body) [755 877])
                    ("denormalize" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [898 902])
                            ("x" variable nil (reparse-symbol function_parameters) [904 905])
                            ("stats" variable nil (reparse-symbol function_parameters) [907 912]))                          )
                        (reparse-symbol indented_block_body) [882 1004])
                    ("reduce_std" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1036 1040])
                            ("x" variable nil (reparse-symbol function_parameters) [1042 1043])
                            ("axis" variable nil (reparse-symbol function_parameters) [1045 1049])
                            ("keepdims" variable nil (reparse-symbol function_parameters) [1056 1064]))                          )
                        (reparse-symbol indented_block_body) [1021 1146])
                    ("reduce_var" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1166 1170])
                            ("x" variable nil (reparse-symbol function_parameters) [1172 1173])
                            ("axis" variable nil (reparse-symbol function_parameters) [1175 1179])
                            ("keepdims" variable nil (reparse-symbol function_parameters) [1186 1194]))                          )
                        (reparse-symbol indented_block_body) [1151 1375])
                    ("get_target_updates" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1403 1407])
                            ("vars" variable nil (reparse-symbol function_parameters) [1409 1413])
                            ("target_vars" variable nil (reparse-symbol function_parameters) [1415 1426])
                            ("tau" variable nil (reparse-symbol function_parameters) [1428 1431]))                          )
                        (reparse-symbol indented_block_body) [1380 1964])
                    ("discount" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2826 2830])
                            ("x" variable nil (reparse-symbol function_parameters) [2832 2833])
                            ("gamma" variable nil (reparse-symbol function_parameters) [2835 2840]))                          
                        :documentation " Calculate discounted forward sum of a sequence at each point ")
                        (reparse-symbol indented_block_body) [2813 2993])
                    ("add_disc_sum_rew" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3019 3023])
                            ("batch" variable nil (reparse-symbol function_parameters) [3025 3030])
                            ("gamma" variable nil (reparse-symbol function_parameters) [3032 3037]))                          
                        :documentation " Adds discounted sum of rewards to all time steps of all trajectories
        Args:
        batch: as returned by sampler.get_batch()
        gamma: discount

        Returns:
        updated batch (mutates the batch dictionary to add 'Disc_sum_rewards')
        ")
                        (reparse-symbol indented_block_body) [2998 3510])
                    ("add_value" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3541 3545])
                            ("batch" variable nil (reparse-symbol function_parameters) [3547 3552]))                          
                        :documentation " Adds estimated value to all time steps of all trajectories
        Args:
        batch: as returned by sampler.get_batch()
 
        
        Returns:
        updated batch (mutates batch dictionary to add 'Values')
        ")
                        (reparse-symbol indented_block_body) [3527 3964])
                    ("add_gae" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3981 3985])
                            ("batch" variable nil (reparse-symbol function_parameters) [3987 3992])
                            ("gamma" variable nil (reparse-symbol function_parameters) [3994 3999])
                            ("lam" variable nil (reparse-symbol function_parameters) [4001 4004]))                          
                        :documentation " Add generalized advantage estimator.
        https://arxiv.org/pdf/1506.02438.pdf
        Args:
        batch: as returned by sampler.get_batch(), must include 'Values' key from add_value().
        gamma: reward discount
        lam: lambda (see paper).
        lam=0 : use TD residuals
        lam=1 : A =  Sum Discounted Rewards - V_hat(s)
        
        Returns:
        updated batch (mutates batch dictionary to add 'Advantages')
        ")
                        (reparse-symbol indented_block_body) [3969 4876])
                    ("build_train_set" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4913 4917])
                            ("batch" variable nil (reparse-symbol function_parameters) [4919 4924]))                          
                        :documentation "
        Args:
        batch: batch after processing by add_disc_sum_rew(),
        add_value(), and add_gae()
        
        Returns: dictionary with keys \"Observations\", \"Actions\", \"Advantages\", \"Disc_sum_rew\"
        ")
                        (reparse-symbol indented_block_body) [4893 5861])
                    ("log_batch_stats" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5899 5903])
                            ("Observations" variable nil (reparse-symbol function_parameters) [5905 5917])
                            ("Actions" variable nil (reparse-symbol function_parameters) [5919 5926])
                            ("Advantages" variable nil (reparse-symbol function_parameters) [5928 5938])
                            ("Disc_sum_rew" variable nil (reparse-symbol function_parameters) [5940 5952])
                            ("iteration" variable nil (reparse-symbol function_parameters) [5954 5963]))                          
                        :documentation " Log various batch statistics ")
                        (reparse-symbol indented_block_body) [5879 6707])
                    ("update" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6736 6740])
                            ("batch" variable nil (reparse-symbol function_parameters) [6742 6747])
                            ("itr" variable nil (reparse-symbol function_parameters) [6749 6752]))                          )
                        (reparse-symbol indented_block_body) [6725 8020])
                    ("train" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8043 8047]))                          )
                        (reparse-symbol indented_block_body) [8033 9018])
                    ("exit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9044 9048]))                          )
                        (reparse-symbol indented_block_body) [9035 9208]))                  
                :type "class")
                nil [185 9208]))          
      :file "ddpg_agent.py"
      :pointmax 9208
      :fsize 9207
      :lastmodtime '(23164 57521 0 0)
      :unmatched-syntax nil))
  :file "!Users!xiaoli!Google Drive!PHD_research!projects!docker!docker_home!rlfps!rl_pipeline!algo_devel!ddpg!agent!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
